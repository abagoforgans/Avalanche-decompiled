contract main {




// =====================  Runtime code  =====================


#
#  - deposit(address arg1, uint256 arg2, uint256 arg3)
#  - harvest()
#  - initialize(address arg1, uint256 arg2, address arg3, address arg4, address arg5)
#  - withdraw(address arg1, uint256 arg2, uint256 arg3)
#  - claimReward(address arg1)
#  - withdrawAVAX(address arg1, uint256 arg2, uint256 arg3)
#  - _fallback()
#
address owner;
uint8 paused;
address token0Address;
address token1Address;
uint256 sub_9ddc230a;
uint256 sub_3266f45c;
address lpTokenAddress;
address rewardTokenAddress;
address masterChefAddress;
uint32 stor208;
uint256 stor208; offset 32
uint256 poolId;
address treasuryAddress;
address stor210;
uint256 sub_b1a41085;
uint256 sub_0b55d7c3;
uint256 sub_c8af9d6a;
mapping of uint256 sub_be892f00;
address sub_34cecdebAddress;
uint256 sub_924ac200;
mapping of struct userInfo;

function sub_0b55d7c3(?) {
    return sub_0b55d7c3
}

function token0() {
    return token0Address
}

function userInfo(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return userInfo[arg1].field_0, userInfo[arg1].field_256
}

function sub_3266f45c(?) {
    return sub_3266f45c
}

function sub_34cecdeb(?) {
    return sub_34cecdebAddress
}

function poolId() {
    return poolId
}

function getUserBalance(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return userInfo[address(arg1)].field_0
}

function masterChef() {
    return masterChefAddress
}

function paused() {
    return bool(paused)
}

function lpToken() {
    return lpTokenAddress
}

function treasury() {
    return treasuryAddress
}

function owner() {
    return owner
}

function sub_924ac200(?) {
    return sub_924ac200
}

function sub_9ddc230a(?) {
    return sub_9ddc230a
}

function sub_b1a41085(?) {
    return sub_b1a41085
}

function sub_be892f00(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_be892f00[address(arg1)]
}

function sub_c8af9d6a(?) {
    return sub_c8af9d6a
}

function token1() {
    return token1Address
}

function rewardToken() {
    return rewardTokenAddress
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_a99c5da2(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_0b55d7c3 = arg1
}

function setBot(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor210 = arg1
}

function setTreasury(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    treasuryAddress = arg1
}

function pauseContract() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function unpauseContract() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function setYieldFeePerc(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 3000:
        revert with 0, 'Invalid yield fee percentage'
    sub_b1a41085 = arg1
}

function getAllPool() {
    require ext_code.size(masterChefAddress)
    staticcall masterChefAddress.userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args poolId, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    return ext_call.return_data[0]
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function getUserPendingReward(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if userInfo[address(arg1)].field_0 and sub_c8af9d6a > -1 / userInfo[address(arg1)].field_0:
        revert with 0, 17
    if userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18 < userInfo[address(arg1)].field_256:
        revert with 0, 17
    if 0 == sub_924ac200:
        return ((userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - userInfo[address(arg1)].field_256)
    if (userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - userInfo[address(arg1)].field_256 > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
        revert with 0, 17
    if not sub_924ac200:
        revert with 0, 18
    require ext_code.size(sub_34cecdebAddress)
    staticcall sub_34cecdebAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= sub_924ac200:
        return ((userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - userInfo[address(arg1)].field_256)
    if ext_call.return_data[0] < sub_924ac200:
        revert with 0, 17
    if ext_call.return_data[0] - sub_924ac200 and (10^18 * userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - (10^18 * userInfo[address(arg1)].field_256) / sub_924ac200 > -1 / ext_call.return_data[0] - sub_924ac200:
        revert with 0, 17
    if (userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - userInfo[address(arg1)].field_256 > !((ext_call.return_data[0] * (10^18 * userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - (10^18 * userInfo[address(arg1)].field_256) / sub_924ac200) - (sub_924ac200 * (10^18 * userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - (10^18 * userInfo[address(arg1)].field_256) / sub_924ac200) / 10^18):
        revert with 0, 17
    return ((userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - userInfo[address(arg1)].field_256 + ((ext_call.return_data[0] * (10^18 * userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - (10^18 * userInfo[address(arg1)].field_256) / sub_924ac200) - (sub_924ac200 * (10^18 * userInfo[address(arg1)].field_0 * sub_c8af9d6a / 1000000000000000000 * 10^18) - (10^18 * userInfo[address(arg1)].field_256) / sub_924ac200) / 10^18))
}

function sub_616094a7(?) {
    mem[96] = 0xffcd426300000000000000000000000000000000000000000000000000000000
    mem[100] = poolId
    mem[132] = this.address
    require ext_code.size(masterChefAddress)
    staticcall masterChefAddress.pendingTokens(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args poolId, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 128
    _4 = mem[96 len 4], Mask(224, 0, stor208.field_32)
    require uint32(stor208.field_0), Mask(224, 32, this.address) >> 32 == Mask(160, 32, this.address) >> 32
    _6 = uint32(this.address), mem[164 len 28]
    require uint32(this.address), mem[164 len 28] <= test266151307()
    require uint32(this.address), mem[164 len 28] + 127 < return_data.size + 96
    _7 = mem[uint32(this.address), mem[164 len 28] + 96]
    if mem[uint32(this.address), mem[164 len 28] + 96] > test266151307():
        revert with 0, 65
    if ceil32(ceil32(mem[uint32(this.address), mem[164 len 28] + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[uint32(this.address), mem[164 len 28] + 96])) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[uint32(this.address), mem[164 len 28] + 96])) + 97
    mem[ceil32(return_data.size) + 96] = _7
    require _6 + _7 + 32 <= return_data.size
    mem[ceil32(return_data.size) + 128 len ceil32(_7)] = mem[_6 + 128 len ceil32(_7)]
    if ceil32(_7) <= _7:
        _25 = mem[192]
        mem[mem[64] + 4] = this.address
        require ext_code.size(0x6e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd)
        staticcall 0x6e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _31 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if _4 > !mem[_31]:
            revert with 0, 17
        mem[mem[64]] = _4 + mem[_31]
        return mem[mem[64]], _25
    mem[_7 + ceil32(return_data.size) + 128] = 0
    _26 = mem[192]
    mem[mem[64] + 4] = this.address
    require ext_code.size(0x6e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd)
    staticcall 0x6e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _32 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    if _4 > !mem[_32]:
        revert with 0, 17
    mem[mem[64]] = _4 + mem[_32]
    return mem[mem[64]], _26
}

function sub_f2905826(?) {
    require ext_code.size(0xa77230d17318075983913bc2145db16c7366156)
    staticcall 0xa77230d17318075983913bc2145db16c7366156.latestAnswer() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'ChainLink error'
    require ext_code.size(lpTokenAddress)
    staticcall lpTokenAddress.getReserves() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token0Address:
        if not sub_3266f45c:
            mem[(2 * ceil32(return_data.size)) + 96] = 2
            mem[(2 * ceil32(return_data.size)) + 128] = token1Address
            mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
            mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[(2 * ceil32(return_data.size)) + 196] = 1
            mem[(2 * ceil32(return_data.size)) + 228] = 64
            mem[(2 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (2 * ceil32(return_data.size)) + 128
            t = (2 * ceil32(return_data.size)) + 292
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (4 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _1249 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
            require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
            require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
            _1258 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
            if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                revert with 0, 65
            mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
            mem[(4 * ceil32(return_data.size)) + 192] = _1258
            require _1249 + (32 * _1258) + 32 <= return_data.size
            mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1258)] = mem[(2 * ceil32(return_data.size)) + _1249 + 224 len ceil32(32 * _1258)]
            if 1 >= _1258:
                revert with 0, 50
            _2377 = mem[(4 * ceil32(return_data.size)) + 256]
            if not sub_3266f45c:
                if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 17
                if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                    revert with 0, 17
                require ext_code.size(lpTokenAddress)
                staticcall lpTokenAddress.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2425 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2377) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                    revert with 0, 17
                if not mem[_2425]:
                    revert with 0, 18
                if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377) / mem[_2425] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377) / mem[_2425]:
                    revert with 0, 17
                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377) / mem[_2425] * ext_call.return_data[0] / 100 * 10^18
            else:
                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not 10^sub_3266f45c:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2461 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2377 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2461]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / 10^sub_3266f45c) / mem[_2461] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / 10^sub_3266f45c) / mem[_2461]:
                        revert with 0, 17
                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / 10^sub_3266f45c) / mem[_2461] * ext_call.return_data[0] / 100 * 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_3266f45c
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3568 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2377 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3568]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / s * t) / mem[_3568] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / s * t) / mem[_3568]:
                        revert with 0, 17
                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2377 / s * t) / mem[_3568] * ext_call.return_data[0] / 100 * 10^18
        else:
            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token1Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_3266f45c
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^sub_3266f45c, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1248 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1257 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1257
                require _1248 + (32 * _1257) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1257)] = mem[(2 * ceil32(return_data.size)) + _1248 + 224 len ceil32(32 * _1257)]
                if 1 >= _1257:
                    revert with 0, 50
                _2376 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2424 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2376) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2424]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376) / mem[_2424] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376) / mem[_2424]:
                        revert with 0, 17
                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376) / mem[_2424] * ext_call.return_data[0] / 100 * 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2460 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2376 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2460]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / 10^sub_3266f45c) / mem[_2460] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / 10^sub_3266f45c) / mem[_2460]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / 10^sub_3266f45c) / mem[_2460] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3567 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2376 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3567]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / s * t) / mem[_3567] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / s * t) / mem[_3567]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2376 / s * t) / mem[_3567] * ext_call.return_data[0] / 100 * 10^18
            else:
                s = 10
                t = 1
                idx = sub_3266f45c
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token1Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = s * t
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                u = (2 * ceil32(return_data.size)) + 128
                v = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[v] = mem[u + 12 len 20]
                    idx = idx + 1
                    u = u + 32
                    v = v + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2386 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _2389 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _2389
                require _2386 + (32 * _2389) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2389)] = mem[(2 * ceil32(return_data.size)) + _2386 + 224 len ceil32(32 * _2389)]
                if 1 >= _2389:
                    revert with 0, 50
                _3462 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3614 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3462) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3614]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462) / mem[_3614] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462) / mem[_3614]:
                        revert with 0, 17
                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462) / mem[_3614] * ext_call.return_data[0] / 100 * 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3660 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3462 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3660]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / 10^sub_3266f45c) / mem[_3660] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / 10^sub_3266f45c) / mem[_3660]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / 10^sub_3266f45c) / mem[_3660] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4540 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3462 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_4540]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / s * t) / mem[_4540] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / s * t) / mem[_4540]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3462 / s * t) / mem[_4540] * ext_call.return_data[0] / 100 * 10^18
    else:
        if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token1Address:
            if not sub_9ddc230a:
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 1
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1247 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1256 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1256
                require _1247 + (32 * _1256) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1256)] = mem[(2 * ceil32(return_data.size)) + _1247 + 224 len ceil32(32 * _1256)]
                if 1 >= _1256:
                    revert with 0, 50
                _2375 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2423 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2375) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2423]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375) / mem[_2423] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375) / mem[_2423]:
                        revert with 0, 17
                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375) / mem[_2423] * ext_call.return_data[0] / 100 * 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2459 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2375 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2459]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / 10^sub_9ddc230a) / mem[_2459] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / 10^sub_9ddc230a) / mem[_2459]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / 10^sub_9ddc230a) / mem[_2459] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3566 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2375 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3566]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / s * t) / mem[_3566] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / s * t) / mem[_3566]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2375 / s * t) / mem[_3566] * ext_call.return_data[0] / 100 * 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (2 * ceil32(return_data.size)) + 128
                    t = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1246 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _1255 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _1255
                    require _1246 + (32 * _1255) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1255)] = mem[(2 * ceil32(return_data.size)) + _1246 + 224 len ceil32(32 * _1255)]
                    if 1 >= _1255:
                        revert with 0, 50
                    _2374 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2422 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2374) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2422]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374) / mem[_2422] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374) / mem[_2422]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374) / mem[_2422] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2458 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2374 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_2458]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / 10^sub_9ddc230a) / mem[_2458] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / 10^sub_9ddc230a) / mem[_2458]:
                                revert with 0, 17
                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / 10^sub_9ddc230a) / mem[_2458] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3565 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2374 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3565]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / s * t) / mem[_3565] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / s * t) / mem[_3565]:
                                revert with 0, 17
                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2374 / s * t) / mem[_3565] * ext_call.return_data[0] / 100 * 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = s * t
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (2 * ceil32(return_data.size)) + 128
                    v = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2385 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _2388 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _2388
                    require _2385 + (32 * _2388) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2388)] = mem[(2 * ceil32(return_data.size)) + _2385 + 224 len ceil32(32 * _2388)]
                    if 1 >= _2388:
                        revert with 0, 50
                    _3461 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3613 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3461) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3613]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461) / mem[_3613] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461) / mem[_3613]:
                            revert with 0, 17
                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461) / mem[_3613] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3461 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3659]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / 10^sub_9ddc230a) / mem[_3659] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / 10^sub_9ddc230a) / mem[_3659]:
                                revert with 0, 17
                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / 10^sub_9ddc230a) / mem[_3659] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4539 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3461 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4539]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / s * t) / mem[_4539] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / s * t) / mem[_4539]:
                                revert with 0, 17
                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3461 / s * t) / mem[_4539] * ext_call.return_data[0] / 100 * 10^18
        else:
            if not sub_9ddc230a:
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 1
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1245 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1254 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1254
                require _1245 + (32 * _1254) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1254)] = mem[(2 * ceil32(return_data.size)) + _1245 + 224 len ceil32(32 * _1254)]
                if 1 >= _1254:
                    revert with 0, 50
                _2373 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if not sub_3266f45c:
                        _2428 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_2428]:
                            revert with 0, 50
                        mem[_2428 + 32] = token1Address
                        if 1 >= mem[_2428]:
                            revert with 0, 50
                        mem[_2428 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                        mem[_2428 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_2428 + 100] = 1
                        mem[_2428 + 132] = 64
                        mem[_2428 + 164] = mem[_2428]
                        idx = 0
                        s = _2428 + 32
                        t = _2428 + 196
                        while idx < mem[_2428]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                        staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _2428 + (32 * mem[_2428]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3494 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3506 = mem[_3494]
                        require mem[_3494] <= test266151307()
                        require _3494 + mem[_3494] + 31 < _3494 + return_data.size
                        _3518 = mem[_3494 + mem[_3494]]
                        if mem[_3494 + mem[_3494]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_3494 + mem[_3494]]) + 1 < 0 or _3494 + ceil32(return_data.size) + ceil32(32 * mem[_3494 + mem[_3494]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _3494 + ceil32(return_data.size) + ceil32(32 * mem[_3494 + mem[_3494]]) + 1
                        mem[_3494 + ceil32(return_data.size)] = _3518
                        require _3506 + (32 * _3518) + 32 <= return_data.size
                        mem[_3494 + ceil32(return_data.size) + 32 len ceil32(32 * _3518)] = mem[_3494 + _3506 + 32 len ceil32(32 * _3518)]
                        if 1 >= _3518:
                            revert with 0, 50
                        _4422 = mem[_3494 + ceil32(return_data.size) + 64]
                        if not sub_3266f45c:
                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3494 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3494 + ceil32(return_data.size) + 64]):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4602 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4422) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4602]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602]:
                                revert with 0, 17
                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3494 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not 10^sub_3266f45c:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3494 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4652 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4652]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3494 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3494 + ceil32(return_data.size) + 64] / s * t):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5241 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5241]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5241] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5241]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5241] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                            _2469 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2469]:
                                revert with 0, 50
                            mem[_2469 + 32] = token1Address
                            if 1 >= mem[_2469]:
                                revert with 0, 50
                            mem[_2469 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2469 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2469 + 100] = 10^sub_3266f45c
                            mem[_2469 + 132] = 64
                            mem[_2469 + 164] = mem[_2469]
                            idx = 0
                            s = _2469 + 32
                            t = _2469 + 196
                            while idx < mem[_2469]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2469 + (32 * mem[_2469]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3493 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3505 = mem[_3493]
                            require mem[_3493] <= test266151307()
                            require _3493 + mem[_3493] + 31 < _3493 + return_data.size
                            _3517 = mem[_3493 + mem[_3493]]
                            if mem[_3493 + mem[_3493]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3493 + mem[_3493]]) + 1 < 0 or _3493 + ceil32(return_data.size) + ceil32(32 * mem[_3493 + mem[_3493]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3493 + ceil32(return_data.size) + ceil32(32 * mem[_3493 + mem[_3493]]) + 1
                            mem[_3493 + ceil32(return_data.size)] = _3517
                            require _3505 + (32 * _3517) + 32 <= return_data.size
                            mem[_3493 + ceil32(return_data.size) + 32 len ceil32(32 * _3517)] = mem[_3493 + _3505 + 32 len ceil32(32 * _3517)]
                            if 1 >= _3517:
                                revert with 0, 50
                            _4421 = mem[_3493 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4601 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4421) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4601]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421) / mem[_4601] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421) / mem[_4601]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421) / mem[_4601] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4651 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4421 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4651]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / 10^sub_3266f45c) / mem[_4651] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / 10^sub_3266f45c) / mem[_4651]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / 10^sub_3266f45c) / mem[_4651] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5240 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _4421 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5240]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / s * t) / mem[_5240] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / s * t) / mem[_5240]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4421 / s * t) / mem[_5240] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_3266f45c
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            _3491 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3491]:
                                revert with 0, 50
                            mem[_3491 + 32] = token1Address
                            if 1 >= mem[_3491]:
                                revert with 0, 50
                            mem[_3491 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3491 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3491 + 100] = s * t
                            mem[_3491 + 132] = 64
                            mem[_3491 + 164] = mem[_3491]
                            idx = 0
                            s = _3491 + 32
                            t = _3491 + 196
                            while idx < mem[_3491]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3491 + (32 * mem[_3491]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4462 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4478 = mem[_4462]
                            require mem[_4462] <= test266151307()
                            require _4462 + mem[_4462] + 31 < _4462 + return_data.size
                            _4494 = mem[_4462 + mem[_4462]]
                            if mem[_4462 + mem[_4462]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4462 + mem[_4462]]) + 1 < 0 or _4462 + ceil32(return_data.size) + ceil32(32 * mem[_4462 + mem[_4462]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4462 + ceil32(return_data.size) + ceil32(32 * mem[_4462 + mem[_4462]]) + 1
                            mem[_4462 + ceil32(return_data.size)] = _4494
                            require _4478 + (32 * _4494) + 32 <= return_data.size
                            mem[_4462 + ceil32(return_data.size) + 32 len ceil32(32 * _4494)] = mem[_4462 + _4478 + 32 len ceil32(32 * _4494)]
                            if 1 >= _4494:
                                revert with 0, 50
                            _5172 = mem[_4462 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5299 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _5172) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5299]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5349 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5349]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5687 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373) + (Mask(112, 0, ext_call.return_data[32]) * _5172 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5687]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / s * t) / mem[_5687] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / s * t) / mem[_5687]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / s * t) / mem[_5687] * ext_call.return_data[0] / 100 * 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _2467 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2467]:
                                revert with 0, 50
                            mem[_2467 + 32] = token1Address
                            if 1 >= mem[_2467]:
                                revert with 0, 50
                            mem[_2467 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2467 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2467 + 100] = 1
                            mem[_2467 + 132] = 64
                            mem[_2467 + 164] = mem[_2467]
                            idx = 0
                            s = _2467 + 32
                            t = _2467 + 196
                            while idx < mem[_2467]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2467 + (32 * mem[_2467]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3490 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3504 = mem[_3490]
                            require mem[_3490] <= test266151307()
                            require _3490 + mem[_3490] + 31 < _3490 + return_data.size
                            _3516 = mem[_3490 + mem[_3490]]
                            if mem[_3490 + mem[_3490]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3490 + mem[_3490]]) + 1 < 0 or _3490 + ceil32(return_data.size) + ceil32(32 * mem[_3490 + mem[_3490]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3490 + ceil32(return_data.size) + ceil32(32 * mem[_3490 + mem[_3490]]) + 1
                            mem[_3490 + ceil32(return_data.size)] = _3516
                            require _3504 + (32 * _3516) + 32 <= return_data.size
                            mem[_3490 + ceil32(return_data.size) + 32 len ceil32(32 * _3516)] = mem[_3490 + _3504 + 32 len ceil32(32 * _3516)]
                            if 1 >= _3516:
                                revert with 0, 50
                            _4420 = mem[_3490 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3490 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3490 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4600 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4420) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4600]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420) / mem[_4600] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420) / mem[_4600]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420) / mem[_4600] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3490 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3490 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4650 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4420 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4650]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / 10^sub_3266f45c) / mem[_4650] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / 10^sub_3266f45c) / mem[_4650]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / 10^sub_3266f45c) / mem[_4650] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3490 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3490 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5239 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4420 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5239]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / s * t) / mem[_5239] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / s * t) / mem[_5239]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4420 / s * t) / mem[_5239] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2528 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2528]:
                                    revert with 0, 50
                                mem[_2528 + 32] = token1Address
                                if 1 >= mem[_2528]:
                                    revert with 0, 50
                                mem[_2528 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2528 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2528 + 100] = 10^sub_3266f45c
                                mem[_2528 + 132] = 64
                                mem[_2528 + 164] = mem[_2528]
                                idx = 0
                                s = _2528 + 32
                                t = _2528 + 196
                                while idx < mem[_2528]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2528 + (32 * mem[_2528]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3489 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3503 = mem[_3489]
                                require mem[_3489] <= test266151307()
                                require _3489 + mem[_3489] + 31 < _3489 + return_data.size
                                _3515 = mem[_3489 + mem[_3489]]
                                if mem[_3489 + mem[_3489]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3489 + mem[_3489]]) + 1 < 0 or _3489 + ceil32(return_data.size) + ceil32(32 * mem[_3489 + mem[_3489]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3489 + ceil32(return_data.size) + ceil32(32 * mem[_3489 + mem[_3489]]) + 1
                                mem[_3489 + ceil32(return_data.size)] = _3515
                                require _3503 + (32 * _3515) + 32 <= return_data.size
                                mem[_3489 + ceil32(return_data.size) + 32 len ceil32(32 * _3515)] = mem[_3489 + _3503 + 32 len ceil32(32 * _3515)]
                                if 1 >= _3515:
                                    revert with 0, 50
                                _4419 = mem[_3489 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4419) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4599]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419) / mem[_4599] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419) / mem[_4599]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419) / mem[_4599] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4649 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4419 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4649]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / 10^sub_3266f45c) / mem[_4649] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / 10^sub_3266f45c) / mem[_4649]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / 10^sub_3266f45c) / mem[_4649] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5238 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4419 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5238]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / s * t) / mem[_5238] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / s * t) / mem[_5238]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4419 / s * t) / mem[_5238] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3487 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3487]:
                                    revert with 0, 50
                                mem[_3487 + 32] = token1Address
                                if 1 >= mem[_3487]:
                                    revert with 0, 50
                                mem[_3487 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3487 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3487 + 100] = s * t
                                mem[_3487 + 132] = 64
                                mem[_3487 + 164] = mem[_3487]
                                idx = 0
                                s = _3487 + 32
                                t = _3487 + 196
                                while idx < mem[_3487]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3487 + (32 * mem[_3487]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4461 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4477 = mem[_4461]
                                require mem[_4461] <= test266151307()
                                require _4461 + mem[_4461] + 31 < _4461 + return_data.size
                                _4493 = mem[_4461 + mem[_4461]]
                                if mem[_4461 + mem[_4461]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4461 + mem[_4461]]) + 1 < 0 or _4461 + ceil32(return_data.size) + ceil32(32 * mem[_4461 + mem[_4461]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4461 + ceil32(return_data.size) + ceil32(32 * mem[_4461 + mem[_4461]]) + 1
                                mem[_4461 + ceil32(return_data.size)] = _4493
                                require _4477 + (32 * _4493) + 32 <= return_data.size
                                mem[_4461 + ceil32(return_data.size) + 32 len ceil32(32 * _4493)] = mem[_4461 + _4477 + 32 len ceil32(32 * _4493)]
                                if 1 >= _4493:
                                    revert with 0, 50
                                _5171 = mem[_4461 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5298 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5171) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5298]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5348 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5348]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5686 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5686]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _3577 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3577]:
                                revert with 0, 50
                            mem[_3577 + 32] = token1Address
                            if 1 >= mem[_3577]:
                                revert with 0, 50
                            mem[_3577 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3577 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3577 + 100] = 1
                            mem[_3577 + 132] = 64
                            mem[_3577 + 164] = mem[_3577]
                            idx = 0
                            u = _3577 + 32
                            v = _3577 + 196
                            while idx < mem[_3577]:
                                mem[v] = mem[u + 12 len 20]
                                idx = idx + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3577 + (32 * mem[_3577]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4460 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4476 = mem[_4460]
                            require mem[_4460] <= test266151307()
                            require _4460 + mem[_4460] + 31 < _4460 + return_data.size
                            _4492 = mem[_4460 + mem[_4460]]
                            if mem[_4460 + mem[_4460]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4460 + mem[_4460]]) + 1 < 0 or _4460 + ceil32(return_data.size) + ceil32(32 * mem[_4460 + mem[_4460]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4460 + ceil32(return_data.size) + ceil32(32 * mem[_4460 + mem[_4460]]) + 1
                            mem[_4460 + ceil32(return_data.size)] = _4492
                            require _4476 + (32 * _4492) + 32 <= return_data.size
                            mem[_4460 + ceil32(return_data.size) + 32 len ceil32(32 * _4492)] = mem[_4460 + _4476 + 32 len ceil32(32 * _4492)]
                            if 1 >= _4492:
                                revert with 0, 50
                            _5170 = mem[_4460 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5297 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5170) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5297]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5347 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5347]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not u * v:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64] / u * v):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5685 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5170 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5685]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / u * v) / mem[_5685] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / u * v) / mem[_5685]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / u * v) / mem[_5685] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3629 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3629]:
                                    revert with 0, 50
                                mem[_3629 + 32] = token1Address
                                if 1 >= mem[_3629]:
                                    revert with 0, 50
                                mem[_3629 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3629 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3629 + 100] = 10^sub_3266f45c
                                mem[_3629 + 132] = 64
                                mem[_3629 + 164] = mem[_3629]
                                idx = 0
                                u = _3629 + 32
                                v = _3629 + 196
                                while idx < mem[_3629]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3629 + (32 * mem[_3629]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4459 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4475 = mem[_4459]
                                require mem[_4459] <= test266151307()
                                require _4459 + mem[_4459] + 31 < _4459 + return_data.size
                                _4491 = mem[_4459 + mem[_4459]]
                                if mem[_4459 + mem[_4459]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4459 + mem[_4459]]) + 1 < 0 or _4459 + ceil32(return_data.size) + ceil32(32 * mem[_4459 + mem[_4459]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4459 + ceil32(return_data.size) + ceil32(32 * mem[_4459 + mem[_4459]]) + 1
                                mem[_4459 + ceil32(return_data.size)] = _4491
                                require _4475 + (32 * _4491) + 32 <= return_data.size
                                mem[_4459 + ceil32(return_data.size) + 32 len ceil32(32 * _4491)] = mem[_4459 + _4475 + 32 len ceil32(32 * _4491)]
                                if 1 >= _4491:
                                    revert with 0, 50
                                _5169 = mem[_4459 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4459 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4459 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5296 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5169) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5296]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4459 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4459 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5346 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5346]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4459 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4459 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5684 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5169 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5684]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / u * v) / mem[_5684] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / u * v) / mem[_5684]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / u * v) / mem[_5684] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                u = 10
                                v = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                _4457 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4457]:
                                    revert with 0, 50
                                mem[_4457 + 32] = token1Address
                                if 1 >= mem[_4457]:
                                    revert with 0, 50
                                mem[_4457 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4457 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4457 + 100] = u * v
                                mem[_4457 + 132] = 64
                                mem[_4457 + 164] = mem[_4457]
                                idx = 0
                                u = _4457 + 32
                                v = _4457 + 196
                                while idx < mem[_4457]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4457 + (32 * mem[_4457]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5188 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5195 = mem[_5188]
                                require mem[_5188] <= test266151307()
                                require _5188 + mem[_5188] + 31 < _5188 + return_data.size
                                _5202 = mem[_5188 + mem[_5188]]
                                if mem[_5188 + mem[_5188]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5188 + mem[_5188]]) + 1 < 0 or _5188 + ceil32(return_data.size) + ceil32(32 * mem[_5188 + mem[_5188]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5188 + ceil32(return_data.size) + ceil32(32 * mem[_5188 + mem[_5188]]) + 1
                                mem[_5188 + ceil32(return_data.size)] = _5202
                                require _5195 + (32 * _5202) + 32 <= return_data.size
                                mem[_5188 + ceil32(return_data.size) + 32 len ceil32(32 * _5202)] = mem[_5188 + _5195 + 32 len ceil32(32 * _5202)]
                                if 1 >= _5202:
                                    revert with 0, 50
                                _5645 = mem[_5188 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5188 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5188 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5719 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5645) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5719]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645) / mem[_5719] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645) / mem[_5719]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645) / mem[_5719] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5188 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5188 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5743 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5645 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5743]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / 10^sub_3266f45c) / mem[_5743] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / 10^sub_3266f45c) / mem[_5743]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / 10^sub_3266f45c) / mem[_5743] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5188 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5188 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5872 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5645 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5872]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / u * v) / mem[_5872] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / u * v) / mem[_5872]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2373 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5645 / u * v) / mem[_5872] * ext_call.return_data[0] / 100 * 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (2 * ceil32(return_data.size)) + 128
                    t = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1244 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _1253 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _1253
                    require _1244 + (32 * _1253) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1253)] = mem[(2 * ceil32(return_data.size)) + _1244 + 224 len ceil32(32 * _1253)]
                    if 1 >= _1253:
                        revert with 0, 50
                    _2372 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _2426 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2426]:
                                revert with 0, 50
                            mem[_2426 + 32] = token1Address
                            if 1 >= mem[_2426]:
                                revert with 0, 50
                            mem[_2426 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2426 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2426 + 100] = 1
                            mem[_2426 + 132] = 64
                            mem[_2426 + 164] = mem[_2426]
                            idx = 0
                            s = _2426 + 32
                            t = _2426 + 196
                            while idx < mem[_2426]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2426 + (32 * mem[_2426]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3486 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3502 = mem[_3486]
                            require mem[_3486] <= test266151307()
                            require _3486 + mem[_3486] + 31 < _3486 + return_data.size
                            _3514 = mem[_3486 + mem[_3486]]
                            if mem[_3486 + mem[_3486]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3486 + mem[_3486]]) + 1 < 0 or _3486 + ceil32(return_data.size) + ceil32(32 * mem[_3486 + mem[_3486]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3486 + ceil32(return_data.size) + ceil32(32 * mem[_3486 + mem[_3486]]) + 1
                            mem[_3486 + ceil32(return_data.size)] = _3514
                            require _3502 + (32 * _3514) + 32 <= return_data.size
                            mem[_3486 + ceil32(return_data.size) + 32 len ceil32(32 * _3514)] = mem[_3486 + _3502 + 32 len ceil32(32 * _3514)]
                            if 1 >= _3514:
                                revert with 0, 50
                            _4418 = mem[_3486 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3486 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3486 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4598 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4418) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4598]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418) / mem[_4598] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418) / mem[_4598]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418) / mem[_4598] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3486 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3486 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4648 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4418 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4648]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / 10^sub_3266f45c) / mem[_4648] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / 10^sub_3266f45c) / mem[_4648]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / 10^sub_3266f45c) / mem[_4648] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3486 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3486 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5236 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4418 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5236]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / s * t) / mem[_5236] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / s * t) / mem[_5236]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4418 / s * t) / mem[_5236] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2464 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2464]:
                                    revert with 0, 50
                                mem[_2464 + 32] = token1Address
                                if 1 >= mem[_2464]:
                                    revert with 0, 50
                                mem[_2464 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2464 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2464 + 100] = 10^sub_3266f45c
                                mem[_2464 + 132] = 64
                                mem[_2464 + 164] = mem[_2464]
                                idx = 0
                                s = _2464 + 32
                                t = _2464 + 196
                                while idx < mem[_2464]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2464 + (32 * mem[_2464]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3485 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3501 = mem[_3485]
                                require mem[_3485] <= test266151307()
                                require _3485 + mem[_3485] + 31 < _3485 + return_data.size
                                _3513 = mem[_3485 + mem[_3485]]
                                if mem[_3485 + mem[_3485]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3485 + mem[_3485]]) + 1 < 0 or _3485 + ceil32(return_data.size) + ceil32(32 * mem[_3485 + mem[_3485]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3485 + ceil32(return_data.size) + ceil32(32 * mem[_3485 + mem[_3485]]) + 1
                                mem[_3485 + ceil32(return_data.size)] = _3513
                                require _3501 + (32 * _3513) + 32 <= return_data.size
                                mem[_3485 + ceil32(return_data.size) + 32 len ceil32(32 * _3513)] = mem[_3485 + _3501 + 32 len ceil32(32 * _3513)]
                                if 1 >= _3513:
                                    revert with 0, 50
                                _4417 = mem[_3485 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3485 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3485 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4417) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4597]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417) / mem[_4597] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417) / mem[_4597]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417) / mem[_4597] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3485 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3485 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4647 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4417 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4647]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / 10^sub_3266f45c) / mem[_4647] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / 10^sub_3266f45c) / mem[_4647]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / 10^sub_3266f45c) / mem[_4647] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3485 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3485 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5235 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _4417 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5235]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / s * t) / mem[_5235] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / s * t) / mem[_5235]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4417 / s * t) / mem[_5235] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3483 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3483]:
                                    revert with 0, 50
                                mem[_3483 + 32] = token1Address
                                if 1 >= mem[_3483]:
                                    revert with 0, 50
                                mem[_3483 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3483 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3483 + 100] = s * t
                                mem[_3483 + 132] = 64
                                mem[_3483 + 164] = mem[_3483]
                                idx = 0
                                s = _3483 + 32
                                t = _3483 + 196
                                while idx < mem[_3483]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3483 + (32 * mem[_3483]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4456 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4474 = mem[_4456]
                                require mem[_4456] <= test266151307()
                                require _4456 + mem[_4456] + 31 < _4456 + return_data.size
                                _4490 = mem[_4456 + mem[_4456]]
                                if mem[_4456 + mem[_4456]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4456 + mem[_4456]]) + 1 < 0 or _4456 + ceil32(return_data.size) + ceil32(32 * mem[_4456 + mem[_4456]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4456 + ceil32(return_data.size) + ceil32(32 * mem[_4456 + mem[_4456]]) + 1
                                mem[_4456 + ceil32(return_data.size)] = _4490
                                require _4474 + (32 * _4490) + 32 <= return_data.size
                                mem[_4456 + ceil32(return_data.size) + 32 len ceil32(32 * _4490)] = mem[_4456 + _4474 + 32 len ceil32(32 * _4490)]
                                if 1 >= _4490:
                                    revert with 0, 50
                                _5168 = mem[_4456 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5295 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _5168) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5295]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5345 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5345]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5683 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372) + (Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5683]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _2462 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2462]:
                                    revert with 0, 50
                                mem[_2462 + 32] = token1Address
                                if 1 >= mem[_2462]:
                                    revert with 0, 50
                                mem[_2462 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2462 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2462 + 100] = 1
                                mem[_2462 + 132] = 64
                                mem[_2462 + 164] = mem[_2462]
                                idx = 0
                                s = _2462 + 32
                                t = _2462 + 196
                                while idx < mem[_2462]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2462 + (32 * mem[_2462]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3482 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3500 = mem[_3482]
                                require mem[_3482] <= test266151307()
                                require _3482 + mem[_3482] + 31 < _3482 + return_data.size
                                _3512 = mem[_3482 + mem[_3482]]
                                if mem[_3482 + mem[_3482]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3482 + mem[_3482]]) + 1 < 0 or _3482 + ceil32(return_data.size) + ceil32(32 * mem[_3482 + mem[_3482]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3482 + ceil32(return_data.size) + ceil32(32 * mem[_3482 + mem[_3482]]) + 1
                                mem[_3482 + ceil32(return_data.size)] = _3512
                                require _3500 + (32 * _3512) + 32 <= return_data.size
                                mem[_3482 + ceil32(return_data.size) + 32 len ceil32(32 * _3512)] = mem[_3482 + _3500 + 32 len ceil32(32 * _3512)]
                                if 1 >= _3512:
                                    revert with 0, 50
                                _4416 = mem[_3482 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3482 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3482 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4596 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4416) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4596]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416) / mem[_4596] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416) / mem[_4596]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416) / mem[_4596] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3482 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3482 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4646 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4416 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4646]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / 10^sub_3266f45c) / mem[_4646] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / 10^sub_3266f45c) / mem[_4646]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / 10^sub_3266f45c) / mem[_4646] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3482 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3482 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5234 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4416 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5234]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / s * t) / mem[_5234] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / s * t) / mem[_5234]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4416 / s * t) / mem[_5234] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _2521 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_2521]:
                                        revert with 0, 50
                                    mem[_2521 + 32] = token1Address
                                    if 1 >= mem[_2521]:
                                        revert with 0, 50
                                    mem[_2521 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_2521 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_2521 + 100] = 10^sub_3266f45c
                                    mem[_2521 + 132] = 64
                                    mem[_2521 + 164] = mem[_2521]
                                    idx = 0
                                    s = _2521 + 32
                                    t = _2521 + 196
                                    while idx < mem[_2521]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _2521 + (32 * mem[_2521]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3481 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3499 = mem[_3481]
                                    require mem[_3481] <= test266151307()
                                    require _3481 + mem[_3481] + 31 < _3481 + return_data.size
                                    _3511 = mem[_3481 + mem[_3481]]
                                    if mem[_3481 + mem[_3481]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_3481 + mem[_3481]]) + 1 < 0 or _3481 + ceil32(return_data.size) + ceil32(32 * mem[_3481 + mem[_3481]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _3481 + ceil32(return_data.size) + ceil32(32 * mem[_3481 + mem[_3481]]) + 1
                                    mem[_3481 + ceil32(return_data.size)] = _3511
                                    require _3499 + (32 * _3511) + 32 <= return_data.size
                                    mem[_3481 + ceil32(return_data.size) + 32 len ceil32(32 * _3511)] = mem[_3481 + _3499 + 32 len ceil32(32 * _3511)]
                                    if 1 >= _3511:
                                        revert with 0, 50
                                    _4415 = mem[_3481 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3481 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3481 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4595 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4415) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4595]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415) / mem[_4595] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415) / mem[_4595]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415) / mem[_4595] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3481 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3481 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _4645 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4415 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_4645]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / 10^sub_3266f45c) / mem[_4645] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / 10^sub_3266f45c) / mem[_4645]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / 10^sub_3266f45c) / mem[_4645] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3481 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3481 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5233 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4415 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5233]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / s * t) / mem[_5233] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / s * t) / mem[_5233]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4415 / s * t) / mem[_5233] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _3479 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3479]:
                                        revert with 0, 50
                                    mem[_3479 + 32] = token1Address
                                    if 1 >= mem[_3479]:
                                        revert with 0, 50
                                    mem[_3479 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3479 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3479 + 100] = s * t
                                    mem[_3479 + 132] = 64
                                    mem[_3479 + 164] = mem[_3479]
                                    idx = 0
                                    s = _3479 + 32
                                    t = _3479 + 196
                                    while idx < mem[_3479]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3479 + (32 * mem[_3479]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4455 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4473 = mem[_4455]
                                    require mem[_4455] <= test266151307()
                                    require _4455 + mem[_4455] + 31 < _4455 + return_data.size
                                    _4489 = mem[_4455 + mem[_4455]]
                                    if mem[_4455 + mem[_4455]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4455 + mem[_4455]]) + 1 < 0 or _4455 + ceil32(return_data.size) + ceil32(32 * mem[_4455 + mem[_4455]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4455 + ceil32(return_data.size) + ceil32(32 * mem[_4455 + mem[_4455]]) + 1
                                    mem[_4455 + ceil32(return_data.size)] = _4489
                                    require _4473 + (32 * _4489) + 32 <= return_data.size
                                    mem[_4455 + ceil32(return_data.size) + 32 len ceil32(32 * _4489)] = mem[_4455 + _4473 + 32 len ceil32(32 * _4489)]
                                    if 1 >= _4489:
                                        revert with 0, 50
                                    _5167 = mem[_4455 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4455 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4455 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5294 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5167) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5294]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167) / mem[_5294] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167) / mem[_5294]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167) / mem[_5294] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4455 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4455 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5344 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5167 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5344]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / 10^sub_3266f45c) / mem[_5344] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / 10^sub_3266f45c) / mem[_5344]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / 10^sub_3266f45c) / mem[_5344] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4455 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4455 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5682 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5167 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5682]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / s * t) / mem[_5682] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / s * t) / mem[_5682]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5167 / s * t) / mem[_5682] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3569 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3569]:
                                    revert with 0, 50
                                mem[_3569 + 32] = token1Address
                                if 1 >= mem[_3569]:
                                    revert with 0, 50
                                mem[_3569 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3569 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3569 + 100] = 1
                                mem[_3569 + 132] = 64
                                mem[_3569 + 164] = mem[_3569]
                                idx = 0
                                u = _3569 + 32
                                v = _3569 + 196
                                while idx < mem[_3569]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3569 + (32 * mem[_3569]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4454 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4472 = mem[_4454]
                                require mem[_4454] <= test266151307()
                                require _4454 + mem[_4454] + 31 < _4454 + return_data.size
                                _4488 = mem[_4454 + mem[_4454]]
                                if mem[_4454 + mem[_4454]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4454 + mem[_4454]]) + 1 < 0 or _4454 + ceil32(return_data.size) + ceil32(32 * mem[_4454 + mem[_4454]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4454 + ceil32(return_data.size) + ceil32(32 * mem[_4454 + mem[_4454]]) + 1
                                mem[_4454 + ceil32(return_data.size)] = _4488
                                require _4472 + (32 * _4488) + 32 <= return_data.size
                                mem[_4454 + ceil32(return_data.size) + 32 len ceil32(32 * _4488)] = mem[_4454 + _4472 + 32 len ceil32(32 * _4488)]
                                if 1 >= _4488:
                                    revert with 0, 50
                                _5166 = mem[_4454 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4454 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4454 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5293 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5166) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5293]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166) / mem[_5293] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166) / mem[_5293]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166) / mem[_5293] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4454 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4454 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5343 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5166 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5343]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / 10^sub_3266f45c) / mem[_5343] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / 10^sub_3266f45c) / mem[_5343]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / 10^sub_3266f45c) / mem[_5343] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4454 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4454 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5681 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5166 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5681]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / u * v) / mem[_5681] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / u * v) / mem[_5681]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5166 / u * v) / mem[_5681] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _3626 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3626]:
                                        revert with 0, 50
                                    mem[_3626 + 32] = token1Address
                                    if 1 >= mem[_3626]:
                                        revert with 0, 50
                                    mem[_3626 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3626 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3626 + 100] = 10^sub_3266f45c
                                    mem[_3626 + 132] = 64
                                    mem[_3626 + 164] = mem[_3626]
                                    idx = 0
                                    u = _3626 + 32
                                    v = _3626 + 196
                                    while idx < mem[_3626]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3626 + (32 * mem[_3626]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4453 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4471 = mem[_4453]
                                    require mem[_4453] <= test266151307()
                                    require _4453 + mem[_4453] + 31 < _4453 + return_data.size
                                    _4487 = mem[_4453 + mem[_4453]]
                                    if mem[_4453 + mem[_4453]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4453 + mem[_4453]]) + 1 < 0 or _4453 + ceil32(return_data.size) + ceil32(32 * mem[_4453 + mem[_4453]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4453 + ceil32(return_data.size) + ceil32(32 * mem[_4453 + mem[_4453]]) + 1
                                    mem[_4453 + ceil32(return_data.size)] = _4487
                                    require _4471 + (32 * _4487) + 32 <= return_data.size
                                    mem[_4453 + ceil32(return_data.size) + 32 len ceil32(32 * _4487)] = mem[_4453 + _4471 + 32 len ceil32(32 * _4487)]
                                    if 1 >= _4487:
                                        revert with 0, 50
                                    _5165 = mem[_4453 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5292 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5165) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5292]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165) / mem[_5292] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165) / mem[_5292]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165) / mem[_5292] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5342 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5165 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5342]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / 10^sub_3266f45c) / mem[_5342] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / 10^sub_3266f45c) / mem[_5342]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / 10^sub_3266f45c) / mem[_5342] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5680 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5165 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5680]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / u * v) / mem[_5680] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / u * v) / mem[_5680]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5165 / u * v) / mem[_5680] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _4451 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4451]:
                                        revert with 0, 50
                                    mem[_4451 + 32] = token1Address
                                    if 1 >= mem[_4451]:
                                        revert with 0, 50
                                    mem[_4451 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4451 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4451 + 100] = u * v
                                    mem[_4451 + 132] = 64
                                    mem[_4451 + 164] = mem[_4451]
                                    idx = 0
                                    u = _4451 + 32
                                    v = _4451 + 196
                                    while idx < mem[_4451]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4451 + (32 * mem[_4451]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5187 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5194 = mem[_5187]
                                    require mem[_5187] <= test266151307()
                                    require _5187 + mem[_5187] + 31 < _5187 + return_data.size
                                    _5201 = mem[_5187 + mem[_5187]]
                                    if mem[_5187 + mem[_5187]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5187 + mem[_5187]]) + 1 < 0 or _5187 + ceil32(return_data.size) + ceil32(32 * mem[_5187 + mem[_5187]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5187 + ceil32(return_data.size) + ceil32(32 * mem[_5187 + mem[_5187]]) + 1
                                    mem[_5187 + ceil32(return_data.size)] = _5201
                                    require _5194 + (32 * _5201) + 32 <= return_data.size
                                    mem[_5187 + ceil32(return_data.size) + 32 len ceil32(32 * _5201)] = mem[_5187 + _5194 + 32 len ceil32(32 * _5201)]
                                    if 1 >= _5201:
                                        revert with 0, 50
                                    _5644 = mem[_5187 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5187 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5187 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5718 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5644) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5718]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644) / mem[_5718] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644) / mem[_5718]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644) / mem[_5718] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5187 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5187 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5742 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5644 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5742]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / 10^sub_3266f45c) / mem[_5742] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / 10^sub_3266f45c) / mem[_5742]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / 10^sub_3266f45c) / mem[_5742] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5187 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5187 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5871 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5644 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5871]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / u * v) / mem[_5871] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / u * v) / mem[_5871]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2372 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5644 / u * v) / mem[_5871] * ext_call.return_data[0] / 100 * 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = s * t
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (2 * ceil32(return_data.size)) + 128
                    v = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2384 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _2387 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _2387
                    require _2384 + (32 * _2387) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2387)] = mem[(2 * ceil32(return_data.size)) + _2384 + 224 len ceil32(32 * _2387)]
                    if 1 >= _2387:
                        revert with 0, 50
                    _3460 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _3615 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3615]:
                                revert with 0, 50
                            mem[_3615 + 32] = token1Address
                            if 1 >= mem[_3615]:
                                revert with 0, 50
                            mem[_3615 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3615 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3615 + 100] = 1
                            mem[_3615 + 132] = 64
                            mem[_3615 + 164] = mem[_3615]
                            idx = 0
                            s = _3615 + 32
                            t = _3615 + 196
                            while idx < mem[_3615]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3615 + (32 * mem[_3615]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4450 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4470 = mem[_4450]
                            require mem[_4450] <= test266151307()
                            require _4450 + mem[_4450] + 31 < _4450 + return_data.size
                            _4486 = mem[_4450 + mem[_4450]]
                            if mem[_4450 + mem[_4450]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4450 + mem[_4450]]) + 1 < 0 or _4450 + ceil32(return_data.size) + ceil32(32 * mem[_4450 + mem[_4450]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4450 + ceil32(return_data.size) + ceil32(32 * mem[_4450 + mem[_4450]]) + 1
                            mem[_4450 + ceil32(return_data.size)] = _4486
                            require _4470 + (32 * _4486) + 32 <= return_data.size
                            mem[_4450 + ceil32(return_data.size) + 32 len ceil32(32 * _4486)] = mem[_4450 + _4470 + 32 len ceil32(32 * _4486)]
                            if 1 >= _4486:
                                revert with 0, 50
                            _5164 = mem[_4450 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4450 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4450 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5164) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5291]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164) / mem[_5291] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164) / mem[_5291]:
                                    revert with 0, 17
                                mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164) / mem[_5291] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4450 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4450 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5341 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5164 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5341]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / 10^sub_3266f45c) / mem[_5341] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / 10^sub_3266f45c) / mem[_5341]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / 10^sub_3266f45c) / mem[_5341] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4450 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4450 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5679 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5164 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5679]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / s * t) / mem[_5679] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / s * t) / mem[_5679]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5164 / s * t) / mem[_5679] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3663 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3663]:
                                    revert with 0, 50
                                mem[_3663 + 32] = token1Address
                                if 1 >= mem[_3663]:
                                    revert with 0, 50
                                mem[_3663 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3663 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3663 + 100] = 10^sub_3266f45c
                                mem[_3663 + 132] = 64
                                mem[_3663 + 164] = mem[_3663]
                                idx = 0
                                s = _3663 + 32
                                t = _3663 + 196
                                while idx < mem[_3663]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3663 + (32 * mem[_3663]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4449 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4469 = mem[_4449]
                                require mem[_4449] <= test266151307()
                                require _4449 + mem[_4449] + 31 < _4449 + return_data.size
                                _4485 = mem[_4449 + mem[_4449]]
                                if mem[_4449 + mem[_4449]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4449 + mem[_4449]]) + 1 < 0 or _4449 + ceil32(return_data.size) + ceil32(32 * mem[_4449 + mem[_4449]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4449 + ceil32(return_data.size) + ceil32(32 * mem[_4449 + mem[_4449]]) + 1
                                mem[_4449 + ceil32(return_data.size)] = _4485
                                require _4469 + (32 * _4485) + 32 <= return_data.size
                                mem[_4449 + ceil32(return_data.size) + 32 len ceil32(32 * _4485)] = mem[_4449 + _4469 + 32 len ceil32(32 * _4485)]
                                if 1 >= _4485:
                                    revert with 0, 50
                                _5163 = mem[_4449 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4449 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4449 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5290 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5163) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5290]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163) / mem[_5290] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163) / mem[_5290]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163) / mem[_5290] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4449 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4449 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5340 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5163 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5340]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / 10^sub_3266f45c) / mem[_5340] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / 10^sub_3266f45c) / mem[_5340]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / 10^sub_3266f45c) / mem[_5340] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4449 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4449 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5678 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5163 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5678]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / s * t) / mem[_5678] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / s * t) / mem[_5678]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5163 / s * t) / mem[_5678] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _4447 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4447]:
                                    revert with 0, 50
                                mem[_4447 + 32] = token1Address
                                if 1 >= mem[_4447]:
                                    revert with 0, 50
                                mem[_4447 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4447 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4447 + 100] = s * t
                                mem[_4447 + 132] = 64
                                mem[_4447 + 164] = mem[_4447]
                                idx = 0
                                s = _4447 + 32
                                t = _4447 + 196
                                while idx < mem[_4447]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4447 + (32 * mem[_4447]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5186 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5193 = mem[_5186]
                                require mem[_5186] <= test266151307()
                                require _5186 + mem[_5186] + 31 < _5186 + return_data.size
                                _5200 = mem[_5186 + mem[_5186]]
                                if mem[_5186 + mem[_5186]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5186 + mem[_5186]]) + 1 < 0 or _5186 + ceil32(return_data.size) + ceil32(32 * mem[_5186 + mem[_5186]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5186 + ceil32(return_data.size) + ceil32(32 * mem[_5186 + mem[_5186]]) + 1
                                mem[_5186 + ceil32(return_data.size)] = _5200
                                require _5193 + (32 * _5200) + 32 <= return_data.size
                                mem[_5186 + ceil32(return_data.size) + 32 len ceil32(32 * _5200)] = mem[_5186 + _5193 + 32 len ceil32(32 * _5200)]
                                if 1 >= _5200:
                                    revert with 0, 50
                                _5643 = mem[_5186 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5186 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5186 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5717 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5643) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5717]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5717] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5717]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5717] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5186 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5186 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5741 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5741]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5741] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5741]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5741] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5186 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5186 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5870 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460) + (Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5870]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_5870] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_5870]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_5870] * ext_call.return_data[0] / 100 * 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3661 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3661]:
                                    revert with 0, 50
                                mem[_3661 + 32] = token1Address
                                if 1 >= mem[_3661]:
                                    revert with 0, 50
                                mem[_3661 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3661 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3661 + 100] = 1
                                mem[_3661 + 132] = 64
                                mem[_3661 + 164] = mem[_3661]
                                idx = 0
                                s = _3661 + 32
                                t = _3661 + 196
                                while idx < mem[_3661]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3661 + (32 * mem[_3661]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4446 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4468 = mem[_4446]
                                require mem[_4446] <= test266151307()
                                require _4446 + mem[_4446] + 31 < _4446 + return_data.size
                                _4484 = mem[_4446 + mem[_4446]]
                                if mem[_4446 + mem[_4446]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4446 + mem[_4446]]) + 1 < 0 or _4446 + ceil32(return_data.size) + ceil32(32 * mem[_4446 + mem[_4446]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4446 + ceil32(return_data.size) + ceil32(32 * mem[_4446 + mem[_4446]]) + 1
                                mem[_4446 + ceil32(return_data.size)] = _4484
                                require _4468 + (32 * _4484) + 32 <= return_data.size
                                mem[_4446 + ceil32(return_data.size) + 32 len ceil32(32 * _4484)] = mem[_4446 + _4468 + 32 len ceil32(32 * _4484)]
                                if 1 >= _4484:
                                    revert with 0, 50
                                _5162 = mem[_4446 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4446 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4446 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5289 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5162) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5289]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162) / mem[_5289] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162) / mem[_5289]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162) / mem[_5289] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4446 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4446 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5339 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5162 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5339]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / 10^sub_3266f45c) / mem[_5339] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / 10^sub_3266f45c) / mem[_5339]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / 10^sub_3266f45c) / mem[_5339] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4446 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4446 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5677 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5162 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5677]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / s * t) / mem[_5677] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / s * t) / mem[_5677]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5162 / s * t) / mem[_5677] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _3718 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3718]:
                                        revert with 0, 50
                                    mem[_3718 + 32] = token1Address
                                    if 1 >= mem[_3718]:
                                        revert with 0, 50
                                    mem[_3718 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3718 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3718 + 100] = 10^sub_3266f45c
                                    mem[_3718 + 132] = 64
                                    mem[_3718 + 164] = mem[_3718]
                                    idx = 0
                                    s = _3718 + 32
                                    t = _3718 + 196
                                    while idx < mem[_3718]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3718 + (32 * mem[_3718]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4445 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4467 = mem[_4445]
                                    require mem[_4445] <= test266151307()
                                    require _4445 + mem[_4445] + 31 < _4445 + return_data.size
                                    _4483 = mem[_4445 + mem[_4445]]
                                    if mem[_4445 + mem[_4445]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4445 + mem[_4445]]) + 1 < 0 or _4445 + ceil32(return_data.size) + ceil32(32 * mem[_4445 + mem[_4445]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4445 + ceil32(return_data.size) + ceil32(32 * mem[_4445 + mem[_4445]]) + 1
                                    mem[_4445 + ceil32(return_data.size)] = _4483
                                    require _4467 + (32 * _4483) + 32 <= return_data.size
                                    mem[_4445 + ceil32(return_data.size) + 32 len ceil32(32 * _4483)] = mem[_4445 + _4467 + 32 len ceil32(32 * _4483)]
                                    if 1 >= _4483:
                                        revert with 0, 50
                                    _5161 = mem[_4445 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4445 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4445 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5288 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5161) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5288]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161) / mem[_5288] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161) / mem[_5288]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161) / mem[_5288] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4445 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4445 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5338 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5161 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5338]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / 10^sub_3266f45c) / mem[_5338] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / 10^sub_3266f45c) / mem[_5338]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / 10^sub_3266f45c) / mem[_5338] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4445 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4445 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5676 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5161 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5676]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / s * t) / mem[_5676] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / s * t) / mem[_5676]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5161 / s * t) / mem[_5676] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _4443 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4443]:
                                        revert with 0, 50
                                    mem[_4443 + 32] = token1Address
                                    if 1 >= mem[_4443]:
                                        revert with 0, 50
                                    mem[_4443 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4443 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4443 + 100] = s * t
                                    mem[_4443 + 132] = 64
                                    mem[_4443 + 164] = mem[_4443]
                                    idx = 0
                                    s = _4443 + 32
                                    t = _4443 + 196
                                    while idx < mem[_4443]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4443 + (32 * mem[_4443]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5192 = mem[_5185]
                                    require mem[_5185] <= test266151307()
                                    require _5185 + mem[_5185] + 31 < _5185 + return_data.size
                                    _5199 = mem[_5185 + mem[_5185]]
                                    if mem[_5185 + mem[_5185]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5185 + mem[_5185]]) + 1 < 0 or _5185 + ceil32(return_data.size) + ceil32(32 * mem[_5185 + mem[_5185]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5185 + ceil32(return_data.size) + ceil32(32 * mem[_5185 + mem[_5185]]) + 1
                                    mem[_5185 + ceil32(return_data.size)] = _5199
                                    require _5192 + (32 * _5199) + 32 <= return_data.size
                                    mem[_5185 + ceil32(return_data.size) + 32 len ceil32(32 * _5199)] = mem[_5185 + _5192 + 32 len ceil32(32 * _5199)]
                                    if 1 >= _5199:
                                        revert with 0, 50
                                    _5642 = mem[_5185 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5185 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5185 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5716]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5716] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5716]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5716] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5185 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5185 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5740 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5740]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5740] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5740]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5740] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5185 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5185 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5869 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5869]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_5869] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_5869]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_5869] * ext_call.return_data[0] / 100 * 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _4541 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4541]:
                                    revert with 0, 50
                                mem[_4541 + 32] = token1Address
                                if 1 >= mem[_4541]:
                                    revert with 0, 50
                                mem[_4541 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4541 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4541 + 100] = 1
                                mem[_4541 + 132] = 64
                                mem[_4541 + 164] = mem[_4541]
                                idx = 0
                                u = _4541 + 32
                                v = _4541 + 196
                                while idx < mem[_4541]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4541 + (32 * mem[_4541]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5184 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5191 = mem[_5184]
                                require mem[_5184] <= test266151307()
                                require _5184 + mem[_5184] + 31 < _5184 + return_data.size
                                _5198 = mem[_5184 + mem[_5184]]
                                if mem[_5184 + mem[_5184]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5184 + mem[_5184]]) + 1 < 0 or _5184 + ceil32(return_data.size) + ceil32(32 * mem[_5184 + mem[_5184]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5184 + ceil32(return_data.size) + ceil32(32 * mem[_5184 + mem[_5184]]) + 1
                                mem[_5184 + ceil32(return_data.size)] = _5198
                                require _5191 + (32 * _5198) + 32 <= return_data.size
                                mem[_5184 + ceil32(return_data.size) + 32 len ceil32(32 * _5198)] = mem[_5184 + _5191 + 32 len ceil32(32 * _5198)]
                                if 1 >= _5198:
                                    revert with 0, 50
                                _5641 = mem[_5184 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5184 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5184 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5715 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5715]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5715] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5715]:
                                        revert with 0, 17
                                    mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5715] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5184 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5184 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5739 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5739]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5739] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5739]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5739] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5184 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5184 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5868 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5868]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_5868] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_5868]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_5868] * ext_call.return_data[0] / 100 * 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _4609 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4609]:
                                        revert with 0, 50
                                    mem[_4609 + 32] = token1Address
                                    if 1 >= mem[_4609]:
                                        revert with 0, 50
                                    mem[_4609 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4609 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4609 + 100] = 10^sub_3266f45c
                                    mem[_4609 + 132] = 64
                                    mem[_4609 + 164] = mem[_4609]
                                    idx = 0
                                    u = _4609 + 32
                                    v = _4609 + 196
                                    while idx < mem[_4609]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4609 + (32 * mem[_4609]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5183 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5190 = mem[_5183]
                                    require mem[_5183] <= test266151307()
                                    require _5183 + mem[_5183] + 31 < _5183 + return_data.size
                                    _5197 = mem[_5183 + mem[_5183]]
                                    if mem[_5183 + mem[_5183]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5183 + mem[_5183]]) + 1 < 0 or _5183 + ceil32(return_data.size) + ceil32(32 * mem[_5183 + mem[_5183]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5183 + ceil32(return_data.size) + ceil32(32 * mem[_5183 + mem[_5183]]) + 1
                                    mem[_5183 + ceil32(return_data.size)] = _5197
                                    require _5190 + (32 * _5197) + 32 <= return_data.size
                                    mem[_5183 + ceil32(return_data.size) + 32 len ceil32(32 * _5197)] = mem[_5183 + _5190 + 32 len ceil32(32 * _5197)]
                                    if 1 >= _5197:
                                        revert with 0, 50
                                    _5640 = mem[_5183 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5183 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5714 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5714]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5714] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5714]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5714] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5183 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5738 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5738]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5738] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5738]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5738] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5183 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5867 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5867]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_5867] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_5867]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_5867] * ext_call.return_data[0] / 100 * 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _5181 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_5181]:
                                        revert with 0, 50
                                    mem[_5181 + 32] = token1Address
                                    if 1 >= mem[_5181]:
                                        revert with 0, 50
                                    mem[_5181 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_5181 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_5181 + 100] = u * v
                                    mem[_5181 + 132] = 64
                                    mem[_5181 + 164] = mem[_5181]
                                    idx = 0
                                    u = _5181 + 32
                                    v = _5181 + 196
                                    while idx < mem[_5181]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _5181 + (32 * mem[_5181]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5647 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5648 = mem[_5647]
                                    require mem[_5647] <= test266151307()
                                    require _5647 + mem[_5647] + 31 < _5647 + return_data.size
                                    _5649 = mem[_5647 + mem[_5647]]
                                    if mem[_5647 + mem[_5647]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5647 + mem[_5647]]) + 1 < 0 or _5647 + ceil32(return_data.size) + ceil32(32 * mem[_5647 + mem[_5647]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5647 + ceil32(return_data.size) + ceil32(32 * mem[_5647 + mem[_5647]]) + 1
                                    mem[_5647 + ceil32(return_data.size)] = _5649
                                    require _5648 + (32 * _5649) + 32 <= return_data.size
                                    mem[_5647 + ceil32(return_data.size) + 32 len ceil32(32 * _5649)] = mem[_5647 + _5648 + 32 len ceil32(32 * _5649)]
                                    if 1 >= _5649:
                                        revert with 0, 50
                                    _5854 = mem[_5647 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5647 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5647 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5881 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5854) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5881]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854) / mem[_5881] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854) / mem[_5881]:
                                            revert with 0, 17
                                        mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854) / mem[_5881] * ext_call.return_data[0] / 100 * 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5647 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5647 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5885 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5854 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5885]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / 10^sub_3266f45c) / mem[_5885] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / 10^sub_3266f45c) / mem[_5885]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / 10^sub_3266f45c) / mem[_5885] * ext_call.return_data[0] / 100 * 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5647 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5647 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5911 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5854 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5911]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / u * v) / mem[_5911] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / u * v) / mem[_5911]:
                                                revert with 0, 17
                                            mem[mem[64]] = (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3460 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5854 / u * v) / mem[_5911] * ext_call.return_data[0] / 100 * 10^18
    return memory
      from mem[64]
       len 32
}

function getAllPoolInUSD() {
    mem[132] = this.address
    require ext_code.size(masterChefAddress)
    staticcall masterChefAddress.userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args poolId, this.address
    mem[96 len 64] = ext_call.return_data[0 len 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if not ext_call.return_data[0]:
        return 0
    require ext_code.size(0xa77230d17318075983913bc2145db16c7366156)
    staticcall 0xa77230d17318075983913bc2145db16c7366156.latestAnswer() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'ChainLink error'
    require ext_code.size(lpTokenAddress)
    staticcall lpTokenAddress.getReserves() with:
            gas gas_remaining wei
    mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token0Address:
        if not sub_3266f45c:
            mem[(4 * ceil32(return_data.size)) + 96] = 2
            mem[(4 * ceil32(return_data.size)) + 128] = token1Address
            mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
            mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[(4 * ceil32(return_data.size)) + 196] = 1
            mem[(4 * ceil32(return_data.size)) + 228] = 64
            mem[(4 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (4 * ceil32(return_data.size)) + 128
            t = (4 * ceil32(return_data.size)) + 292
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 1, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (6 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _1256 = mem[(4 * ceil32(return_data.size)) + 192 len 4], 0
            require mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
            require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
            _1265 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
            if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                revert with 0, 65
            mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
            mem[(6 * ceil32(return_data.size)) + 192] = _1265
            require _1256 + (32 * _1265) + 32 <= return_data.size
            mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1265)] = mem[(4 * ceil32(return_data.size)) + _1256 + 224 len ceil32(32 * _1265)]
            if 1 >= _1265:
                revert with 0, 50
            _2384 = mem[(6 * ceil32(return_data.size)) + 256]
            if not sub_3266f45c:
                if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 17
                if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256]):
                    revert with 0, 17
                require ext_code.size(lpTokenAddress)
                staticcall lpTokenAddress.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2432 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2384) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                    revert with 0, 17
                if not mem[_2432]:
                    revert with 0, 18
                if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384) / mem[_2432] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384) / mem[_2432]:
                    revert with 0, 17
                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384) / mem[_2432] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384) / mem[_2432] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not 10^sub_3266f45c:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2468 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2384 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2468]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / 10^sub_3266f45c) / mem[_2468] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / 10^sub_3266f45c) / mem[_2468]:
                        revert with 0, 17
                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / 10^sub_3266f45c) / mem[_2468] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / 10^sub_3266f45c) / mem[_2468] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_3266f45c
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2384 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3575]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / s * t) / mem[_3575] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / s * t) / mem[_3575]:
                        revert with 0, 17
                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / s * t) / mem[_3575] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2384 / s * t) / mem[_3575] * ext_call.return_data[0] / 100 * 10^18 / 10^18
        else:
            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                mem[(4 * ceil32(return_data.size)) + 96] = 2
                mem[(4 * ceil32(return_data.size)) + 128] = token1Address
                mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(4 * ceil32(return_data.size)) + 196] = 10^sub_3266f45c
                mem[(4 * ceil32(return_data.size)) + 228] = 64
                mem[(4 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (4 * ceil32(return_data.size)) + 128
                t = (4 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^sub_3266f45c, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (6 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1255 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32
                require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 <= test266151307()
                require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                _1264 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]
                if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193
                mem[(6 * ceil32(return_data.size)) + 192] = _1264
                require _1255 + (32 * _1264) + 32 <= return_data.size
                mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1264)] = mem[(4 * ceil32(return_data.size)) + _1255 + 224 len ceil32(32 * _1264)]
                if 1 >= _1264:
                    revert with 0, 50
                _2383 = mem[(6 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2431 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2383) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2431]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383) / mem[_2431] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383) / mem[_2431]:
                        revert with 0, 17
                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383) / mem[_2431] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383) / mem[_2431] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2467 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2383 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2467]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / 10^sub_3266f45c) / mem[_2467] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / 10^sub_3266f45c) / mem[_2467]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / 10^sub_3266f45c) / mem[_2467] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / 10^sub_3266f45c) / mem[_2467] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3574 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2383 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3574]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / s * t) / mem[_3574] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / s * t) / mem[_3574]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / s * t) / mem[_3574] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2383 / s * t) / mem[_3574] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                s = 10
                t = 1
                idx = sub_3266f45c
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                mem[(4 * ceil32(return_data.size)) + 96] = 2
                mem[(4 * ceil32(return_data.size)) + 128] = token1Address
                mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(4 * ceil32(return_data.size)) + 196] = s * t
                mem[(4 * ceil32(return_data.size)) + 228] = 64
                mem[(4 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                u = (4 * ceil32(return_data.size)) + 128
                v = (4 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[v] = mem[u + 12 len 20]
                    idx = idx + 1
                    u = u + 32
                    v = v + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args s * t, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (6 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2393 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                _2396 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                mem[(6 * ceil32(return_data.size)) + 192] = _2396
                require _2393 + (32 * _2396) + 32 <= return_data.size
                mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _2396)] = mem[(4 * ceil32(return_data.size)) + _2393 + 224 len ceil32(32 * _2396)]
                if 1 >= _2396:
                    revert with 0, 50
                _3469 = mem[(6 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3621 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3469) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3621]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469) / mem[_3621] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469) / mem[_3621]:
                        revert with 0, 17
                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469) / mem[_3621] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469) / mem[_3621] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3667 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3469 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3667]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / 10^sub_3266f45c) / mem[_3667] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / 10^sub_3266f45c) / mem[_3667]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / 10^sub_3266f45c) / mem[_3667] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / 10^sub_3266f45c) / mem[_3667] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4547 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3469 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_4547]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / s * t) / mem[_4547] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / s * t) / mem[_4547]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / s * t) / mem[_4547] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3469 / s * t) / mem[_4547] * ext_call.return_data[0] / 100 * 10^18 / 10^18
    else:
        if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token1Address:
            if not sub_9ddc230a:
                mem[(4 * ceil32(return_data.size)) + 96] = 2
                mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(4 * ceil32(return_data.size)) + 196] = 1
                mem[(4 * ceil32(return_data.size)) + 228] = 64
                mem[(4 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (4 * ceil32(return_data.size)) + 128
                t = (4 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (6 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1254 = mem[(4 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                _1263 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(6 * ceil32(return_data.size)) + 192] = _1263
                require _1254 + (32 * _1263) + 32 <= return_data.size
                mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1263)] = mem[(4 * ceil32(return_data.size)) + _1254 + 224 len ceil32(32 * _1263)]
                if 1 >= _1263:
                    revert with 0, 50
                _2382 = mem[(6 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2430 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2382) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2430]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382) / mem[_2430] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382) / mem[_2430]:
                        revert with 0, 17
                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382) / mem[_2430] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382) / mem[_2430] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2466 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2382 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2466]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / 10^sub_9ddc230a) / mem[_2466] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / 10^sub_9ddc230a) / mem[_2466]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / 10^sub_9ddc230a) / mem[_2466] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / 10^sub_9ddc230a) / mem[_2466] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3573 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2382 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3573]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / s * t) / mem[_3573] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / s * t) / mem[_3573]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / s * t) / mem[_3573] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2382 / s * t) / mem[_3573] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(4 * ceil32(return_data.size)) + 96] = 2
                    mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(4 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(4 * ceil32(return_data.size)) + 228] = 64
                    mem[(4 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (4 * ceil32(return_data.size)) + 128
                    t = (4 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (6 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1253 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                    _1262 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(6 * ceil32(return_data.size)) + 192] = _1262
                    require _1253 + (32 * _1262) + 32 <= return_data.size
                    mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1262)] = mem[(4 * ceil32(return_data.size)) + _1253 + 224 len ceil32(32 * _1262)]
                    if 1 >= _1262:
                        revert with 0, 50
                    _2381 = mem[(6 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2381) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2429]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381) / mem[_2429] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381) / mem[_2429]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381) / mem[_2429] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381) / mem[_2429] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2465 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2381 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_2465]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / 10^sub_9ddc230a) / mem[_2465] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / 10^sub_9ddc230a) / mem[_2465]:
                                revert with 0, 17
                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / 10^sub_9ddc230a) / mem[_2465] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / 10^sub_9ddc230a) / mem[_2465] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3572 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2381 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3572]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / s * t) / mem[_3572] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / s * t) / mem[_3572]:
                                revert with 0, 17
                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / s * t) / mem[_3572] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2381 / s * t) / mem[_3572] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(4 * ceil32(return_data.size)) + 96] = 2
                    mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(4 * ceil32(return_data.size)) + 196] = s * t
                    mem[(4 * ceil32(return_data.size)) + 228] = 64
                    mem[(4 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (4 * ceil32(return_data.size)) + 128
                    v = (4 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (6 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2392 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                    _2395 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(6 * ceil32(return_data.size)) + 192] = _2395
                    require _2392 + (32 * _2395) + 32 <= return_data.size
                    mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _2395)] = mem[(4 * ceil32(return_data.size)) + _2392 + 224 len ceil32(32 * _2395)]
                    if 1 >= _2395:
                        revert with 0, 50
                    _3468 = mem[(6 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3468) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3620]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468) / mem[_3620] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468) / mem[_3620]:
                            revert with 0, 17
                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468) / mem[_3620] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468) / mem[_3620] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3666 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3468 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3666]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / 10^sub_9ddc230a) / mem[_3666] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / 10^sub_9ddc230a) / mem[_3666]:
                                revert with 0, 17
                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / 10^sub_9ddc230a) / mem[_3666] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / 10^sub_9ddc230a) / mem[_3666] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(6 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4546 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3468 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4546]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / s * t) / mem[_4546] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / s * t) / mem[_4546]:
                                revert with 0, 17
                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / s * t) / mem[_4546] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3468 / s * t) / mem[_4546] * ext_call.return_data[0] / 100 * 10^18 / 10^18
        else:
            if not sub_9ddc230a:
                mem[(4 * ceil32(return_data.size)) + 96] = 2
                mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(4 * ceil32(return_data.size)) + 196] = 1
                mem[(4 * ceil32(return_data.size)) + 228] = 64
                mem[(4 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (4 * ceil32(return_data.size)) + 128
                t = (4 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (6 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1252 = mem[(4 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                _1261 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(6 * ceil32(return_data.size)) + 192] = _1261
                require _1252 + (32 * _1261) + 32 <= return_data.size
                mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1261)] = mem[(4 * ceil32(return_data.size)) + _1252 + 224 len ceil32(32 * _1261)]
                if 1 >= _1261:
                    revert with 0, 50
                _2380 = mem[(6 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if not sub_3266f45c:
                        _2435 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_2435]:
                            revert with 0, 50
                        mem[_2435 + 32] = token1Address
                        if 1 >= mem[_2435]:
                            revert with 0, 50
                        mem[_2435 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                        mem[_2435 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_2435 + 100] = 1
                        mem[_2435 + 132] = 64
                        mem[_2435 + 164] = mem[_2435]
                        idx = 0
                        s = _2435 + 32
                        t = _2435 + 196
                        while idx < mem[_2435]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                        staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _2435 + (32 * mem[_2435]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3501 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3513 = mem[_3501]
                        require mem[_3501] <= test266151307()
                        require _3501 + mem[_3501] + 31 < _3501 + return_data.size
                        _3525 = mem[_3501 + mem[_3501]]
                        if mem[_3501 + mem[_3501]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_3501 + mem[_3501]]) + 1 < 0 or _3501 + ceil32(return_data.size) + ceil32(32 * mem[_3501 + mem[_3501]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _3501 + ceil32(return_data.size) + ceil32(32 * mem[_3501 + mem[_3501]]) + 1
                        mem[_3501 + ceil32(return_data.size)] = _3525
                        require _3513 + (32 * _3525) + 32 <= return_data.size
                        mem[_3501 + ceil32(return_data.size) + 32 len ceil32(32 * _3525)] = mem[_3501 + _3513 + 32 len ceil32(32 * _3525)]
                        if 1 >= _3525:
                            revert with 0, 50
                        _4429 = mem[_3501 + ceil32(return_data.size) + 64]
                        if not sub_3266f45c:
                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3501 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3501 + ceil32(return_data.size) + 64]):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4429) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4609]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429) / mem[_4609] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429) / mem[_4609]:
                                revert with 0, 17
                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429) / mem[_4609] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429) / mem[_4609] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3501 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not 10^sub_3266f45c:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3501 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4659 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4429 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4659]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / 10^sub_3266f45c) / mem[_4659] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / 10^sub_3266f45c) / mem[_4659]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / 10^sub_3266f45c) / mem[_4659] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / 10^sub_3266f45c) / mem[_4659] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3501 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3501 + ceil32(return_data.size) + 64] / s * t):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5248 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4429 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5248]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / s * t) / mem[_5248] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / s * t) / mem[_5248]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / s * t) / mem[_5248] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4429 / s * t) / mem[_5248] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                            _2476 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2476]:
                                revert with 0, 50
                            mem[_2476 + 32] = token1Address
                            if 1 >= mem[_2476]:
                                revert with 0, 50
                            mem[_2476 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2476 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2476 + 100] = 10^sub_3266f45c
                            mem[_2476 + 132] = 64
                            mem[_2476 + 164] = mem[_2476]
                            idx = 0
                            s = _2476 + 32
                            t = _2476 + 196
                            while idx < mem[_2476]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2476 + (32 * mem[_2476]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3500 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3512 = mem[_3500]
                            require mem[_3500] <= test266151307()
                            require _3500 + mem[_3500] + 31 < _3500 + return_data.size
                            _3524 = mem[_3500 + mem[_3500]]
                            if mem[_3500 + mem[_3500]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3500 + mem[_3500]]) + 1 < 0 or _3500 + ceil32(return_data.size) + ceil32(32 * mem[_3500 + mem[_3500]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3500 + ceil32(return_data.size) + ceil32(32 * mem[_3500 + mem[_3500]]) + 1
                            mem[_3500 + ceil32(return_data.size)] = _3524
                            require _3512 + (32 * _3524) + 32 <= return_data.size
                            mem[_3500 + ceil32(return_data.size) + 32 len ceil32(32 * _3524)] = mem[_3500 + _3512 + 32 len ceil32(32 * _3524)]
                            if 1 >= _3524:
                                revert with 0, 50
                            _4428 = mem[_3500 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3500 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3500 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4608 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4428) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4608]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428) / mem[_4608] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428) / mem[_4608]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428) / mem[_4608] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428) / mem[_4608] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3500 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3500 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4658 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4428 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4658]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / 10^sub_3266f45c) / mem[_4658] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / 10^sub_3266f45c) / mem[_4658]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / 10^sub_3266f45c) / mem[_4658] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / 10^sub_3266f45c) / mem[_4658] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3500 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3500 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5247 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _4428 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5247]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / s * t) / mem[_5247] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / s * t) / mem[_5247]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / s * t) / mem[_5247] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4428 / s * t) / mem[_5247] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_3266f45c
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            _3498 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3498]:
                                revert with 0, 50
                            mem[_3498 + 32] = token1Address
                            if 1 >= mem[_3498]:
                                revert with 0, 50
                            mem[_3498 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3498 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3498 + 100] = s * t
                            mem[_3498 + 132] = 64
                            mem[_3498 + 164] = mem[_3498]
                            idx = 0
                            s = _3498 + 32
                            t = _3498 + 196
                            while idx < mem[_3498]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3498 + (32 * mem[_3498]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4469 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4485 = mem[_4469]
                            require mem[_4469] <= test266151307()
                            require _4469 + mem[_4469] + 31 < _4469 + return_data.size
                            _4501 = mem[_4469 + mem[_4469]]
                            if mem[_4469 + mem[_4469]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4469 + mem[_4469]]) + 1 < 0 or _4469 + ceil32(return_data.size) + ceil32(32 * mem[_4469 + mem[_4469]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4469 + ceil32(return_data.size) + ceil32(32 * mem[_4469 + mem[_4469]]) + 1
                            mem[_4469 + ceil32(return_data.size)] = _4501
                            require _4485 + (32 * _4501) + 32 <= return_data.size
                            mem[_4469 + ceil32(return_data.size) + 32 len ceil32(32 * _4501)] = mem[_4469 + _4485 + 32 len ceil32(32 * _4501)]
                            if 1 >= _4501:
                                revert with 0, 50
                            _5179 = mem[_4469 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4469 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4469 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5306 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _5179) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5306]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179) / mem[_5306] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179) / mem[_5306]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179) / mem[_5306] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179) / mem[_5306] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4469 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4469 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5356 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _5179 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5356]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / 10^sub_3266f45c) / mem[_5356] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / 10^sub_3266f45c) / mem[_5356]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / 10^sub_3266f45c) / mem[_5356] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / 10^sub_3266f45c) / mem[_5356] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4469 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4469 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5694 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380) + (Mask(112, 0, ext_call.return_data[32]) * _5179 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5694]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / s * t) / mem[_5694] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / s * t) / mem[_5694]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / s * t) / mem[_5694] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5179 / s * t) / mem[_5694] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _2474 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2474]:
                                revert with 0, 50
                            mem[_2474 + 32] = token1Address
                            if 1 >= mem[_2474]:
                                revert with 0, 50
                            mem[_2474 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2474 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2474 + 100] = 1
                            mem[_2474 + 132] = 64
                            mem[_2474 + 164] = mem[_2474]
                            idx = 0
                            s = _2474 + 32
                            t = _2474 + 196
                            while idx < mem[_2474]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2474 + (32 * mem[_2474]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3497 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3511 = mem[_3497]
                            require mem[_3497] <= test266151307()
                            require _3497 + mem[_3497] + 31 < _3497 + return_data.size
                            _3523 = mem[_3497 + mem[_3497]]
                            if mem[_3497 + mem[_3497]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3497 + mem[_3497]]) + 1 < 0 or _3497 + ceil32(return_data.size) + ceil32(32 * mem[_3497 + mem[_3497]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3497 + ceil32(return_data.size) + ceil32(32 * mem[_3497 + mem[_3497]]) + 1
                            mem[_3497 + ceil32(return_data.size)] = _3523
                            require _3511 + (32 * _3523) + 32 <= return_data.size
                            mem[_3497 + ceil32(return_data.size) + 32 len ceil32(32 * _3523)] = mem[_3497 + _3511 + 32 len ceil32(32 * _3523)]
                            if 1 >= _3523:
                                revert with 0, 50
                            _4427 = mem[_3497 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3497 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3497 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4607 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4427) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4607]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427) / mem[_4607] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427) / mem[_4607]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427) / mem[_4607] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427) / mem[_4607] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3497 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3497 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4657 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4427 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4657]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / 10^sub_3266f45c) / mem[_4657] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / 10^sub_3266f45c) / mem[_4657]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / 10^sub_3266f45c) / mem[_4657] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / 10^sub_3266f45c) / mem[_4657] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3497 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3497 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5246 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4427 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5246]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / s * t) / mem[_5246] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / s * t) / mem[_5246]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / s * t) / mem[_5246] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4427 / s * t) / mem[_5246] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2535 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2535]:
                                    revert with 0, 50
                                mem[_2535 + 32] = token1Address
                                if 1 >= mem[_2535]:
                                    revert with 0, 50
                                mem[_2535 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2535 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2535 + 100] = 10^sub_3266f45c
                                mem[_2535 + 132] = 64
                                mem[_2535 + 164] = mem[_2535]
                                idx = 0
                                s = _2535 + 32
                                t = _2535 + 196
                                while idx < mem[_2535]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2535 + (32 * mem[_2535]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3496 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3510 = mem[_3496]
                                require mem[_3496] <= test266151307()
                                require _3496 + mem[_3496] + 31 < _3496 + return_data.size
                                _3522 = mem[_3496 + mem[_3496]]
                                if mem[_3496 + mem[_3496]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3496 + mem[_3496]]) + 1 < 0 or _3496 + ceil32(return_data.size) + ceil32(32 * mem[_3496 + mem[_3496]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3496 + ceil32(return_data.size) + ceil32(32 * mem[_3496 + mem[_3496]]) + 1
                                mem[_3496 + ceil32(return_data.size)] = _3522
                                require _3510 + (32 * _3522) + 32 <= return_data.size
                                mem[_3496 + ceil32(return_data.size) + 32 len ceil32(32 * _3522)] = mem[_3496 + _3510 + 32 len ceil32(32 * _3522)]
                                if 1 >= _3522:
                                    revert with 0, 50
                                _4426 = mem[_3496 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3496 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3496 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4606 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4426) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4606]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426) / mem[_4606] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426) / mem[_4606]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426) / mem[_4606] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426) / mem[_4606] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3496 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3496 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4656 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4426 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4656]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / 10^sub_3266f45c) / mem[_4656] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / 10^sub_3266f45c) / mem[_4656]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / 10^sub_3266f45c) / mem[_4656] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / 10^sub_3266f45c) / mem[_4656] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3496 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3496 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5245 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4426 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5245]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / s * t) / mem[_5245] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / s * t) / mem[_5245]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / s * t) / mem[_5245] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4426 / s * t) / mem[_5245] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3494 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3494]:
                                    revert with 0, 50
                                mem[_3494 + 32] = token1Address
                                if 1 >= mem[_3494]:
                                    revert with 0, 50
                                mem[_3494 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3494 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3494 + 100] = s * t
                                mem[_3494 + 132] = 64
                                mem[_3494 + 164] = mem[_3494]
                                idx = 0
                                s = _3494 + 32
                                t = _3494 + 196
                                while idx < mem[_3494]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3494 + (32 * mem[_3494]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4468 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4484 = mem[_4468]
                                require mem[_4468] <= test266151307()
                                require _4468 + mem[_4468] + 31 < _4468 + return_data.size
                                _4500 = mem[_4468 + mem[_4468]]
                                if mem[_4468 + mem[_4468]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4468 + mem[_4468]]) + 1 < 0 or _4468 + ceil32(return_data.size) + ceil32(32 * mem[_4468 + mem[_4468]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4468 + ceil32(return_data.size) + ceil32(32 * mem[_4468 + mem[_4468]]) + 1
                                mem[_4468 + ceil32(return_data.size)] = _4500
                                require _4484 + (32 * _4500) + 32 <= return_data.size
                                mem[_4468 + ceil32(return_data.size) + 32 len ceil32(32 * _4500)] = mem[_4468 + _4484 + 32 len ceil32(32 * _4500)]
                                if 1 >= _4500:
                                    revert with 0, 50
                                _5178 = mem[_4468 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4468 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4468 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5305 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5178) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5305]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178) / mem[_5305] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178) / mem[_5305]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178) / mem[_5305] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178) / mem[_5305] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4468 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4468 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5355 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5178 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5355]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / 10^sub_3266f45c) / mem[_5355] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / 10^sub_3266f45c) / mem[_5355]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / 10^sub_3266f45c) / mem[_5355] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / 10^sub_3266f45c) / mem[_5355] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4468 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4468 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5693 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5178 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5693]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / s * t) / mem[_5693] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / s * t) / mem[_5693]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / s * t) / mem[_5693] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5178 / s * t) / mem[_5693] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _3584 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3584]:
                                revert with 0, 50
                            mem[_3584 + 32] = token1Address
                            if 1 >= mem[_3584]:
                                revert with 0, 50
                            mem[_3584 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3584 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3584 + 100] = 1
                            mem[_3584 + 132] = 64
                            mem[_3584 + 164] = mem[_3584]
                            idx = 0
                            u = _3584 + 32
                            v = _3584 + 196
                            while idx < mem[_3584]:
                                mem[v] = mem[u + 12 len 20]
                                idx = idx + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3584 + (32 * mem[_3584]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4467 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4483 = mem[_4467]
                            require mem[_4467] <= test266151307()
                            require _4467 + mem[_4467] + 31 < _4467 + return_data.size
                            _4499 = mem[_4467 + mem[_4467]]
                            if mem[_4467 + mem[_4467]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4467 + mem[_4467]]) + 1 < 0 or _4467 + ceil32(return_data.size) + ceil32(32 * mem[_4467 + mem[_4467]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4467 + ceil32(return_data.size) + ceil32(32 * mem[_4467 + mem[_4467]]) + 1
                            mem[_4467 + ceil32(return_data.size)] = _4499
                            require _4483 + (32 * _4499) + 32 <= return_data.size
                            mem[_4467 + ceil32(return_data.size) + 32 len ceil32(32 * _4499)] = mem[_4467 + _4483 + 32 len ceil32(32 * _4499)]
                            if 1 >= _4499:
                                revert with 0, 50
                            _5177 = mem[_4467 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4467 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4467 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5304 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5177) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5304]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177) / mem[_5304] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177) / mem[_5304]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177) / mem[_5304] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177) / mem[_5304] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4467 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4467 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5354 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5177 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5354]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / 10^sub_3266f45c) / mem[_5354] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / 10^sub_3266f45c) / mem[_5354]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / 10^sub_3266f45c) / mem[_5354] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / 10^sub_3266f45c) / mem[_5354] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4467 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not u * v:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4467 + ceil32(return_data.size) + 64] / u * v):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5692 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5177 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5692]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / u * v) / mem[_5692] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / u * v) / mem[_5692]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / u * v) / mem[_5692] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5177 / u * v) / mem[_5692] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3636 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3636]:
                                    revert with 0, 50
                                mem[_3636 + 32] = token1Address
                                if 1 >= mem[_3636]:
                                    revert with 0, 50
                                mem[_3636 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3636 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3636 + 100] = 10^sub_3266f45c
                                mem[_3636 + 132] = 64
                                mem[_3636 + 164] = mem[_3636]
                                idx = 0
                                u = _3636 + 32
                                v = _3636 + 196
                                while idx < mem[_3636]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3636 + (32 * mem[_3636]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4466 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4482 = mem[_4466]
                                require mem[_4466] <= test266151307()
                                require _4466 + mem[_4466] + 31 < _4466 + return_data.size
                                _4498 = mem[_4466 + mem[_4466]]
                                if mem[_4466 + mem[_4466]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4466 + mem[_4466]]) + 1 < 0 or _4466 + ceil32(return_data.size) + ceil32(32 * mem[_4466 + mem[_4466]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4466 + ceil32(return_data.size) + ceil32(32 * mem[_4466 + mem[_4466]]) + 1
                                mem[_4466 + ceil32(return_data.size)] = _4498
                                require _4482 + (32 * _4498) + 32 <= return_data.size
                                mem[_4466 + ceil32(return_data.size) + 32 len ceil32(32 * _4498)] = mem[_4466 + _4482 + 32 len ceil32(32 * _4498)]
                                if 1 >= _4498:
                                    revert with 0, 50
                                _5176 = mem[_4466 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4466 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4466 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5303 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5176) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5303]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176) / mem[_5303] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176) / mem[_5303]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176) / mem[_5303] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176) / mem[_5303] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4466 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4466 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5353 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5176 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5353]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / 10^sub_3266f45c) / mem[_5353] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / 10^sub_3266f45c) / mem[_5353]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / 10^sub_3266f45c) / mem[_5353] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / 10^sub_3266f45c) / mem[_5353] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4466 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4466 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5691 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5176 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5691]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / u * v) / mem[_5691] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / u * v) / mem[_5691]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / u * v) / mem[_5691] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5176 / u * v) / mem[_5691] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                u = 10
                                v = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                _4464 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4464]:
                                    revert with 0, 50
                                mem[_4464 + 32] = token1Address
                                if 1 >= mem[_4464]:
                                    revert with 0, 50
                                mem[_4464 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4464 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4464 + 100] = u * v
                                mem[_4464 + 132] = 64
                                mem[_4464 + 164] = mem[_4464]
                                idx = 0
                                u = _4464 + 32
                                v = _4464 + 196
                                while idx < mem[_4464]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4464 + (32 * mem[_4464]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5195 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5202 = mem[_5195]
                                require mem[_5195] <= test266151307()
                                require _5195 + mem[_5195] + 31 < _5195 + return_data.size
                                _5209 = mem[_5195 + mem[_5195]]
                                if mem[_5195 + mem[_5195]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5195 + mem[_5195]]) + 1 < 0 or _5195 + ceil32(return_data.size) + ceil32(32 * mem[_5195 + mem[_5195]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5195 + ceil32(return_data.size) + ceil32(32 * mem[_5195 + mem[_5195]]) + 1
                                mem[_5195 + ceil32(return_data.size)] = _5209
                                require _5202 + (32 * _5209) + 32 <= return_data.size
                                mem[_5195 + ceil32(return_data.size) + 32 len ceil32(32 * _5209)] = mem[_5195 + _5202 + 32 len ceil32(32 * _5209)]
                                if 1 >= _5209:
                                    revert with 0, 50
                                _5652 = mem[_5195 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5195 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5195 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5726 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5652) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5726]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652) / mem[_5726] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652) / mem[_5726]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652) / mem[_5726] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652) / mem[_5726] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5195 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5195 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5750 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5652 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5750]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / 10^sub_3266f45c) / mem[_5750] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / 10^sub_3266f45c) / mem[_5750]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / 10^sub_3266f45c) / mem[_5750] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / 10^sub_3266f45c) / mem[_5750] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5195 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5195 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5879 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5652 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5879]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / u * v) / mem[_5879] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / u * v) / mem[_5879]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / u * v) / mem[_5879] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2380 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5652 / u * v) / mem[_5879] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(4 * ceil32(return_data.size)) + 96] = 2
                    mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(4 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(4 * ceil32(return_data.size)) + 228] = 64
                    mem[(4 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (4 * ceil32(return_data.size)) + 128
                    t = (4 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (6 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1251 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                    _1260 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(6 * ceil32(return_data.size)) + 192] = _1260
                    require _1251 + (32 * _1260) + 32 <= return_data.size
                    mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _1260)] = mem[(4 * ceil32(return_data.size)) + _1251 + 224 len ceil32(32 * _1260)]
                    if 1 >= _1260:
                        revert with 0, 50
                    _2379 = mem[(6 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _2433 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2433]:
                                revert with 0, 50
                            mem[_2433 + 32] = token1Address
                            if 1 >= mem[_2433]:
                                revert with 0, 50
                            mem[_2433 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2433 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2433 + 100] = 1
                            mem[_2433 + 132] = 64
                            mem[_2433 + 164] = mem[_2433]
                            idx = 0
                            s = _2433 + 32
                            t = _2433 + 196
                            while idx < mem[_2433]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2433 + (32 * mem[_2433]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3493 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3509 = mem[_3493]
                            require mem[_3493] <= test266151307()
                            require _3493 + mem[_3493] + 31 < _3493 + return_data.size
                            _3521 = mem[_3493 + mem[_3493]]
                            if mem[_3493 + mem[_3493]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3493 + mem[_3493]]) + 1 < 0 or _3493 + ceil32(return_data.size) + ceil32(32 * mem[_3493 + mem[_3493]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3493 + ceil32(return_data.size) + ceil32(32 * mem[_3493 + mem[_3493]]) + 1
                            mem[_3493 + ceil32(return_data.size)] = _3521
                            require _3509 + (32 * _3521) + 32 <= return_data.size
                            mem[_3493 + ceil32(return_data.size) + 32 len ceil32(32 * _3521)] = mem[_3493 + _3509 + 32 len ceil32(32 * _3521)]
                            if 1 >= _3521:
                                revert with 0, 50
                            _4425 = mem[_3493 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4605 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4425) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4605]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425) / mem[_4605] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425) / mem[_4605]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425) / mem[_4605] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425) / mem[_4605] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4655 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4425 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4655]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / 10^sub_3266f45c) / mem[_4655] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / 10^sub_3266f45c) / mem[_4655]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / 10^sub_3266f45c) / mem[_4655] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / 10^sub_3266f45c) / mem[_4655] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3493 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3493 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5243 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4425 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5243]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / s * t) / mem[_5243] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / s * t) / mem[_5243]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / s * t) / mem[_5243] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4425 / s * t) / mem[_5243] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2471 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2471]:
                                    revert with 0, 50
                                mem[_2471 + 32] = token1Address
                                if 1 >= mem[_2471]:
                                    revert with 0, 50
                                mem[_2471 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2471 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2471 + 100] = 10^sub_3266f45c
                                mem[_2471 + 132] = 64
                                mem[_2471 + 164] = mem[_2471]
                                idx = 0
                                s = _2471 + 32
                                t = _2471 + 196
                                while idx < mem[_2471]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2471 + (32 * mem[_2471]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3492 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3508 = mem[_3492]
                                require mem[_3492] <= test266151307()
                                require _3492 + mem[_3492] + 31 < _3492 + return_data.size
                                _3520 = mem[_3492 + mem[_3492]]
                                if mem[_3492 + mem[_3492]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3492 + mem[_3492]]) + 1 < 0 or _3492 + ceil32(return_data.size) + ceil32(32 * mem[_3492 + mem[_3492]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3492 + ceil32(return_data.size) + ceil32(32 * mem[_3492 + mem[_3492]]) + 1
                                mem[_3492 + ceil32(return_data.size)] = _3520
                                require _3508 + (32 * _3520) + 32 <= return_data.size
                                mem[_3492 + ceil32(return_data.size) + 32 len ceil32(32 * _3520)] = mem[_3492 + _3508 + 32 len ceil32(32 * _3520)]
                                if 1 >= _3520:
                                    revert with 0, 50
                                _4424 = mem[_3492 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3492 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3492 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4604 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4424) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4604]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424) / mem[_4604] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424) / mem[_4604]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424) / mem[_4604] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424) / mem[_4604] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3492 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3492 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4654 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4424 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4654]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / 10^sub_3266f45c) / mem[_4654] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / 10^sub_3266f45c) / mem[_4654]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / 10^sub_3266f45c) / mem[_4654] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / 10^sub_3266f45c) / mem[_4654] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3492 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3492 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5242 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _4424 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5242]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / s * t) / mem[_5242] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / s * t) / mem[_5242]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / s * t) / mem[_5242] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4424 / s * t) / mem[_5242] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3490 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3490]:
                                    revert with 0, 50
                                mem[_3490 + 32] = token1Address
                                if 1 >= mem[_3490]:
                                    revert with 0, 50
                                mem[_3490 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3490 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3490 + 100] = s * t
                                mem[_3490 + 132] = 64
                                mem[_3490 + 164] = mem[_3490]
                                idx = 0
                                s = _3490 + 32
                                t = _3490 + 196
                                while idx < mem[_3490]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3490 + (32 * mem[_3490]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4463 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4481 = mem[_4463]
                                require mem[_4463] <= test266151307()
                                require _4463 + mem[_4463] + 31 < _4463 + return_data.size
                                _4497 = mem[_4463 + mem[_4463]]
                                if mem[_4463 + mem[_4463]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4463 + mem[_4463]]) + 1 < 0 or _4463 + ceil32(return_data.size) + ceil32(32 * mem[_4463 + mem[_4463]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4463 + ceil32(return_data.size) + ceil32(32 * mem[_4463 + mem[_4463]]) + 1
                                mem[_4463 + ceil32(return_data.size)] = _4497
                                require _4481 + (32 * _4497) + 32 <= return_data.size
                                mem[_4463 + ceil32(return_data.size) + 32 len ceil32(32 * _4497)] = mem[_4463 + _4481 + 32 len ceil32(32 * _4497)]
                                if 1 >= _4497:
                                    revert with 0, 50
                                _5175 = mem[_4463 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4463 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4463 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5302 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _5175) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5302]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175) / mem[_5302] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175) / mem[_5302]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175) / mem[_5302] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175) / mem[_5302] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4463 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4463 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5352 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _5175 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5352]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / 10^sub_3266f45c) / mem[_5352] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / 10^sub_3266f45c) / mem[_5352]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / 10^sub_3266f45c) / mem[_5352] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / 10^sub_3266f45c) / mem[_5352] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4463 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4463 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5690 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379) + (Mask(112, 0, ext_call.return_data[32]) * _5175 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5690]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / s * t) / mem[_5690] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / s * t) / mem[_5690]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / s * t) / mem[_5690] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5175 / s * t) / mem[_5690] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _2469 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2469]:
                                    revert with 0, 50
                                mem[_2469 + 32] = token1Address
                                if 1 >= mem[_2469]:
                                    revert with 0, 50
                                mem[_2469 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2469 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2469 + 100] = 1
                                mem[_2469 + 132] = 64
                                mem[_2469 + 164] = mem[_2469]
                                idx = 0
                                s = _2469 + 32
                                t = _2469 + 196
                                while idx < mem[_2469]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2469 + (32 * mem[_2469]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3489 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3507 = mem[_3489]
                                require mem[_3489] <= test266151307()
                                require _3489 + mem[_3489] + 31 < _3489 + return_data.size
                                _3519 = mem[_3489 + mem[_3489]]
                                if mem[_3489 + mem[_3489]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3489 + mem[_3489]]) + 1 < 0 or _3489 + ceil32(return_data.size) + ceil32(32 * mem[_3489 + mem[_3489]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3489 + ceil32(return_data.size) + ceil32(32 * mem[_3489 + mem[_3489]]) + 1
                                mem[_3489 + ceil32(return_data.size)] = _3519
                                require _3507 + (32 * _3519) + 32 <= return_data.size
                                mem[_3489 + ceil32(return_data.size) + 32 len ceil32(32 * _3519)] = mem[_3489 + _3507 + 32 len ceil32(32 * _3519)]
                                if 1 >= _3519:
                                    revert with 0, 50
                                _4423 = mem[_3489 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4603 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4423) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4603]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423) / mem[_4603] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423) / mem[_4603]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423) / mem[_4603] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423) / mem[_4603] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4653 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4423 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4653]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / 10^sub_3266f45c) / mem[_4653] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / 10^sub_3266f45c) / mem[_4653]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / 10^sub_3266f45c) / mem[_4653] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / 10^sub_3266f45c) / mem[_4653] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3489 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3489 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5241 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4423 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5241]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / s * t) / mem[_5241] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / s * t) / mem[_5241]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / s * t) / mem[_5241] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4423 / s * t) / mem[_5241] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _2528 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_2528]:
                                        revert with 0, 50
                                    mem[_2528 + 32] = token1Address
                                    if 1 >= mem[_2528]:
                                        revert with 0, 50
                                    mem[_2528 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_2528 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_2528 + 100] = 10^sub_3266f45c
                                    mem[_2528 + 132] = 64
                                    mem[_2528 + 164] = mem[_2528]
                                    idx = 0
                                    s = _2528 + 32
                                    t = _2528 + 196
                                    while idx < mem[_2528]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _2528 + (32 * mem[_2528]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3488 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3506 = mem[_3488]
                                    require mem[_3488] <= test266151307()
                                    require _3488 + mem[_3488] + 31 < _3488 + return_data.size
                                    _3518 = mem[_3488 + mem[_3488]]
                                    if mem[_3488 + mem[_3488]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_3488 + mem[_3488]]) + 1 < 0 or _3488 + ceil32(return_data.size) + ceil32(32 * mem[_3488 + mem[_3488]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _3488 + ceil32(return_data.size) + ceil32(32 * mem[_3488 + mem[_3488]]) + 1
                                    mem[_3488 + ceil32(return_data.size)] = _3518
                                    require _3506 + (32 * _3518) + 32 <= return_data.size
                                    mem[_3488 + ceil32(return_data.size) + 32 len ceil32(32 * _3518)] = mem[_3488 + _3506 + 32 len ceil32(32 * _3518)]
                                    if 1 >= _3518:
                                        revert with 0, 50
                                    _4422 = mem[_3488 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3488 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3488 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4602 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4422) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4602]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422) / mem[_4602] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3488 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3488 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _4652 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_4652]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / 10^sub_3266f45c) / mem[_4652] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3488 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3488 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5240 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5240]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5240] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5240]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5240] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4422 / s * t) / mem[_5240] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _3486 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3486]:
                                        revert with 0, 50
                                    mem[_3486 + 32] = token1Address
                                    if 1 >= mem[_3486]:
                                        revert with 0, 50
                                    mem[_3486 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3486 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3486 + 100] = s * t
                                    mem[_3486 + 132] = 64
                                    mem[_3486 + 164] = mem[_3486]
                                    idx = 0
                                    s = _3486 + 32
                                    t = _3486 + 196
                                    while idx < mem[_3486]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3486 + (32 * mem[_3486]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4462 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4480 = mem[_4462]
                                    require mem[_4462] <= test266151307()
                                    require _4462 + mem[_4462] + 31 < _4462 + return_data.size
                                    _4496 = mem[_4462 + mem[_4462]]
                                    if mem[_4462 + mem[_4462]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4462 + mem[_4462]]) + 1 < 0 or _4462 + ceil32(return_data.size) + ceil32(32 * mem[_4462 + mem[_4462]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4462 + ceil32(return_data.size) + ceil32(32 * mem[_4462 + mem[_4462]]) + 1
                                    mem[_4462 + ceil32(return_data.size)] = _4496
                                    require _4480 + (32 * _4496) + 32 <= return_data.size
                                    mem[_4462 + ceil32(return_data.size) + 32 len ceil32(32 * _4496)] = mem[_4462 + _4480 + 32 len ceil32(32 * _4496)]
                                    if 1 >= _4496:
                                        revert with 0, 50
                                    _5174 = mem[_4462 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5301 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5174) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5301]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174) / mem[_5301] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174) / mem[_5301]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174) / mem[_5301] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174) / mem[_5301] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5351 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5174 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5351]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / 10^sub_3266f45c) / mem[_5351] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / 10^sub_3266f45c) / mem[_5351]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / 10^sub_3266f45c) / mem[_5351] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / 10^sub_3266f45c) / mem[_5351] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4462 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4462 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5689 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5174 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5689]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / s * t) / mem[_5689] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / s * t) / mem[_5689]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / s * t) / mem[_5689] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5174 / s * t) / mem[_5689] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3576 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3576]:
                                    revert with 0, 50
                                mem[_3576 + 32] = token1Address
                                if 1 >= mem[_3576]:
                                    revert with 0, 50
                                mem[_3576 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3576 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3576 + 100] = 1
                                mem[_3576 + 132] = 64
                                mem[_3576 + 164] = mem[_3576]
                                idx = 0
                                u = _3576 + 32
                                v = _3576 + 196
                                while idx < mem[_3576]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3576 + (32 * mem[_3576]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4461 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4479 = mem[_4461]
                                require mem[_4461] <= test266151307()
                                require _4461 + mem[_4461] + 31 < _4461 + return_data.size
                                _4495 = mem[_4461 + mem[_4461]]
                                if mem[_4461 + mem[_4461]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4461 + mem[_4461]]) + 1 < 0 or _4461 + ceil32(return_data.size) + ceil32(32 * mem[_4461 + mem[_4461]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4461 + ceil32(return_data.size) + ceil32(32 * mem[_4461 + mem[_4461]]) + 1
                                mem[_4461 + ceil32(return_data.size)] = _4495
                                require _4479 + (32 * _4495) + 32 <= return_data.size
                                mem[_4461 + ceil32(return_data.size) + 32 len ceil32(32 * _4495)] = mem[_4461 + _4479 + 32 len ceil32(32 * _4495)]
                                if 1 >= _4495:
                                    revert with 0, 50
                                _5173 = mem[_4461 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5300 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5173) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5300]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173) / mem[_5300] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173) / mem[_5300]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173) / mem[_5300] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173) / mem[_5300] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5350 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5173 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5350]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / 10^sub_3266f45c) / mem[_5350] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / 10^sub_3266f45c) / mem[_5350]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / 10^sub_3266f45c) / mem[_5350] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / 10^sub_3266f45c) / mem[_5350] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4461 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4461 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5688 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5173 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5688]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / u * v) / mem[_5688] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / u * v) / mem[_5688]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / u * v) / mem[_5688] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5173 / u * v) / mem[_5688] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _3633 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3633]:
                                        revert with 0, 50
                                    mem[_3633 + 32] = token1Address
                                    if 1 >= mem[_3633]:
                                        revert with 0, 50
                                    mem[_3633 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3633 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3633 + 100] = 10^sub_3266f45c
                                    mem[_3633 + 132] = 64
                                    mem[_3633 + 164] = mem[_3633]
                                    idx = 0
                                    u = _3633 + 32
                                    v = _3633 + 196
                                    while idx < mem[_3633]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3633 + (32 * mem[_3633]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4460 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4478 = mem[_4460]
                                    require mem[_4460] <= test266151307()
                                    require _4460 + mem[_4460] + 31 < _4460 + return_data.size
                                    _4494 = mem[_4460 + mem[_4460]]
                                    if mem[_4460 + mem[_4460]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4460 + mem[_4460]]) + 1 < 0 or _4460 + ceil32(return_data.size) + ceil32(32 * mem[_4460 + mem[_4460]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4460 + ceil32(return_data.size) + ceil32(32 * mem[_4460 + mem[_4460]]) + 1
                                    mem[_4460 + ceil32(return_data.size)] = _4494
                                    require _4478 + (32 * _4494) + 32 <= return_data.size
                                    mem[_4460 + ceil32(return_data.size) + 32 len ceil32(32 * _4494)] = mem[_4460 + _4478 + 32 len ceil32(32 * _4494)]
                                    if 1 >= _4494:
                                        revert with 0, 50
                                    _5172 = mem[_4460 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5299 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5172) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5299]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172) / mem[_5299] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5349 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5349]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / 10^sub_3266f45c) / mem[_5349] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4460 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4460 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5687 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5172 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5687]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / u * v) / mem[_5687] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / u * v) / mem[_5687]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / u * v) / mem[_5687] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5172 / u * v) / mem[_5687] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _4458 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4458]:
                                        revert with 0, 50
                                    mem[_4458 + 32] = token1Address
                                    if 1 >= mem[_4458]:
                                        revert with 0, 50
                                    mem[_4458 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4458 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4458 + 100] = u * v
                                    mem[_4458 + 132] = 64
                                    mem[_4458 + 164] = mem[_4458]
                                    idx = 0
                                    u = _4458 + 32
                                    v = _4458 + 196
                                    while idx < mem[_4458]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4458 + (32 * mem[_4458]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5194 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5201 = mem[_5194]
                                    require mem[_5194] <= test266151307()
                                    require _5194 + mem[_5194] + 31 < _5194 + return_data.size
                                    _5208 = mem[_5194 + mem[_5194]]
                                    if mem[_5194 + mem[_5194]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5194 + mem[_5194]]) + 1 < 0 or _5194 + ceil32(return_data.size) + ceil32(32 * mem[_5194 + mem[_5194]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5194 + ceil32(return_data.size) + ceil32(32 * mem[_5194 + mem[_5194]]) + 1
                                    mem[_5194 + ceil32(return_data.size)] = _5208
                                    require _5201 + (32 * _5208) + 32 <= return_data.size
                                    mem[_5194 + ceil32(return_data.size) + 32 len ceil32(32 * _5208)] = mem[_5194 + _5201 + 32 len ceil32(32 * _5208)]
                                    if 1 >= _5208:
                                        revert with 0, 50
                                    _5651 = mem[_5194 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5194 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5194 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5725 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5651) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5725]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651) / mem[_5725] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651) / mem[_5725]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651) / mem[_5725] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651) / mem[_5725] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5194 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5194 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5749 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5651 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5749]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / 10^sub_3266f45c) / mem[_5749] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / 10^sub_3266f45c) / mem[_5749]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / 10^sub_3266f45c) / mem[_5749] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / 10^sub_3266f45c) / mem[_5749] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5194 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5194 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5878 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5651 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5878]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / u * v) / mem[_5878] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / u * v) / mem[_5878]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / u * v) / mem[_5878] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2379 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5651 / u * v) / mem[_5878] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(4 * ceil32(return_data.size)) + 96] = 2
                    mem[(4 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(4 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(4 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(4 * ceil32(return_data.size)) + 196] = s * t
                    mem[(4 * ceil32(return_data.size)) + 228] = 64
                    mem[(4 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (4 * ceil32(return_data.size)) + 128
                    v = (4 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(4 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(4 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (6 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2391 = mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (4 * ceil32(return_data.size)) + return_data.size + 192
                    _2394 = mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (6 * ceil32(return_data.size)) + ceil32(32 * mem[(4 * ceil32(return_data.size)) + mem[(4 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(6 * ceil32(return_data.size)) + 192] = _2394
                    require _2391 + (32 * _2394) + 32 <= return_data.size
                    mem[(6 * ceil32(return_data.size)) + 224 len ceil32(32 * _2394)] = mem[(4 * ceil32(return_data.size)) + _2391 + 224 len ceil32(32 * _2394)]
                    if 1 >= _2394:
                        revert with 0, 50
                    _3467 = mem[(6 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _3622 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3622]:
                                revert with 0, 50
                            mem[_3622 + 32] = token1Address
                            if 1 >= mem[_3622]:
                                revert with 0, 50
                            mem[_3622 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3622 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3622 + 100] = 1
                            mem[_3622 + 132] = 64
                            mem[_3622 + 164] = mem[_3622]
                            idx = 0
                            s = _3622 + 32
                            t = _3622 + 196
                            while idx < mem[_3622]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3622 + (32 * mem[_3622]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4457 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4477 = mem[_4457]
                            require mem[_4457] <= test266151307()
                            require _4457 + mem[_4457] + 31 < _4457 + return_data.size
                            _4493 = mem[_4457 + mem[_4457]]
                            if mem[_4457 + mem[_4457]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4457 + mem[_4457]]) + 1 < 0 or _4457 + ceil32(return_data.size) + ceil32(32 * mem[_4457 + mem[_4457]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4457 + ceil32(return_data.size) + ceil32(32 * mem[_4457 + mem[_4457]]) + 1
                            mem[_4457 + ceil32(return_data.size)] = _4493
                            require _4477 + (32 * _4493) + 32 <= return_data.size
                            mem[_4457 + ceil32(return_data.size) + 32 len ceil32(32 * _4493)] = mem[_4457 + _4477 + 32 len ceil32(32 * _4493)]
                            if 1 >= _4493:
                                revert with 0, 50
                            _5171 = mem[_4457 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4457 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4457 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5298 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5171) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5298]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298]:
                                    revert with 0, 17
                                if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                    revert with 0, 17
                                mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171) / mem[_5298] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4457 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4457 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5348 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5348]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / 10^sub_3266f45c) / mem[_5348] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4457 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4457 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5686 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5686]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5171 / s * t) / mem[_5686] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3670 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3670]:
                                    revert with 0, 50
                                mem[_3670 + 32] = token1Address
                                if 1 >= mem[_3670]:
                                    revert with 0, 50
                                mem[_3670 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3670 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3670 + 100] = 10^sub_3266f45c
                                mem[_3670 + 132] = 64
                                mem[_3670 + 164] = mem[_3670]
                                idx = 0
                                s = _3670 + 32
                                t = _3670 + 196
                                while idx < mem[_3670]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3670 + (32 * mem[_3670]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4456 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4476 = mem[_4456]
                                require mem[_4456] <= test266151307()
                                require _4456 + mem[_4456] + 31 < _4456 + return_data.size
                                _4492 = mem[_4456 + mem[_4456]]
                                if mem[_4456 + mem[_4456]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4456 + mem[_4456]]) + 1 < 0 or _4456 + ceil32(return_data.size) + ceil32(32 * mem[_4456 + mem[_4456]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4456 + ceil32(return_data.size) + ceil32(32 * mem[_4456 + mem[_4456]]) + 1
                                mem[_4456 + ceil32(return_data.size)] = _4492
                                require _4476 + (32 * _4492) + 32 <= return_data.size
                                mem[_4456 + ceil32(return_data.size) + 32 len ceil32(32 * _4492)] = mem[_4456 + _4476 + 32 len ceil32(32 * _4492)]
                                if 1 >= _4492:
                                    revert with 0, 50
                                _5170 = mem[_4456 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5297 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5170) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5297]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170) / mem[_5297] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5347 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5347]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / 10^sub_3266f45c) / mem[_5347] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4456 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4456 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5685 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5170 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5685]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / s * t) / mem[_5685] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / s * t) / mem[_5685]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / s * t) / mem[_5685] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5170 / s * t) / mem[_5685] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _4454 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4454]:
                                    revert with 0, 50
                                mem[_4454 + 32] = token1Address
                                if 1 >= mem[_4454]:
                                    revert with 0, 50
                                mem[_4454 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4454 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4454 + 100] = s * t
                                mem[_4454 + 132] = 64
                                mem[_4454 + 164] = mem[_4454]
                                idx = 0
                                s = _4454 + 32
                                t = _4454 + 196
                                while idx < mem[_4454]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4454 + (32 * mem[_4454]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5193 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5200 = mem[_5193]
                                require mem[_5193] <= test266151307()
                                require _5193 + mem[_5193] + 31 < _5193 + return_data.size
                                _5207 = mem[_5193 + mem[_5193]]
                                if mem[_5193 + mem[_5193]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5193 + mem[_5193]]) + 1 < 0 or _5193 + ceil32(return_data.size) + ceil32(32 * mem[_5193 + mem[_5193]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5193 + ceil32(return_data.size) + ceil32(32 * mem[_5193 + mem[_5193]]) + 1
                                mem[_5193 + ceil32(return_data.size)] = _5207
                                require _5200 + (32 * _5207) + 32 <= return_data.size
                                mem[_5193 + ceil32(return_data.size) + 32 len ceil32(32 * _5207)] = mem[_5193 + _5200 + 32 len ceil32(32 * _5207)]
                                if 1 >= _5207:
                                    revert with 0, 50
                                _5650 = mem[_5193 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5193 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5193 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5724 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5650) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5724]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650) / mem[_5724] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650) / mem[_5724]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650) / mem[_5724] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650) / mem[_5724] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5193 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5193 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5748 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5650 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5748]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / 10^sub_3266f45c) / mem[_5748] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / 10^sub_3266f45c) / mem[_5748]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / 10^sub_3266f45c) / mem[_5748] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / 10^sub_3266f45c) / mem[_5748] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5193 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5193 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5877 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467) + (Mask(112, 0, ext_call.return_data[32]) * _5650 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5877]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / s * t) / mem[_5877] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / s * t) / mem[_5877]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / s * t) / mem[_5877] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5650 / s * t) / mem[_5877] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3668 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3668]:
                                    revert with 0, 50
                                mem[_3668 + 32] = token1Address
                                if 1 >= mem[_3668]:
                                    revert with 0, 50
                                mem[_3668 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3668 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3668 + 100] = 1
                                mem[_3668 + 132] = 64
                                mem[_3668 + 164] = mem[_3668]
                                idx = 0
                                s = _3668 + 32
                                t = _3668 + 196
                                while idx < mem[_3668]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3668 + (32 * mem[_3668]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4453 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4475 = mem[_4453]
                                require mem[_4453] <= test266151307()
                                require _4453 + mem[_4453] + 31 < _4453 + return_data.size
                                _4491 = mem[_4453 + mem[_4453]]
                                if mem[_4453 + mem[_4453]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4453 + mem[_4453]]) + 1 < 0 or _4453 + ceil32(return_data.size) + ceil32(32 * mem[_4453 + mem[_4453]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4453 + ceil32(return_data.size) + ceil32(32 * mem[_4453 + mem[_4453]]) + 1
                                mem[_4453 + ceil32(return_data.size)] = _4491
                                require _4475 + (32 * _4491) + 32 <= return_data.size
                                mem[_4453 + ceil32(return_data.size) + 32 len ceil32(32 * _4491)] = mem[_4453 + _4475 + 32 len ceil32(32 * _4491)]
                                if 1 >= _4491:
                                    revert with 0, 50
                                _5169 = mem[_4453 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5296 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5169) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5296]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169) / mem[_5296] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5346 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5346]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / 10^sub_3266f45c) / mem[_5346] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4453 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4453 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5684 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5169 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5684]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / s * t) / mem[_5684] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / s * t) / mem[_5684]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / s * t) / mem[_5684] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5169 / s * t) / mem[_5684] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _3725 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3725]:
                                        revert with 0, 50
                                    mem[_3725 + 32] = token1Address
                                    if 1 >= mem[_3725]:
                                        revert with 0, 50
                                    mem[_3725 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3725 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3725 + 100] = 10^sub_3266f45c
                                    mem[_3725 + 132] = 64
                                    mem[_3725 + 164] = mem[_3725]
                                    idx = 0
                                    s = _3725 + 32
                                    t = _3725 + 196
                                    while idx < mem[_3725]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3725 + (32 * mem[_3725]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4452 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4474 = mem[_4452]
                                    require mem[_4452] <= test266151307()
                                    require _4452 + mem[_4452] + 31 < _4452 + return_data.size
                                    _4490 = mem[_4452 + mem[_4452]]
                                    if mem[_4452 + mem[_4452]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4452 + mem[_4452]]) + 1 < 0 or _4452 + ceil32(return_data.size) + ceil32(32 * mem[_4452 + mem[_4452]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4452 + ceil32(return_data.size) + ceil32(32 * mem[_4452 + mem[_4452]]) + 1
                                    mem[_4452 + ceil32(return_data.size)] = _4490
                                    require _4474 + (32 * _4490) + 32 <= return_data.size
                                    mem[_4452 + ceil32(return_data.size) + 32 len ceil32(32 * _4490)] = mem[_4452 + _4474 + 32 len ceil32(32 * _4490)]
                                    if 1 >= _4490:
                                        revert with 0, 50
                                    _5168 = mem[_4452 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4452 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4452 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5295 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5168) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5295]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168) / mem[_5295] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4452 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4452 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5345 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5345]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / 10^sub_3266f45c) / mem[_5345] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4452 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4452 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5683 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5683]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5168 / s * t) / mem[_5683] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _4450 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4450]:
                                        revert with 0, 50
                                    mem[_4450 + 32] = token1Address
                                    if 1 >= mem[_4450]:
                                        revert with 0, 50
                                    mem[_4450 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4450 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4450 + 100] = s * t
                                    mem[_4450 + 132] = 64
                                    mem[_4450 + 164] = mem[_4450]
                                    idx = 0
                                    s = _4450 + 32
                                    t = _4450 + 196
                                    while idx < mem[_4450]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4450 + (32 * mem[_4450]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5192 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5199 = mem[_5192]
                                    require mem[_5192] <= test266151307()
                                    require _5192 + mem[_5192] + 31 < _5192 + return_data.size
                                    _5206 = mem[_5192 + mem[_5192]]
                                    if mem[_5192 + mem[_5192]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5192 + mem[_5192]]) + 1 < 0 or _5192 + ceil32(return_data.size) + ceil32(32 * mem[_5192 + mem[_5192]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5192 + ceil32(return_data.size) + ceil32(32 * mem[_5192 + mem[_5192]]) + 1
                                    mem[_5192 + ceil32(return_data.size)] = _5206
                                    require _5199 + (32 * _5206) + 32 <= return_data.size
                                    mem[_5192 + ceil32(return_data.size) + 32 len ceil32(32 * _5206)] = mem[_5192 + _5199 + 32 len ceil32(32 * _5206)]
                                    if 1 >= _5206:
                                        revert with 0, 50
                                    _5649 = mem[_5192 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5192 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5192 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5723 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5649) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5723]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649) / mem[_5723] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649) / mem[_5723]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649) / mem[_5723] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649) / mem[_5723] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5192 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5192 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5747 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5649 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5747]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / 10^sub_3266f45c) / mem[_5747] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / 10^sub_3266f45c) / mem[_5747]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / 10^sub_3266f45c) / mem[_5747] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / 10^sub_3266f45c) / mem[_5747] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5192 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5192 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5876 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5649 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5876]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / s * t) / mem[_5876] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / s * t) / mem[_5876]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / s * t) / mem[_5876] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5649 / s * t) / mem[_5876] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(6 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _4548 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4548]:
                                    revert with 0, 50
                                mem[_4548 + 32] = token1Address
                                if 1 >= mem[_4548]:
                                    revert with 0, 50
                                mem[_4548 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4548 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4548 + 100] = 1
                                mem[_4548 + 132] = 64
                                mem[_4548 + 164] = mem[_4548]
                                idx = 0
                                u = _4548 + 32
                                v = _4548 + 196
                                while idx < mem[_4548]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4548 + (32 * mem[_4548]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5191 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5198 = mem[_5191]
                                require mem[_5191] <= test266151307()
                                require _5191 + mem[_5191] + 31 < _5191 + return_data.size
                                _5205 = mem[_5191 + mem[_5191]]
                                if mem[_5191 + mem[_5191]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5191 + mem[_5191]]) + 1 < 0 or _5191 + ceil32(return_data.size) + ceil32(32 * mem[_5191 + mem[_5191]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5191 + ceil32(return_data.size) + ceil32(32 * mem[_5191 + mem[_5191]]) + 1
                                mem[_5191 + ceil32(return_data.size)] = _5205
                                require _5198 + (32 * _5205) + 32 <= return_data.size
                                mem[_5191 + ceil32(return_data.size) + 32 len ceil32(32 * _5205)] = mem[_5191 + _5198 + 32 len ceil32(32 * _5205)]
                                if 1 >= _5205:
                                    revert with 0, 50
                                _5648 = mem[_5191 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5191 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5191 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5722 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5648) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5722]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648) / mem[_5722] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648) / mem[_5722]:
                                        revert with 0, 17
                                    if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648) / mem[_5722] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                        revert with 0, 17
                                    mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648) / mem[_5722] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5191 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5191 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5746 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5648 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5746]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / 10^sub_3266f45c) / mem[_5746] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / 10^sub_3266f45c) / mem[_5746]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / 10^sub_3266f45c) / mem[_5746] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / 10^sub_3266f45c) / mem[_5746] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5191 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5191 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5875 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5648 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5875]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / u * v) / mem[_5875] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / u * v) / mem[_5875]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / u * v) / mem[_5875] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5648 / u * v) / mem[_5875] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _4616 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4616]:
                                        revert with 0, 50
                                    mem[_4616 + 32] = token1Address
                                    if 1 >= mem[_4616]:
                                        revert with 0, 50
                                    mem[_4616 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4616 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4616 + 100] = 10^sub_3266f45c
                                    mem[_4616 + 132] = 64
                                    mem[_4616 + 164] = mem[_4616]
                                    idx = 0
                                    u = _4616 + 32
                                    v = _4616 + 196
                                    while idx < mem[_4616]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4616 + (32 * mem[_4616]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5190 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5197 = mem[_5190]
                                    require mem[_5190] <= test266151307()
                                    require _5190 + mem[_5190] + 31 < _5190 + return_data.size
                                    _5204 = mem[_5190 + mem[_5190]]
                                    if mem[_5190 + mem[_5190]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5190 + mem[_5190]]) + 1 < 0 or _5190 + ceil32(return_data.size) + ceil32(32 * mem[_5190 + mem[_5190]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5190 + ceil32(return_data.size) + ceil32(32 * mem[_5190 + mem[_5190]]) + 1
                                    mem[_5190 + ceil32(return_data.size)] = _5204
                                    require _5197 + (32 * _5204) + 32 <= return_data.size
                                    mem[_5190 + ceil32(return_data.size) + 32 len ceil32(32 * _5204)] = mem[_5190 + _5197 + 32 len ceil32(32 * _5204)]
                                    if 1 >= _5204:
                                        revert with 0, 50
                                    _5647 = mem[_5190 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5190 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5190 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5721 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5647) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5721]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647) / mem[_5721] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647) / mem[_5721]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647) / mem[_5721] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647) / mem[_5721] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5190 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5190 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5745 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5647 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5745]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / 10^sub_3266f45c) / mem[_5745] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / 10^sub_3266f45c) / mem[_5745]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / 10^sub_3266f45c) / mem[_5745] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / 10^sub_3266f45c) / mem[_5745] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5190 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5190 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5874 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5647 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5874]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / u * v) / mem[_5874] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / u * v) / mem[_5874]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / u * v) / mem[_5874] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5647 / u * v) / mem[_5874] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _5188 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_5188]:
                                        revert with 0, 50
                                    mem[_5188 + 32] = token1Address
                                    if 1 >= mem[_5188]:
                                        revert with 0, 50
                                    mem[_5188 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_5188 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_5188 + 100] = u * v
                                    mem[_5188 + 132] = 64
                                    mem[_5188 + 164] = mem[_5188]
                                    idx = 0
                                    u = _5188 + 32
                                    v = _5188 + 196
                                    while idx < mem[_5188]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _5188 + (32 * mem[_5188]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5654 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5655 = mem[_5654]
                                    require mem[_5654] <= test266151307()
                                    require _5654 + mem[_5654] + 31 < _5654 + return_data.size
                                    _5656 = mem[_5654 + mem[_5654]]
                                    if mem[_5654 + mem[_5654]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5654 + mem[_5654]]) + 1 < 0 or _5654 + ceil32(return_data.size) + ceil32(32 * mem[_5654 + mem[_5654]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5654 + ceil32(return_data.size) + ceil32(32 * mem[_5654 + mem[_5654]]) + 1
                                    mem[_5654 + ceil32(return_data.size)] = _5656
                                    require _5655 + (32 * _5656) + 32 <= return_data.size
                                    mem[_5654 + ceil32(return_data.size) + 32 len ceil32(32 * _5656)] = mem[_5654 + _5655 + 32 len ceil32(32 * _5656)]
                                    if 1 >= _5656:
                                        revert with 0, 50
                                    _5861 = mem[_5654 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5888 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5861) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5888]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861) / mem[_5888] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861) / mem[_5888]:
                                            revert with 0, 17
                                        if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861) / mem[_5888] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                            revert with 0, 17
                                        mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861) / mem[_5888] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5892 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5861 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5892]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / 10^sub_3266f45c) / mem[_5892] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / 10^sub_3266f45c) / mem[_5892]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / 10^sub_3266f45c) / mem[_5892] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / 10^sub_3266f45c) / mem[_5892] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5918 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5861 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5918]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / u * v) / mem[_5918] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / u * v) / mem[_5918]:
                                                revert with 0, 17
                                            if ext_call.return_data[0] and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / u * v) / mem[_5918] * ext_call.return_data[0] / 100 * 10^18 > -1 / ext_call.return_data[0]:
                                                revert with 0, 17
                                            mem[mem[64]] = ext_call.return_data[0] * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3467 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5861 / u * v) / mem[_5918] * ext_call.return_data[0] / 100 * 10^18 / 10^18
    return memory
      from mem[64]
       len 32
}

function sub_ba633017(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    require ext_code.size(0xa77230d17318075983913bc2145db16c7366156)
    staticcall 0xa77230d17318075983913bc2145db16c7366156.latestAnswer() with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'ChainLink error'
    require ext_code.size(lpTokenAddress)
    staticcall lpTokenAddress.getReserves() with:
            gas gas_remaining wei
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token0Address:
        if not sub_3266f45c:
            mem[(2 * ceil32(return_data.size)) + 96] = 2
            mem[(2 * ceil32(return_data.size)) + 128] = token1Address
            mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
            mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[(2 * ceil32(return_data.size)) + 196] = 1
            mem[(2 * ceil32(return_data.size)) + 228] = 64
            mem[(2 * ceil32(return_data.size)) + 260] = 2
            idx = 0
            s = (2 * ceil32(return_data.size)) + 128
            t = (2 * ceil32(return_data.size)) + 292
            while idx < 2:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = (4 * ceil32(return_data.size)) + 192
            require return_data.size >= 32
            _1348 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
            require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
            require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
            _1357 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
            if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                revert with 0, 65
            mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
            mem[(4 * ceil32(return_data.size)) + 192] = _1357
            require _1348 + (32 * _1357) + 32 <= return_data.size
            mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1357)] = mem[(2 * ceil32(return_data.size)) + _1348 + 224 len ceil32(32 * _1357)]
            if 1 >= _1357:
                revert with 0, 50
            _2575 = mem[(4 * ceil32(return_data.size)) + 256]
            if not sub_3266f45c:
                if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 17
                if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                    revert with 0, 17
                require ext_code.size(lpTokenAddress)
                staticcall lpTokenAddress.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2623 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2575) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                    revert with 0, 17
                if not mem[_2623]:
                    revert with 0, 18
                if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575) / mem[_2623] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575) / mem[_2623]:
                    revert with 0, 17
                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575) / mem[_2623] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                    revert with 0, 17
                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575) / mem[_2623] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not 10^sub_3266f45c:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2659 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2575 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2659]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / 10^sub_3266f45c) / mem[_2659] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / 10^sub_3266f45c) / mem[_2659]:
                        revert with 0, 17
                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / 10^sub_3266f45c) / mem[_2659] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                        revert with 0, 17
                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / 10^sub_3266f45c) / mem[_2659] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_3266f45c
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if not s * t:
                        revert with 0, 18
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2575 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3865]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / s * t) / mem[_3865] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / s * t) / mem[_3865]:
                        revert with 0, 17
                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / s * t) / mem[_3865] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                        revert with 0, 17
                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2575 / s * t) / mem[_3865] * ext_call.return_data[0] / 100 * 10^18 / 10^18
        else:
            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token1Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_3266f45c
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^sub_3266f45c, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1347 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1356 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_3266f45c) >> 32 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1356
                require _1347 + (32 * _1356) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1356)] = mem[(2 * ceil32(return_data.size)) + _1347 + 224 len ceil32(32 * _1356)]
                if 1 >= _1356:
                    revert with 0, 50
                _2574 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2622 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2574) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2622]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574) / mem[_2622] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574) / mem[_2622]:
                        revert with 0, 17
                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574) / mem[_2622] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                        revert with 0, 17
                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574) / mem[_2622] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2658 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2574 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2658]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / 10^sub_3266f45c) / mem[_2658] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / 10^sub_3266f45c) / mem[_2658]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / 10^sub_3266f45c) / mem[_2658] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / 10^sub_3266f45c) / mem[_2658] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _2574 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3864]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / s * t) / mem[_3864] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / s * t) / mem[_3864]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / s * t) / mem[_3864] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _2574 / s * t) / mem[_3864] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                s = 10
                t = 1
                idx = sub_3266f45c
                while idx > 1:
                    if s > -1 / s:
                        revert with 0, 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = s * t
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 0, 17
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token1Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = s * t
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                u = (2 * ceil32(return_data.size)) + 128
                v = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[v] = mem[u + 12 len 20]
                    idx = idx + 1
                    u = u + 32
                    v = v + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _2584 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _2587 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _2587
                require _2584 + (32 * _2587) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2587)] = mem[(2 * ceil32(return_data.size)) + _2584 + 224 len ceil32(32 * _2587)]
                if 1 >= _2587:
                    revert with 0, 50
                _3759 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_3266f45c:
                    if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3911 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3759) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_3911]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759) / mem[_3911] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759) / mem[_3911]:
                        revert with 0, 17
                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759) / mem[_3911] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                        revert with 0, 17
                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759) / mem[_3911] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not 10^sub_3266f45c:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_3266f45c):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3957 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3759 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3957]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / 10^sub_3266f45c) / mem[_3957] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / 10^sub_3266f45c) / mem[_3957]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / 10^sub_3266f45c) / mem[_3957] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / 10^sub_3266f45c) / mem[_3957] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_3266f45c
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[32]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[0]) > !(Mask(112, 0, ext_call.return_data[32]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4928 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[0]) + (Mask(112, 0, ext_call.return_data[32]) * _3759 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_4928]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / s * t) / mem[_4928] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / s * t) / mem[_4928]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / s * t) / mem[_4928] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0])) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _3759 / s * t) / mem[_4928] * ext_call.return_data[0] / 100 * 10^18 / 10^18
    else:
        if 0xd4000000000000000000000000b31f66aa3c1e785363f0875a1b74e27b85fd66 == token1Address:
            if not sub_9ddc230a:
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 1
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1346 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1355 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1355
                require _1346 + (32 * _1355) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1355)] = mem[(2 * ceil32(return_data.size)) + _1346 + 224 len ceil32(32 * _1355)]
                if 1 >= _1355:
                    revert with 0, 50
                _2573 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                        revert with 0, 17
                    require ext_code.size(lpTokenAddress)
                    staticcall lpTokenAddress.0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2621 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2573) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                        revert with 0, 17
                    if not mem[_2621]:
                        revert with 0, 18
                    if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573) / mem[_2621] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573) / mem[_2621]:
                        revert with 0, 17
                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573) / mem[_2621] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                        revert with 0, 17
                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573) / mem[_2621] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2657 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2573 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2657]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / 10^sub_9ddc230a) / mem[_2657] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / 10^sub_9ddc230a) / mem[_2657]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / 10^sub_9ddc230a) / mem[_2657] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / 10^sub_9ddc230a) / mem[_2657] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2573 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3863]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / s * t) / mem[_3863] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / s * t) / mem[_3863]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / s * t) / mem[_3863] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2573 / s * t) / mem[_3863] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (2 * ceil32(return_data.size)) + 128
                    t = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1345 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _1354 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _1354
                    require _1345 + (32 * _1354) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1354)] = mem[(2 * ceil32(return_data.size)) + _1345 + 224 len ceil32(32 * _1354)]
                    if 1 >= _1354:
                        revert with 0, 50
                    _2572 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2572) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_2620]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572) / mem[_2620] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572) / mem[_2620]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572) / mem[_2620] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572) / mem[_2620] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2656 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2572 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_2656]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / 10^sub_9ddc230a) / mem[_2656] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / 10^sub_9ddc230a) / mem[_2656]:
                                revert with 0, 17
                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / 10^sub_9ddc230a) / mem[_2656] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                revert with 0, 17
                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / 10^sub_9ddc230a) / mem[_2656] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3862 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _2572 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3862]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / s * t) / mem[_3862] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / s * t) / mem[_3862]:
                                revert with 0, 17
                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / s * t) / mem[_3862] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                revert with 0, 17
                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2572 / s * t) / mem[_3862] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = s * t
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (2 * ceil32(return_data.size)) + 128
                    v = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2583 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _2586 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _2586
                    require _2583 + (32 * _2586) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2586)] = mem[(2 * ceil32(return_data.size)) + _2583 + 224 len ceil32(32 * _2586)]
                    if 1 >= _2586:
                        revert with 0, 50
                    _3758 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256]):
                            revert with 0, 17
                        require ext_code.size(lpTokenAddress)
                        staticcall lpTokenAddress.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3910 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3758) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 0, 17
                        if not mem[_3910]:
                            revert with 0, 18
                        if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758) / mem[_3910] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758) / mem[_3910]:
                            revert with 0, 17
                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758) / mem[_3910] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                            revert with 0, 17
                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758) / mem[_3910] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / 10^sub_9ddc230a):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3758 / 10^sub_9ddc230a) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_3956]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / 10^sub_9ddc230a) / mem[_3956] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / 10^sub_9ddc230a) / mem[_3956]:
                                revert with 0, 17
                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / 10^sub_9ddc230a) / mem[_3956] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                revert with 0, 17
                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / 10^sub_9ddc230a) / mem[_3956] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if Mask(112, 0, ext_call.return_data[32]) > !(Mask(112, 0, ext_call.return_data[0]) * mem[(4 * ceil32(return_data.size)) + 256] / s * t):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4927 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if Mask(112, 0, ext_call.return_data[32]) + (Mask(112, 0, ext_call.return_data[0]) * _3758 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4927]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / s * t) / mem[_4927] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / s * t) / mem[_4927]:
                                revert with 0, 17
                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / s * t) / mem[_4927] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                revert with 0, 17
                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[32])) + (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3758 / s * t) / mem[_4927] * ext_call.return_data[0] / 100 * 10^18 / 10^18
        else:
            if not sub_9ddc230a:
                mem[(2 * ceil32(return_data.size)) + 96] = 2
                mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[(2 * ceil32(return_data.size)) + 196] = 1
                mem[(2 * ceil32(return_data.size)) + 228] = 64
                mem[(2 * ceil32(return_data.size)) + 260] = 2
                idx = 0
                s = (2 * ceil32(return_data.size)) + 128
                t = (2 * ceil32(return_data.size)) + 292
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 1, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = (4 * ceil32(return_data.size)) + 192
                require return_data.size >= 32
                _1344 = mem[(2 * ceil32(return_data.size)) + 192 len 4], 0
                require mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 <= test266151307()
                require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                _1353 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]
                if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193 > test266151307():
                    revert with 0, 65
                mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], 0 + 192]) + 193
                mem[(4 * ceil32(return_data.size)) + 192] = _1353
                require _1344 + (32 * _1353) + 32 <= return_data.size
                mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1353)] = mem[(2 * ceil32(return_data.size)) + _1344 + 224 len ceil32(32 * _1353)]
                if 1 >= _1353:
                    revert with 0, 50
                _2571 = mem[(4 * ceil32(return_data.size)) + 256]
                if not sub_9ddc230a:
                    if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 17
                    if not sub_3266f45c:
                        _2626 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_2626]:
                            revert with 0, 50
                        mem[_2626 + 32] = token1Address
                        if 1 >= mem[_2626]:
                            revert with 0, 50
                        mem[_2626 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                        mem[_2626 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_2626 + 100] = 1
                        mem[_2626 + 132] = 64
                        mem[_2626 + 164] = mem[_2626]
                        idx = 0
                        s = _2626 + 32
                        t = _2626 + 196
                        while idx < mem[_2626]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                        staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _2626 + (32 * mem[_2626]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3791 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3803 = mem[_3791]
                        require mem[_3791] <= test266151307()
                        require _3791 + mem[_3791] + 31 < _3791 + return_data.size
                        _3815 = mem[_3791 + mem[_3791]]
                        if mem[_3791 + mem[_3791]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_3791 + mem[_3791]]) + 1 < 0 or _3791 + ceil32(return_data.size) + ceil32(32 * mem[_3791 + mem[_3791]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _3791 + ceil32(return_data.size) + ceil32(32 * mem[_3791 + mem[_3791]]) + 1
                        mem[_3791 + ceil32(return_data.size)] = _3815
                        require _3803 + (32 * _3815) + 32 <= return_data.size
                        mem[_3791 + ceil32(return_data.size) + 32 len ceil32(32 * _3815)] = mem[_3791 + _3803 + 32 len ceil32(32 * _3815)]
                        if 1 >= _3815:
                            revert with 0, 50
                        _4810 = mem[_3791 + ceil32(return_data.size) + 64]
                        if not sub_3266f45c:
                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3791 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3791 + ceil32(return_data.size) + 64]):
                                revert with 0, 17
                            require ext_code.size(lpTokenAddress)
                            staticcall lpTokenAddress.0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4810) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 0, 17
                            if not mem[_4990]:
                                revert with 0, 18
                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810) / mem[_4990] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810) / mem[_4990]:
                                revert with 0, 17
                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810) / mem[_4990] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                revert with 0, 17
                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810) / mem[_4990] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3791 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not 10^sub_3266f45c:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3791 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5040 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4810 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5040]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / 10^sub_3266f45c) / mem[_5040] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / 10^sub_3266f45c) / mem[_5040]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / 10^sub_3266f45c) / mem[_5040] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / 10^sub_3266f45c) / mem[_5040] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3791 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if not s * t:
                                    revert with 0, 18
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3791 + ceil32(return_data.size) + 64] / s * t):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5712 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4810 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5712]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / s * t) / mem[_5712] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / s * t) / mem[_5712]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / s * t) / mem[_5712] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4810 / s * t) / mem[_5712] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                            _2667 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2667]:
                                revert with 0, 50
                            mem[_2667 + 32] = token1Address
                            if 1 >= mem[_2667]:
                                revert with 0, 50
                            mem[_2667 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2667 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2667 + 100] = 10^sub_3266f45c
                            mem[_2667 + 132] = 64
                            mem[_2667 + 164] = mem[_2667]
                            idx = 0
                            s = _2667 + 32
                            t = _2667 + 196
                            while idx < mem[_2667]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2667 + (32 * mem[_2667]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3790 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3802 = mem[_3790]
                            require mem[_3790] <= test266151307()
                            require _3790 + mem[_3790] + 31 < _3790 + return_data.size
                            _3814 = mem[_3790 + mem[_3790]]
                            if mem[_3790 + mem[_3790]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3790 + mem[_3790]]) + 1 < 0 or _3790 + ceil32(return_data.size) + ceil32(32 * mem[_3790 + mem[_3790]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3790 + ceil32(return_data.size) + ceil32(32 * mem[_3790 + mem[_3790]]) + 1
                            mem[_3790 + ceil32(return_data.size)] = _3814
                            require _3802 + (32 * _3814) + 32 <= return_data.size
                            mem[_3790 + ceil32(return_data.size) + 32 len ceil32(32 * _3814)] = mem[_3790 + _3802 + 32 len ceil32(32 * _3814)]
                            if 1 >= _3814:
                                revert with 0, 50
                            _4809 = mem[_3790 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3790 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3790 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4989 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4809) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4989]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809) / mem[_4989] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809) / mem[_4989]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809) / mem[_4989] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809) / mem[_4989] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3790 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3790 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5039 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4809 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5039]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / 10^sub_3266f45c) / mem[_5039] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / 10^sub_3266f45c) / mem[_5039]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / 10^sub_3266f45c) / mem[_5039] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / 10^sub_3266f45c) / mem[_5039] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3790 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3790 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5711 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _4809 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5711]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / s * t) / mem[_5711] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / s * t) / mem[_5711]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / s * t) / mem[_5711] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4809 / s * t) / mem[_5711] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_3266f45c
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            _3788 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3788]:
                                revert with 0, 50
                            mem[_3788 + 32] = token1Address
                            if 1 >= mem[_3788]:
                                revert with 0, 50
                            mem[_3788 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3788 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3788 + 100] = s * t
                            mem[_3788 + 132] = 64
                            mem[_3788 + 164] = mem[_3788]
                            idx = 0
                            s = _3788 + 32
                            t = _3788 + 196
                            while idx < mem[_3788]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3788 + (32 * mem[_3788]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4850 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4866 = mem[_4850]
                            require mem[_4850] <= test266151307()
                            require _4850 + mem[_4850] + 31 < _4850 + return_data.size
                            _4882 = mem[_4850 + mem[_4850]]
                            if mem[_4850 + mem[_4850]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4850 + mem[_4850]]) + 1 < 0 or _4850 + ceil32(return_data.size) + ceil32(32 * mem[_4850 + mem[_4850]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4850 + ceil32(return_data.size) + ceil32(32 * mem[_4850 + mem[_4850]]) + 1
                            mem[_4850 + ceil32(return_data.size)] = _4882
                            require _4866 + (32 * _4882) + 32 <= return_data.size
                            mem[_4850 + ceil32(return_data.size) + 32 len ceil32(32 * _4882)] = mem[_4850 + _4866 + 32 len ceil32(32 * _4882)]
                            if 1 >= _4882:
                                revert with 0, 50
                            _5643 = mem[_4850 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4850 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4850 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5770 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _5643) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5770]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5770] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5770]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5770] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643) / mem[_5770] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4850 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4850 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5820 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5820]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5820] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5820]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5820] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / 10^sub_3266f45c) / mem[_5820] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4850 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4850 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6223 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571) + (Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6223]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_6223] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_6223]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_6223] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5643 / s * t) / mem[_6223] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not 10^sub_9ddc230a:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _2665 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2665]:
                                revert with 0, 50
                            mem[_2665 + 32] = token1Address
                            if 1 >= mem[_2665]:
                                revert with 0, 50
                            mem[_2665 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2665 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2665 + 100] = 1
                            mem[_2665 + 132] = 64
                            mem[_2665 + 164] = mem[_2665]
                            idx = 0
                            s = _2665 + 32
                            t = _2665 + 196
                            while idx < mem[_2665]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2665 + (32 * mem[_2665]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3787 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3801 = mem[_3787]
                            require mem[_3787] <= test266151307()
                            require _3787 + mem[_3787] + 31 < _3787 + return_data.size
                            _3813 = mem[_3787 + mem[_3787]]
                            if mem[_3787 + mem[_3787]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3787 + mem[_3787]]) + 1 < 0 or _3787 + ceil32(return_data.size) + ceil32(32 * mem[_3787 + mem[_3787]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3787 + ceil32(return_data.size) + ceil32(32 * mem[_3787 + mem[_3787]]) + 1
                            mem[_3787 + ceil32(return_data.size)] = _3813
                            require _3801 + (32 * _3813) + 32 <= return_data.size
                            mem[_3787 + ceil32(return_data.size) + 32 len ceil32(32 * _3813)] = mem[_3787 + _3801 + 32 len ceil32(32 * _3813)]
                            if 1 >= _3813:
                                revert with 0, 50
                            _4808 = mem[_3787 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3787 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3787 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4988 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4808) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4988]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808) / mem[_4988] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808) / mem[_4988]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808) / mem[_4988] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808) / mem[_4988] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3787 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3787 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5038 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4808 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5038]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / 10^sub_3266f45c) / mem[_5038] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / 10^sub_3266f45c) / mem[_5038]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / 10^sub_3266f45c) / mem[_5038] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / 10^sub_3266f45c) / mem[_5038] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3787 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3787 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5710 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4808 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5710]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / s * t) / mem[_5710] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / s * t) / mem[_5710]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / s * t) / mem[_5710] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4808 / s * t) / mem[_5710] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2726 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2726]:
                                    revert with 0, 50
                                mem[_2726 + 32] = token1Address
                                if 1 >= mem[_2726]:
                                    revert with 0, 50
                                mem[_2726 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2726 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2726 + 100] = 10^sub_3266f45c
                                mem[_2726 + 132] = 64
                                mem[_2726 + 164] = mem[_2726]
                                idx = 0
                                s = _2726 + 32
                                t = _2726 + 196
                                while idx < mem[_2726]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2726 + (32 * mem[_2726]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3786 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3800 = mem[_3786]
                                require mem[_3786] <= test266151307()
                                require _3786 + mem[_3786] + 31 < _3786 + return_data.size
                                _3812 = mem[_3786 + mem[_3786]]
                                if mem[_3786 + mem[_3786]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3786 + mem[_3786]]) + 1 < 0 or _3786 + ceil32(return_data.size) + ceil32(32 * mem[_3786 + mem[_3786]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3786 + ceil32(return_data.size) + ceil32(32 * mem[_3786 + mem[_3786]]) + 1
                                mem[_3786 + ceil32(return_data.size)] = _3812
                                require _3800 + (32 * _3812) + 32 <= return_data.size
                                mem[_3786 + ceil32(return_data.size) + 32 len ceil32(32 * _3812)] = mem[_3786 + _3800 + 32 len ceil32(32 * _3812)]
                                if 1 >= _3812:
                                    revert with 0, 50
                                _4807 = mem[_3786 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3786 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3786 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4987 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4807) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4987]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807) / mem[_4987] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807) / mem[_4987]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807) / mem[_4987] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807) / mem[_4987] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3786 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3786 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5037 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4807 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5037]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / 10^sub_3266f45c) / mem[_5037] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / 10^sub_3266f45c) / mem[_5037]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / 10^sub_3266f45c) / mem[_5037] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / 10^sub_3266f45c) / mem[_5037] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3786 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3786 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5709 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4807 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5709]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / s * t) / mem[_5709] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / s * t) / mem[_5709]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / s * t) / mem[_5709] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4807 / s * t) / mem[_5709] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3784 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3784]:
                                    revert with 0, 50
                                mem[_3784 + 32] = token1Address
                                if 1 >= mem[_3784]:
                                    revert with 0, 50
                                mem[_3784 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3784 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3784 + 100] = s * t
                                mem[_3784 + 132] = 64
                                mem[_3784 + 164] = mem[_3784]
                                idx = 0
                                s = _3784 + 32
                                t = _3784 + 196
                                while idx < mem[_3784]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3784 + (32 * mem[_3784]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4849 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4865 = mem[_4849]
                                require mem[_4849] <= test266151307()
                                require _4849 + mem[_4849] + 31 < _4849 + return_data.size
                                _4881 = mem[_4849 + mem[_4849]]
                                if mem[_4849 + mem[_4849]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4849 + mem[_4849]]) + 1 < 0 or _4849 + ceil32(return_data.size) + ceil32(32 * mem[_4849 + mem[_4849]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4849 + ceil32(return_data.size) + ceil32(32 * mem[_4849 + mem[_4849]]) + 1
                                mem[_4849 + ceil32(return_data.size)] = _4881
                                require _4865 + (32 * _4881) + 32 <= return_data.size
                                mem[_4849 + ceil32(return_data.size) + 32 len ceil32(32 * _4881)] = mem[_4849 + _4865 + 32 len ceil32(32 * _4881)]
                                if 1 >= _4881:
                                    revert with 0, 50
                                _5642 = mem[_4849 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4849 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4849 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5769 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5769]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5769] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5769]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5769] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642) / mem[_5769] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4849 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4849 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5819 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5819]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5819] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5819]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5819] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / 10^sub_3266f45c) / mem[_5819] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4849 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4849 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6222 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6222]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_6222] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_6222]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_6222] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5642 / s * t) / mem[_6222] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        s = 10
                        t = 1
                        idx = sub_9ddc230a
                        while idx > 1:
                            if s > -1 / s:
                                revert with 0, 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 0, 17
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not s * t:
                            revert with 0, 18
                        if not sub_3266f45c:
                            _3874 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3874]:
                                revert with 0, 50
                            mem[_3874 + 32] = token1Address
                            if 1 >= mem[_3874]:
                                revert with 0, 50
                            mem[_3874 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3874 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3874 + 100] = 1
                            mem[_3874 + 132] = 64
                            mem[_3874 + 164] = mem[_3874]
                            idx = 0
                            u = _3874 + 32
                            v = _3874 + 196
                            while idx < mem[_3874]:
                                mem[v] = mem[u + 12 len 20]
                                idx = idx + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3874 + (32 * mem[_3874]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4848 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4864 = mem[_4848]
                            require mem[_4848] <= test266151307()
                            require _4848 + mem[_4848] + 31 < _4848 + return_data.size
                            _4880 = mem[_4848 + mem[_4848]]
                            if mem[_4848 + mem[_4848]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4848 + mem[_4848]]) + 1 < 0 or _4848 + ceil32(return_data.size) + ceil32(32 * mem[_4848 + mem[_4848]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4848 + ceil32(return_data.size) + ceil32(32 * mem[_4848 + mem[_4848]]) + 1
                            mem[_4848 + ceil32(return_data.size)] = _4880
                            require _4864 + (32 * _4880) + 32 <= return_data.size
                            mem[_4848 + ceil32(return_data.size) + 32 len ceil32(32 * _4880)] = mem[_4848 + _4864 + 32 len ceil32(32 * _4880)]
                            if 1 >= _4880:
                                revert with 0, 50
                            _5641 = mem[_4848 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4848 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4848 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5768 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5768]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5768] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5768]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5768] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641) / mem[_5768] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4848 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4848 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5818 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5818]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5818] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5818]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5818] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / 10^sub_3266f45c) / mem[_5818] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4848 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not u * v:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4848 + ceil32(return_data.size) + 64] / u * v):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6221 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6221]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_6221] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_6221]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_6221] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5641 / u * v) / mem[_6221] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3926 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3926]:
                                    revert with 0, 50
                                mem[_3926 + 32] = token1Address
                                if 1 >= mem[_3926]:
                                    revert with 0, 50
                                mem[_3926 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3926 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3926 + 100] = 10^sub_3266f45c
                                mem[_3926 + 132] = 64
                                mem[_3926 + 164] = mem[_3926]
                                idx = 0
                                u = _3926 + 32
                                v = _3926 + 196
                                while idx < mem[_3926]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3926 + (32 * mem[_3926]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4847 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4863 = mem[_4847]
                                require mem[_4847] <= test266151307()
                                require _4847 + mem[_4847] + 31 < _4847 + return_data.size
                                _4879 = mem[_4847 + mem[_4847]]
                                if mem[_4847 + mem[_4847]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4847 + mem[_4847]]) + 1 < 0 or _4847 + ceil32(return_data.size) + ceil32(32 * mem[_4847 + mem[_4847]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4847 + ceil32(return_data.size) + ceil32(32 * mem[_4847 + mem[_4847]]) + 1
                                mem[_4847 + ceil32(return_data.size)] = _4879
                                require _4863 + (32 * _4879) + 32 <= return_data.size
                                mem[_4847 + ceil32(return_data.size) + 32 len ceil32(32 * _4879)] = mem[_4847 + _4863 + 32 len ceil32(32 * _4879)]
                                if 1 >= _4879:
                                    revert with 0, 50
                                _5640 = mem[_4847 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4847 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4847 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5767 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5767]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5767] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5767]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5767] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640) / mem[_5767] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4847 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4847 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5817 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5817]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5817] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5817]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5817] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / 10^sub_3266f45c) / mem[_5817] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4847 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4847 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6220 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6220]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_6220] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_6220]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_6220] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5640 / u * v) / mem[_6220] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                u = 10
                                v = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 0, 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = u * v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 0, 17
                                _4845 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4845]:
                                    revert with 0, 50
                                mem[_4845 + 32] = token1Address
                                if 1 >= mem[_4845]:
                                    revert with 0, 50
                                mem[_4845 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4845 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4845 + 100] = u * v
                                mem[_4845 + 132] = 64
                                mem[_4845 + 164] = mem[_4845]
                                idx = 0
                                u = _4845 + 32
                                v = _4845 + 196
                                while idx < mem[_4845]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4845 + (32 * mem[_4845]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5659 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5666 = mem[_5659]
                                require mem[_5659] <= test266151307()
                                require _5659 + mem[_5659] + 31 < _5659 + return_data.size
                                _5673 = mem[_5659 + mem[_5659]]
                                if mem[_5659 + mem[_5659]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5659 + mem[_5659]]) + 1 < 0 or _5659 + ceil32(return_data.size) + ceil32(32 * mem[_5659 + mem[_5659]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5659 + ceil32(return_data.size) + ceil32(32 * mem[_5659 + mem[_5659]]) + 1
                                mem[_5659 + ceil32(return_data.size)] = _5673
                                require _5666 + (32 * _5673) + 32 <= return_data.size
                                mem[_5659 + ceil32(return_data.size) + 32 len ceil32(32 * _5673)] = mem[_5659 + _5666 + 32 len ceil32(32 * _5673)]
                                if 1 >= _5673:
                                    revert with 0, 50
                                _6181 = mem[_5659 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5659 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5659 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6255 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6181) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6255]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181) / mem[_6255] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181) / mem[_6255]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181) / mem[_6255] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181) / mem[_6255] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5659 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5659 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6279 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6181 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6279]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / 10^sub_3266f45c) / mem[_6279] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / 10^sub_3266f45c) / mem[_6279]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / 10^sub_3266f45c) / mem[_6279] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / 10^sub_3266f45c) / mem[_6279] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5659 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5659 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6181 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6441]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / u * v) / mem[_6441] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / u * v) / mem[_6441]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / u * v) / mem[_6441] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2571 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6181 / u * v) / mem[_6441] * ext_call.return_data[0] / 100 * 10^18 / 10^18
            else:
                if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = 10^sub_9ddc230a
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    s = (2 * ceil32(return_data.size)) + 128
                    t = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^sub_9ddc230a, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _1343 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _1352 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^sub_9ddc230a) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _1352
                    require _1343 + (32 * _1352) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _1352)] = mem[(2 * ceil32(return_data.size)) + _1343 + 224 len ceil32(32 * _1352)]
                    if 1 >= _1352:
                        revert with 0, 50
                    _2570 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _2624 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_2624]:
                                revert with 0, 50
                            mem[_2624 + 32] = token1Address
                            if 1 >= mem[_2624]:
                                revert with 0, 50
                            mem[_2624 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_2624 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_2624 + 100] = 1
                            mem[_2624 + 132] = 64
                            mem[_2624 + 164] = mem[_2624]
                            idx = 0
                            s = _2624 + 32
                            t = _2624 + 196
                            while idx < mem[_2624]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _2624 + (32 * mem[_2624]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3783 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3799 = mem[_3783]
                            require mem[_3783] <= test266151307()
                            require _3783 + mem[_3783] + 31 < _3783 + return_data.size
                            _3811 = mem[_3783 + mem[_3783]]
                            if mem[_3783 + mem[_3783]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_3783 + mem[_3783]]) + 1 < 0 or _3783 + ceil32(return_data.size) + ceil32(32 * mem[_3783 + mem[_3783]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _3783 + ceil32(return_data.size) + ceil32(32 * mem[_3783 + mem[_3783]]) + 1
                            mem[_3783 + ceil32(return_data.size)] = _3811
                            require _3799 + (32 * _3811) + 32 <= return_data.size
                            mem[_3783 + ceil32(return_data.size) + 32 len ceil32(32 * _3811)] = mem[_3783 + _3799 + 32 len ceil32(32 * _3811)]
                            if 1 >= _3811:
                                revert with 0, 50
                            _4806 = mem[_3783 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_3783 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3783 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4986 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4806) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_4986]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806) / mem[_4986] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806) / mem[_4986]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806) / mem[_4986] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806) / mem[_4986] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3783 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3783 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5036 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4806 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5036]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / 10^sub_3266f45c) / mem[_5036] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / 10^sub_3266f45c) / mem[_5036]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / 10^sub_3266f45c) / mem[_5036] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / 10^sub_3266f45c) / mem[_5036] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3783 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3783 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5707 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4806 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5707]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / s * t) / mem[_5707] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / s * t) / mem[_5707]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / s * t) / mem[_5707] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4806 / s * t) / mem[_5707] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _2662 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2662]:
                                    revert with 0, 50
                                mem[_2662 + 32] = token1Address
                                if 1 >= mem[_2662]:
                                    revert with 0, 50
                                mem[_2662 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2662 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2662 + 100] = 10^sub_3266f45c
                                mem[_2662 + 132] = 64
                                mem[_2662 + 164] = mem[_2662]
                                idx = 0
                                s = _2662 + 32
                                t = _2662 + 196
                                while idx < mem[_2662]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2662 + (32 * mem[_2662]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3782 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3798 = mem[_3782]
                                require mem[_3782] <= test266151307()
                                require _3782 + mem[_3782] + 31 < _3782 + return_data.size
                                _3810 = mem[_3782 + mem[_3782]]
                                if mem[_3782 + mem[_3782]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3782 + mem[_3782]]) + 1 < 0 or _3782 + ceil32(return_data.size) + ceil32(32 * mem[_3782 + mem[_3782]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3782 + ceil32(return_data.size) + ceil32(32 * mem[_3782 + mem[_3782]]) + 1
                                mem[_3782 + ceil32(return_data.size)] = _3810
                                require _3798 + (32 * _3810) + 32 <= return_data.size
                                mem[_3782 + ceil32(return_data.size) + 32 len ceil32(32 * _3810)] = mem[_3782 + _3798 + 32 len ceil32(32 * _3810)]
                                if 1 >= _3810:
                                    revert with 0, 50
                                _4805 = mem[_3782 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3782 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3782 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4985 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4805) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4985]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805) / mem[_4985] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805) / mem[_4985]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805) / mem[_4985] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805) / mem[_4985] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3782 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3782 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5035 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4805 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5035]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / 10^sub_3266f45c) / mem[_5035] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / 10^sub_3266f45c) / mem[_5035]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / 10^sub_3266f45c) / mem[_5035] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / 10^sub_3266f45c) / mem[_5035] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3782 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3782 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5706 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _4805 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5706]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / s * t) / mem[_5706] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / s * t) / mem[_5706]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / s * t) / mem[_5706] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4805 / s * t) / mem[_5706] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _3780 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3780]:
                                    revert with 0, 50
                                mem[_3780 + 32] = token1Address
                                if 1 >= mem[_3780]:
                                    revert with 0, 50
                                mem[_3780 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3780 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3780 + 100] = s * t
                                mem[_3780 + 132] = 64
                                mem[_3780 + 164] = mem[_3780]
                                idx = 0
                                s = _3780 + 32
                                t = _3780 + 196
                                while idx < mem[_3780]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3780 + (32 * mem[_3780]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4844 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4862 = mem[_4844]
                                require mem[_4844] <= test266151307()
                                require _4844 + mem[_4844] + 31 < _4844 + return_data.size
                                _4878 = mem[_4844 + mem[_4844]]
                                if mem[_4844 + mem[_4844]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4844 + mem[_4844]]) + 1 < 0 or _4844 + ceil32(return_data.size) + ceil32(32 * mem[_4844 + mem[_4844]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4844 + ceil32(return_data.size) + ceil32(32 * mem[_4844 + mem[_4844]]) + 1
                                mem[_4844 + ceil32(return_data.size)] = _4878
                                require _4862 + (32 * _4878) + 32 <= return_data.size
                                mem[_4844 + ceil32(return_data.size) + 32 len ceil32(32 * _4878)] = mem[_4844 + _4862 + 32 len ceil32(32 * _4878)]
                                if 1 >= _4878:
                                    revert with 0, 50
                                _5639 = mem[_4844 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4844 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4844 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5766 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _5639) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5766]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639) / mem[_5766] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639) / mem[_5766]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639) / mem[_5766] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639) / mem[_5766] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4844 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4844 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5816 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _5639 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5816]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / 10^sub_3266f45c) / mem[_5816] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / 10^sub_3266f45c) / mem[_5816]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / 10^sub_3266f45c) / mem[_5816] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / 10^sub_3266f45c) / mem[_5816] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4844 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4844 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6219 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570) + (Mask(112, 0, ext_call.return_data[32]) * _5639 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6219]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / s * t) / mem[_6219] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / s * t) / mem[_6219]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / s * t) / mem[_6219] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5639 / s * t) / mem[_6219] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _2660 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_2660]:
                                    revert with 0, 50
                                mem[_2660 + 32] = token1Address
                                if 1 >= mem[_2660]:
                                    revert with 0, 50
                                mem[_2660 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_2660 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_2660 + 100] = 1
                                mem[_2660 + 132] = 64
                                mem[_2660 + 164] = mem[_2660]
                                idx = 0
                                s = _2660 + 32
                                t = _2660 + 196
                                while idx < mem[_2660]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _2660 + (32 * mem[_2660]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3779 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3797 = mem[_3779]
                                require mem[_3779] <= test266151307()
                                require _3779 + mem[_3779] + 31 < _3779 + return_data.size
                                _3809 = mem[_3779 + mem[_3779]]
                                if mem[_3779 + mem[_3779]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_3779 + mem[_3779]]) + 1 < 0 or _3779 + ceil32(return_data.size) + ceil32(32 * mem[_3779 + mem[_3779]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _3779 + ceil32(return_data.size) + ceil32(32 * mem[_3779 + mem[_3779]]) + 1
                                mem[_3779 + ceil32(return_data.size)] = _3809
                                require _3797 + (32 * _3809) + 32 <= return_data.size
                                mem[_3779 + ceil32(return_data.size) + 32 len ceil32(32 * _3809)] = mem[_3779 + _3797 + 32 len ceil32(32 * _3809)]
                                if 1 >= _3809:
                                    revert with 0, 50
                                _4804 = mem[_3779 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_3779 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3779 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4984 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4804) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_4984]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804) / mem[_4984] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804) / mem[_4984]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804) / mem[_4984] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804) / mem[_4984] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3779 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3779 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4804 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5034]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / 10^sub_3266f45c) / mem[_5034] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / 10^sub_3266f45c) / mem[_5034]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / 10^sub_3266f45c) / mem[_5034] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / 10^sub_3266f45c) / mem[_5034] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3779 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3779 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5705 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4804 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5705]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / s * t) / mem[_5705] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / s * t) / mem[_5705]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / s * t) / mem[_5705] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4804 / s * t) / mem[_5705] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _2719 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_2719]:
                                        revert with 0, 50
                                    mem[_2719 + 32] = token1Address
                                    if 1 >= mem[_2719]:
                                        revert with 0, 50
                                    mem[_2719 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_2719 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_2719 + 100] = 10^sub_3266f45c
                                    mem[_2719 + 132] = 64
                                    mem[_2719 + 164] = mem[_2719]
                                    idx = 0
                                    s = _2719 + 32
                                    t = _2719 + 196
                                    while idx < mem[_2719]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _2719 + (32 * mem[_2719]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3778 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3796 = mem[_3778]
                                    require mem[_3778] <= test266151307()
                                    require _3778 + mem[_3778] + 31 < _3778 + return_data.size
                                    _3808 = mem[_3778 + mem[_3778]]
                                    if mem[_3778 + mem[_3778]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_3778 + mem[_3778]]) + 1 < 0 or _3778 + ceil32(return_data.size) + ceil32(32 * mem[_3778 + mem[_3778]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _3778 + ceil32(return_data.size) + ceil32(32 * mem[_3778 + mem[_3778]]) + 1
                                    mem[_3778 + ceil32(return_data.size)] = _3808
                                    require _3796 + (32 * _3808) + 32 <= return_data.size
                                    mem[_3778 + ceil32(return_data.size) + 32 len ceil32(32 * _3808)] = mem[_3778 + _3796 + 32 len ceil32(32 * _3808)]
                                    if 1 >= _3808:
                                        revert with 0, 50
                                    _4803 = mem[_3778 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_3778 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3778 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _4983 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4803) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_4983]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803) / mem[_4983] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803) / mem[_4983]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803) / mem[_4983] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803) / mem[_4983] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3778 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3778 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5033 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4803 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5033]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / 10^sub_3266f45c) / mem[_5033] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / 10^sub_3266f45c) / mem[_5033]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / 10^sub_3266f45c) / mem[_5033] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / 10^sub_3266f45c) / mem[_5033] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_3778 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_3778 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5704 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _4803 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5704]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / s * t) / mem[_5704] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / s * t) / mem[_5704]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / s * t) / mem[_5704] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _4803 / s * t) / mem[_5704] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _3776 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3776]:
                                        revert with 0, 50
                                    mem[_3776 + 32] = token1Address
                                    if 1 >= mem[_3776]:
                                        revert with 0, 50
                                    mem[_3776 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3776 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3776 + 100] = s * t
                                    mem[_3776 + 132] = 64
                                    mem[_3776 + 164] = mem[_3776]
                                    idx = 0
                                    s = _3776 + 32
                                    t = _3776 + 196
                                    while idx < mem[_3776]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3776 + (32 * mem[_3776]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4843 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4861 = mem[_4843]
                                    require mem[_4843] <= test266151307()
                                    require _4843 + mem[_4843] + 31 < _4843 + return_data.size
                                    _4877 = mem[_4843 + mem[_4843]]
                                    if mem[_4843 + mem[_4843]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4843 + mem[_4843]]) + 1 < 0 or _4843 + ceil32(return_data.size) + ceil32(32 * mem[_4843 + mem[_4843]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4843 + ceil32(return_data.size) + ceil32(32 * mem[_4843 + mem[_4843]]) + 1
                                    mem[_4843 + ceil32(return_data.size)] = _4877
                                    require _4861 + (32 * _4877) + 32 <= return_data.size
                                    mem[_4843 + ceil32(return_data.size) + 32 len ceil32(32 * _4877)] = mem[_4843 + _4861 + 32 len ceil32(32 * _4877)]
                                    if 1 >= _4877:
                                        revert with 0, 50
                                    _5638 = mem[_4843 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4843 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4843 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5765 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5638) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5765]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638) / mem[_5765] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638) / mem[_5765]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638) / mem[_5765] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638) / mem[_5765] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4843 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4843 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5815 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5638 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5815]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / 10^sub_3266f45c) / mem[_5815] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / 10^sub_3266f45c) / mem[_5815]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / 10^sub_3266f45c) / mem[_5815] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / 10^sub_3266f45c) / mem[_5815] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4843 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4843 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6218 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5638 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6218]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / s * t) / mem[_6218] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / s * t) / mem[_6218]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / s * t) / mem[_6218] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5638 / s * t) / mem[_6218] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3866 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3866]:
                                    revert with 0, 50
                                mem[_3866 + 32] = token1Address
                                if 1 >= mem[_3866]:
                                    revert with 0, 50
                                mem[_3866 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3866 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3866 + 100] = 1
                                mem[_3866 + 132] = 64
                                mem[_3866 + 164] = mem[_3866]
                                idx = 0
                                u = _3866 + 32
                                v = _3866 + 196
                                while idx < mem[_3866]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3866 + (32 * mem[_3866]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4842 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4860 = mem[_4842]
                                require mem[_4842] <= test266151307()
                                require _4842 + mem[_4842] + 31 < _4842 + return_data.size
                                _4876 = mem[_4842 + mem[_4842]]
                                if mem[_4842 + mem[_4842]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4842 + mem[_4842]]) + 1 < 0 or _4842 + ceil32(return_data.size) + ceil32(32 * mem[_4842 + mem[_4842]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4842 + ceil32(return_data.size) + ceil32(32 * mem[_4842 + mem[_4842]]) + 1
                                mem[_4842 + ceil32(return_data.size)] = _4876
                                require _4860 + (32 * _4876) + 32 <= return_data.size
                                mem[_4842 + ceil32(return_data.size) + 32 len ceil32(32 * _4876)] = mem[_4842 + _4860 + 32 len ceil32(32 * _4876)]
                                if 1 >= _4876:
                                    revert with 0, 50
                                _5637 = mem[_4842 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4842 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4842 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5764 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5637) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5764]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637) / mem[_5764] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637) / mem[_5764]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637) / mem[_5764] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637) / mem[_5764] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4842 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4842 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5814 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5637 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5814]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / 10^sub_3266f45c) / mem[_5814] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / 10^sub_3266f45c) / mem[_5814]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / 10^sub_3266f45c) / mem[_5814] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / 10^sub_3266f45c) / mem[_5814] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4842 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4842 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6217 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5637 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6217]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / u * v) / mem[_6217] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / u * v) / mem[_6217]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / u * v) / mem[_6217] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5637 / u * v) / mem[_6217] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _3923 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_3923]:
                                        revert with 0, 50
                                    mem[_3923 + 32] = token1Address
                                    if 1 >= mem[_3923]:
                                        revert with 0, 50
                                    mem[_3923 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_3923 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_3923 + 100] = 10^sub_3266f45c
                                    mem[_3923 + 132] = 64
                                    mem[_3923 + 164] = mem[_3923]
                                    idx = 0
                                    u = _3923 + 32
                                    v = _3923 + 196
                                    while idx < mem[_3923]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _3923 + (32 * mem[_3923]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4841 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4859 = mem[_4841]
                                    require mem[_4841] <= test266151307()
                                    require _4841 + mem[_4841] + 31 < _4841 + return_data.size
                                    _4875 = mem[_4841 + mem[_4841]]
                                    if mem[_4841 + mem[_4841]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4841 + mem[_4841]]) + 1 < 0 or _4841 + ceil32(return_data.size) + ceil32(32 * mem[_4841 + mem[_4841]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4841 + ceil32(return_data.size) + ceil32(32 * mem[_4841 + mem[_4841]]) + 1
                                    mem[_4841 + ceil32(return_data.size)] = _4875
                                    require _4859 + (32 * _4875) + 32 <= return_data.size
                                    mem[_4841 + ceil32(return_data.size) + 32 len ceil32(32 * _4875)] = mem[_4841 + _4859 + 32 len ceil32(32 * _4875)]
                                    if 1 >= _4875:
                                        revert with 0, 50
                                    _5636 = mem[_4841 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4841 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4841 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5763 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5636) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5763]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636) / mem[_5763] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636) / mem[_5763]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636) / mem[_5763] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636) / mem[_5763] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4841 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4841 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5813 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5636 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5813]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / 10^sub_3266f45c) / mem[_5813] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / 10^sub_3266f45c) / mem[_5813]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / 10^sub_3266f45c) / mem[_5813] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / 10^sub_3266f45c) / mem[_5813] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4841 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4841 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6216 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _5636 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6216]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / u * v) / mem[_6216] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / u * v) / mem[_6216]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / u * v) / mem[_6216] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5636 / u * v) / mem[_6216] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _4839 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4839]:
                                        revert with 0, 50
                                    mem[_4839 + 32] = token1Address
                                    if 1 >= mem[_4839]:
                                        revert with 0, 50
                                    mem[_4839 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4839 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4839 + 100] = u * v
                                    mem[_4839 + 132] = 64
                                    mem[_4839 + 164] = mem[_4839]
                                    idx = 0
                                    u = _4839 + 32
                                    v = _4839 + 196
                                    while idx < mem[_4839]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4839 + (32 * mem[_4839]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5658 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5665 = mem[_5658]
                                    require mem[_5658] <= test266151307()
                                    require _5658 + mem[_5658] + 31 < _5658 + return_data.size
                                    _5672 = mem[_5658 + mem[_5658]]
                                    if mem[_5658 + mem[_5658]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5658 + mem[_5658]]) + 1 < 0 or _5658 + ceil32(return_data.size) + ceil32(32 * mem[_5658 + mem[_5658]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5658 + ceil32(return_data.size) + ceil32(32 * mem[_5658 + mem[_5658]]) + 1
                                    mem[_5658 + ceil32(return_data.size)] = _5672
                                    require _5665 + (32 * _5672) + 32 <= return_data.size
                                    mem[_5658 + ceil32(return_data.size) + 32 len ceil32(32 * _5672)] = mem[_5658 + _5665 + 32 len ceil32(32 * _5672)]
                                    if 1 >= _5672:
                                        revert with 0, 50
                                    _6180 = mem[_5658 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5658 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5658 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6254 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6180) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6254]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180) / mem[_6254] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180) / mem[_6254]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180) / mem[_6254] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180) / mem[_6254] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5658 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5658 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6278 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6180 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6278]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / 10^sub_3266f45c) / mem[_6278] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / 10^sub_3266f45c) / mem[_6278]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / 10^sub_3266f45c) / mem[_6278] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / 10^sub_3266f45c) / mem[_6278] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5658 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5658 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6440 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6180 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6440]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / u * v) / mem[_6440] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / u * v) / mem[_6440]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / u * v) / mem[_6440] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _2570 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6180 / u * v) / mem[_6440] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                else:
                    s = 10
                    t = 1
                    idx = sub_9ddc230a
                    while idx > 1:
                        if s > -1 / s:
                            revert with 0, 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 0, 17
                    mem[(2 * ceil32(return_data.size)) + 96] = 2
                    mem[(2 * ceil32(return_data.size)) + 128] = token0Address
                    mem[(2 * ceil32(return_data.size)) + 160] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                    mem[(2 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[(2 * ceil32(return_data.size)) + 196] = s * t
                    mem[(2 * ceil32(return_data.size)) + 228] = 64
                    mem[(2 * ceil32(return_data.size)) + 260] = 2
                    idx = 0
                    u = (2 * ceil32(return_data.size)) + 128
                    v = (2 * ceil32(return_data.size)) + 292
                    while idx < 2:
                        mem[v] = mem[u + 12 len 20]
                        idx = idx + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args s * t, Array(len=2, data=mem[(2 * ceil32(return_data.size)) + 292 len 64])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[(2 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = (4 * ceil32(return_data.size)) + 192
                    require return_data.size >= 32
                    _2582 = mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32
                    require mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 <= test266151307()
                    require (2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 223 < (2 * ceil32(return_data.size)) + return_data.size + 192
                    _2585 = mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]
                    if mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 1 < 0 or (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193 > test266151307():
                        revert with 0, 65
                    mem[64] = (4 * ceil32(return_data.size)) + ceil32(32 * mem[(2 * ceil32(return_data.size)) + mem[(2 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, s * t) >> 32 + 192]) + 193
                    mem[(4 * ceil32(return_data.size)) + 192] = _2585
                    require _2582 + (32 * _2585) + 32 <= return_data.size
                    mem[(4 * ceil32(return_data.size)) + 224 len ceil32(32 * _2585)] = mem[(2 * ceil32(return_data.size)) + _2582 + 224 len ceil32(32 * _2585)]
                    if 1 >= _2585:
                        revert with 0, 50
                    _3757 = mem[(4 * ceil32(return_data.size)) + 256]
                    if not sub_9ddc230a:
                        if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 17
                        if not sub_3266f45c:
                            _3912 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            if 0 >= mem[_3912]:
                                revert with 0, 50
                            mem[_3912 + 32] = token1Address
                            if 1 >= mem[_3912]:
                                revert with 0, 50
                            mem[_3912 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                            mem[_3912 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                            mem[_3912 + 100] = 1
                            mem[_3912 + 132] = 64
                            mem[_3912 + 164] = mem[_3912]
                            idx = 0
                            s = _3912 + 32
                            t = _3912 + 196
                            while idx < mem[_3912]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                            staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len _3912 + (32 * mem[_3912]) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4838 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _4858 = mem[_4838]
                            require mem[_4838] <= test266151307()
                            require _4838 + mem[_4838] + 31 < _4838 + return_data.size
                            _4874 = mem[_4838 + mem[_4838]]
                            if mem[_4838 + mem[_4838]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_4838 + mem[_4838]]) + 1 < 0 or _4838 + ceil32(return_data.size) + ceil32(32 * mem[_4838 + mem[_4838]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _4838 + ceil32(return_data.size) + ceil32(32 * mem[_4838 + mem[_4838]]) + 1
                            mem[_4838 + ceil32(return_data.size)] = _4874
                            require _4858 + (32 * _4874) + 32 <= return_data.size
                            mem[_4838 + ceil32(return_data.size) + 32 len ceil32(32 * _4874)] = mem[_4838 + _4858 + 32 len ceil32(32 * _4874)]
                            if 1 >= _4874:
                                revert with 0, 50
                            _5635 = mem[_4838 + ceil32(return_data.size) + 64]
                            if not sub_3266f45c:
                                if Mask(112, 0, ext_call.return_data[32]) and mem[_4838 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 0, 17
                                if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4838 + ceil32(return_data.size) + 64]):
                                    revert with 0, 17
                                require ext_code.size(lpTokenAddress)
                                staticcall lpTokenAddress.0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5762 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5635) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                    revert with 0, 17
                                if not mem[_5762]:
                                    revert with 0, 18
                                if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635) / mem[_5762] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635) / mem[_5762]:
                                    revert with 0, 17
                                if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635) / mem[_5762] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                    revert with 0, 17
                                mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635) / mem[_5762] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4838 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not 10^sub_3266f45c:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4838 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5635 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5812]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / 10^sub_3266f45c) / mem[_5812] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / 10^sub_3266f45c) / mem[_5812]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / 10^sub_3266f45c) / mem[_5812] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / 10^sub_3266f45c) / mem[_5812] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4838 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if not s * t:
                                        revert with 0, 18
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4838 + ceil32(return_data.size) + 64] / s * t):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6215 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5635 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6215]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / s * t) / mem[_6215] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / s * t) / mem[_6215]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / s * t) / mem[_6215] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5635 / s * t) / mem[_6215] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                _3960 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3960]:
                                    revert with 0, 50
                                mem[_3960 + 32] = token1Address
                                if 1 >= mem[_3960]:
                                    revert with 0, 50
                                mem[_3960 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3960 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3960 + 100] = 10^sub_3266f45c
                                mem[_3960 + 132] = 64
                                mem[_3960 + 164] = mem[_3960]
                                idx = 0
                                s = _3960 + 32
                                t = _3960 + 196
                                while idx < mem[_3960]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3960 + (32 * mem[_3960]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4837 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4857 = mem[_4837]
                                require mem[_4837] <= test266151307()
                                require _4837 + mem[_4837] + 31 < _4837 + return_data.size
                                _4873 = mem[_4837 + mem[_4837]]
                                if mem[_4837 + mem[_4837]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4837 + mem[_4837]]) + 1 < 0 or _4837 + ceil32(return_data.size) + ceil32(32 * mem[_4837 + mem[_4837]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4837 + ceil32(return_data.size) + ceil32(32 * mem[_4837 + mem[_4837]]) + 1
                                mem[_4837 + ceil32(return_data.size)] = _4873
                                require _4857 + (32 * _4873) + 32 <= return_data.size
                                mem[_4837 + ceil32(return_data.size) + 32 len ceil32(32 * _4873)] = mem[_4837 + _4857 + 32 len ceil32(32 * _4873)]
                                if 1 >= _4873:
                                    revert with 0, 50
                                _5634 = mem[_4837 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4837 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4837 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5761 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5634) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5761]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634) / mem[_5761] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634) / mem[_5761]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634) / mem[_5761] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634) / mem[_5761] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4837 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4837 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5811 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5634 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5811]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / 10^sub_3266f45c) / mem[_5811] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / 10^sub_3266f45c) / mem[_5811]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / 10^sub_3266f45c) / mem[_5811] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / 10^sub_3266f45c) / mem[_5811] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4837 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4837 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6214 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _5634 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6214]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / s * t) / mem[_6214] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / s * t) / mem[_6214]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / s * t) / mem[_6214] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5634 / s * t) / mem[_6214] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                s = 10
                                t = 1
                                idx = sub_3266f45c
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 0, 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = s * t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 0, 17
                                _4835 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4835]:
                                    revert with 0, 50
                                mem[_4835 + 32] = token1Address
                                if 1 >= mem[_4835]:
                                    revert with 0, 50
                                mem[_4835 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4835 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4835 + 100] = s * t
                                mem[_4835 + 132] = 64
                                mem[_4835 + 164] = mem[_4835]
                                idx = 0
                                s = _4835 + 32
                                t = _4835 + 196
                                while idx < mem[_4835]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4835 + (32 * mem[_4835]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5657 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5664 = mem[_5657]
                                require mem[_5657] <= test266151307()
                                require _5657 + mem[_5657] + 31 < _5657 + return_data.size
                                _5671 = mem[_5657 + mem[_5657]]
                                if mem[_5657 + mem[_5657]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5657 + mem[_5657]]) + 1 < 0 or _5657 + ceil32(return_data.size) + ceil32(32 * mem[_5657 + mem[_5657]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5657 + ceil32(return_data.size) + ceil32(32 * mem[_5657 + mem[_5657]]) + 1
                                mem[_5657 + ceil32(return_data.size)] = _5671
                                require _5664 + (32 * _5671) + 32 <= return_data.size
                                mem[_5657 + ceil32(return_data.size) + 32 len ceil32(32 * _5671)] = mem[_5657 + _5664 + 32 len ceil32(32 * _5671)]
                                if 1 >= _5671:
                                    revert with 0, 50
                                _6179 = mem[_5657 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5657 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5657 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6253 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _6179) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6253]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179) / mem[_6253] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179) / mem[_6253]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179) / mem[_6253] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179) / mem[_6253] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5657 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5657 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6277 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _6179 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6277]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / 10^sub_3266f45c) / mem[_6277] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / 10^sub_3266f45c) / mem[_6277]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / 10^sub_3266f45c) / mem[_6277] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / 10^sub_3266f45c) / mem[_6277] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5657 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5657 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6439 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757) + (Mask(112, 0, ext_call.return_data[32]) * _6179 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6439]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / s * t) / mem[_6439] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / s * t) / mem[_6439]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / s * t) / mem[_6439] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6179 / s * t) / mem[_6439] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                    else:
                        if bool(bool(sub_9ddc230a < 78)) or bool(bool(sub_9ddc230a < 32)):
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not 10^sub_9ddc230a:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _3958 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_3958]:
                                    revert with 0, 50
                                mem[_3958 + 32] = token1Address
                                if 1 >= mem[_3958]:
                                    revert with 0, 50
                                mem[_3958 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_3958 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_3958 + 100] = 1
                                mem[_3958 + 132] = 64
                                mem[_3958 + 164] = mem[_3958]
                                idx = 0
                                s = _3958 + 32
                                t = _3958 + 196
                                while idx < mem[_3958]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _3958 + (32 * mem[_3958]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4834 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _4856 = mem[_4834]
                                require mem[_4834] <= test266151307()
                                require _4834 + mem[_4834] + 31 < _4834 + return_data.size
                                _4872 = mem[_4834 + mem[_4834]]
                                if mem[_4834 + mem[_4834]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_4834 + mem[_4834]]) + 1 < 0 or _4834 + ceil32(return_data.size) + ceil32(32 * mem[_4834 + mem[_4834]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _4834 + ceil32(return_data.size) + ceil32(32 * mem[_4834 + mem[_4834]]) + 1
                                mem[_4834 + ceil32(return_data.size)] = _4872
                                require _4856 + (32 * _4872) + 32 <= return_data.size
                                mem[_4834 + ceil32(return_data.size) + 32 len ceil32(32 * _4872)] = mem[_4834 + _4856 + 32 len ceil32(32 * _4872)]
                                if 1 >= _4872:
                                    revert with 0, 50
                                _5633 = mem[_4834 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_4834 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4834 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5760 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5633) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_5760]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633) / mem[_5760] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633) / mem[_5760]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633) / mem[_5760] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633) / mem[_5760] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4834 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4834 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5810 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5633 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5810]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / 10^sub_3266f45c) / mem[_5810] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / 10^sub_3266f45c) / mem[_5810]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / 10^sub_3266f45c) / mem[_5810] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / 10^sub_3266f45c) / mem[_5810] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        s = 10
                                        t = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if s > -1 / s:
                                                revert with 0, 17
                                            if not bool(idx):
                                                s = s * s
                                                t = t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            s = s * s
                                            t = s * t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if t > -1 / s:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4834 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not s * t:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4834 + ceil32(return_data.size) + 64] / s * t):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6213 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5633 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6213]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / s * t) / mem[_6213] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / s * t) / mem[_6213]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / s * t) / mem[_6213] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5633 / s * t) / mem[_6213] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _4015 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4015]:
                                        revert with 0, 50
                                    mem[_4015 + 32] = token1Address
                                    if 1 >= mem[_4015]:
                                        revert with 0, 50
                                    mem[_4015 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4015 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4015 + 100] = 10^sub_3266f45c
                                    mem[_4015 + 132] = 64
                                    mem[_4015 + 164] = mem[_4015]
                                    idx = 0
                                    s = _4015 + 32
                                    t = _4015 + 196
                                    while idx < mem[_4015]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4015 + (32 * mem[_4015]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4833 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _4855 = mem[_4833]
                                    require mem[_4833] <= test266151307()
                                    require _4833 + mem[_4833] + 31 < _4833 + return_data.size
                                    _4871 = mem[_4833 + mem[_4833]]
                                    if mem[_4833 + mem[_4833]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_4833 + mem[_4833]]) + 1 < 0 or _4833 + ceil32(return_data.size) + ceil32(32 * mem[_4833 + mem[_4833]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _4833 + ceil32(return_data.size) + ceil32(32 * mem[_4833 + mem[_4833]]) + 1
                                    mem[_4833 + ceil32(return_data.size)] = _4871
                                    require _4855 + (32 * _4871) + 32 <= return_data.size
                                    mem[_4833 + ceil32(return_data.size) + 32 len ceil32(32 * _4871)] = mem[_4833 + _4855 + 32 len ceil32(32 * _4871)]
                                    if 1 >= _4871:
                                        revert with 0, 50
                                    _5632 = mem[_4833 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_4833 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4833 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5759 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5632) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_5759]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632) / mem[_5759] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632) / mem[_5759]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632) / mem[_5759] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632) / mem[_5759] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4833 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4833 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5809 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5632 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_5809]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / 10^sub_3266f45c) / mem[_5809] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / 10^sub_3266f45c) / mem[_5809]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / 10^sub_3266f45c) / mem[_5809] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / 10^sub_3266f45c) / mem[_5809] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_4833 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_4833 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6212 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _5632 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6212]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / s * t) / mem[_6212] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / s * t) / mem[_6212]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / s * t) / mem[_6212] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _5632 / s * t) / mem[_6212] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    s = 10
                                    t = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 0, 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = s * t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 0, 17
                                    _4831 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4831]:
                                        revert with 0, 50
                                    mem[_4831 + 32] = token1Address
                                    if 1 >= mem[_4831]:
                                        revert with 0, 50
                                    mem[_4831 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4831 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4831 + 100] = s * t
                                    mem[_4831 + 132] = 64
                                    mem[_4831 + 164] = mem[_4831]
                                    idx = 0
                                    s = _4831 + 32
                                    t = _4831 + 196
                                    while idx < mem[_4831]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4831 + (32 * mem[_4831]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5656 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5663 = mem[_5656]
                                    require mem[_5656] <= test266151307()
                                    require _5656 + mem[_5656] + 31 < _5656 + return_data.size
                                    _5670 = mem[_5656 + mem[_5656]]
                                    if mem[_5656 + mem[_5656]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5656 + mem[_5656]]) + 1 < 0 or _5656 + ceil32(return_data.size) + ceil32(32 * mem[_5656 + mem[_5656]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5656 + ceil32(return_data.size) + ceil32(32 * mem[_5656 + mem[_5656]]) + 1
                                    mem[_5656 + ceil32(return_data.size)] = _5670
                                    require _5663 + (32 * _5670) + 32 <= return_data.size
                                    mem[_5656 + ceil32(return_data.size) + 32 len ceil32(32 * _5670)] = mem[_5656 + _5663 + 32 len ceil32(32 * _5670)]
                                    if 1 >= _5670:
                                        revert with 0, 50
                                    _6178 = mem[_5656 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5656 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5656 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6252 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _6178) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6252]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178) / mem[_6252] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178) / mem[_6252]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178) / mem[_6252] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178) / mem[_6252] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5656 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5656 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6276 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _6178 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6276]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / 10^sub_3266f45c) / mem[_6276] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / 10^sub_3266f45c) / mem[_6276]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / 10^sub_3266f45c) / mem[_6276] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / 10^sub_3266f45c) / mem[_6276] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            s = 10
                                            t = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if s > -1 / s:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    s = s * s
                                                    t = t
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                s = s * s
                                                t = s * t
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if t > -1 / s:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5656 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not s * t:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5656 + ceil32(return_data.size) + 64] / s * t):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6438 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (Mask(112, 0, ext_call.return_data[32]) * _6178 / s * t) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6438]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / s * t) / mem[_6438] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / s * t) / mem[_6438]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / s * t) / mem[_6438] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / 10^sub_9ddc230a) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6178 / s * t) / mem[_6438] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                        else:
                            s = 10
                            t = 1
                            idx = sub_9ddc230a
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 0, 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = s * t
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 0, 17
                            if Mask(112, 0, ext_call.return_data[0]) and mem[(4 * ceil32(return_data.size)) + 256] > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 0, 17
                            if not s * t:
                                revert with 0, 18
                            if not sub_3266f45c:
                                _4929 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                if 0 >= mem[_4929]:
                                    revert with 0, 50
                                mem[_4929 + 32] = token1Address
                                if 1 >= mem[_4929]:
                                    revert with 0, 50
                                mem[_4929 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                mem[_4929 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[_4929 + 100] = 1
                                mem[_4929 + 132] = 64
                                mem[_4929 + 164] = mem[_4929]
                                idx = 0
                                u = _4929 + 32
                                v = _4929 + 196
                                while idx < mem[_4929]:
                                    mem[v] = mem[u + 12 len 20]
                                    idx = idx + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _4929 + (32 * mem[_4929]) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5655 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5662 = mem[_5655]
                                require mem[_5655] <= test266151307()
                                require _5655 + mem[_5655] + 31 < _5655 + return_data.size
                                _5669 = mem[_5655 + mem[_5655]]
                                if mem[_5655 + mem[_5655]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_5655 + mem[_5655]]) + 1 < 0 or _5655 + ceil32(return_data.size) + ceil32(32 * mem[_5655 + mem[_5655]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _5655 + ceil32(return_data.size) + ceil32(32 * mem[_5655 + mem[_5655]]) + 1
                                mem[_5655 + ceil32(return_data.size)] = _5669
                                require _5662 + (32 * _5669) + 32 <= return_data.size
                                mem[_5655 + ceil32(return_data.size) + 32 len ceil32(32 * _5669)] = mem[_5655 + _5662 + 32 len ceil32(32 * _5669)]
                                if 1 >= _5669:
                                    revert with 0, 50
                                _6177 = mem[_5655 + ceil32(return_data.size) + 64]
                                if not sub_3266f45c:
                                    if Mask(112, 0, ext_call.return_data[32]) and mem[_5655 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 0, 17
                                    if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5655 + ceil32(return_data.size) + 64]):
                                        revert with 0, 17
                                    require ext_code.size(lpTokenAddress)
                                    staticcall lpTokenAddress.0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6251 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6177) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                        revert with 0, 17
                                    if not mem[_6251]:
                                        revert with 0, 18
                                    if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177) / mem[_6251] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177) / mem[_6251]:
                                        revert with 0, 17
                                    if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177) / mem[_6251] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                        revert with 0, 17
                                    mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177) / mem[_6251] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5655 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not 10^sub_3266f45c:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5655 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6275 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6177 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6275]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / 10^sub_3266f45c) / mem[_6275] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / 10^sub_3266f45c) / mem[_6275]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / 10^sub_3266f45c) / mem[_6275] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / 10^sub_3266f45c) / mem[_6275] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        u = 10
                                        v = 1
                                        idx = sub_3266f45c
                                        while idx > 1:
                                            if u > -1 / u:
                                                revert with 0, 17
                                            if not bool(idx):
                                                u = u * u
                                                v = v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            u = u * u
                                            v = u * v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        if v > -1 / u:
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5655 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if not u * v:
                                            revert with 0, 18
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5655 + ceil32(return_data.size) + 64] / u * v):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6437 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6177 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6437]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / u * v) / mem[_6437] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / u * v) / mem[_6437]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / u * v) / mem[_6437] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6177 / u * v) / mem[_6437] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                            else:
                                if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                    _4997 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_4997]:
                                        revert with 0, 50
                                    mem[_4997 + 32] = token1Address
                                    if 1 >= mem[_4997]:
                                        revert with 0, 50
                                    mem[_4997 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_4997 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_4997 + 100] = 10^sub_3266f45c
                                    mem[_4997 + 132] = 64
                                    mem[_4997 + 164] = mem[_4997]
                                    idx = 0
                                    u = _4997 + 32
                                    v = _4997 + 196
                                    while idx < mem[_4997]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _4997 + (32 * mem[_4997]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5654 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5661 = mem[_5654]
                                    require mem[_5654] <= test266151307()
                                    require _5654 + mem[_5654] + 31 < _5654 + return_data.size
                                    _5668 = mem[_5654 + mem[_5654]]
                                    if mem[_5654 + mem[_5654]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_5654 + mem[_5654]]) + 1 < 0 or _5654 + ceil32(return_data.size) + ceil32(32 * mem[_5654 + mem[_5654]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _5654 + ceil32(return_data.size) + ceil32(32 * mem[_5654 + mem[_5654]]) + 1
                                    mem[_5654 + ceil32(return_data.size)] = _5668
                                    require _5661 + (32 * _5668) + 32 <= return_data.size
                                    mem[_5654 + ceil32(return_data.size) + 32 len ceil32(32 * _5668)] = mem[_5654 + _5661 + 32 len ceil32(32 * _5668)]
                                    if 1 >= _5668:
                                        revert with 0, 50
                                    _6176 = mem[_5654 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6250 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6176) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6250]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176) / mem[_6250] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176) / mem[_6250]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176) / mem[_6250] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176) / mem[_6250] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6274 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6176 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6274]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / 10^sub_3266f45c) / mem[_6274] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / 10^sub_3266f45c) / mem[_6274]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / 10^sub_3266f45c) / mem[_6274] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / 10^sub_3266f45c) / mem[_6274] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_5654 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_5654 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6436 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6176 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6436]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / u * v) / mem[_6436] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / u * v) / mem[_6436]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / u * v) / mem[_6436] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6176 / u * v) / mem[_6436] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                else:
                                    u = 10
                                    v = 1
                                    idx = sub_3266f45c
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 0, 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = u * v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 0, 17
                                    _5652 = mem[64]
                                    mem[mem[64]] = 2
                                    mem[64] = mem[64] + 96
                                    if 0 >= mem[_5652]:
                                        revert with 0, 50
                                    mem[_5652 + 32] = token1Address
                                    if 1 >= mem[_5652]:
                                        revert with 0, 50
                                    mem[_5652 + 64] = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66
                                    mem[_5652 + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[_5652 + 100] = u * v
                                    mem[_5652 + 132] = 64
                                    mem[_5652 + 164] = mem[_5652]
                                    idx = 0
                                    u = _5652 + 32
                                    v = _5652 + 196
                                    while idx < mem[_5652]:
                                        mem[v] = mem[u + 12 len 20]
                                        idx = idx + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933)
                                    staticcall 0x60ae616a2155ee3d9a68541ba4544862310933.mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _5652 + (32 * mem[_5652]) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6183 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _6184 = mem[_6183]
                                    require mem[_6183] <= test266151307()
                                    require _6183 + mem[_6183] + 31 < _6183 + return_data.size
                                    _6185 = mem[_6183 + mem[_6183]]
                                    if mem[_6183 + mem[_6183]] > test266151307():
                                        revert with 0, 65
                                    if ceil32(32 * mem[_6183 + mem[_6183]]) + 1 < 0 or _6183 + ceil32(return_data.size) + ceil32(32 * mem[_6183 + mem[_6183]]) + 1 > test266151307():
                                        revert with 0, 65
                                    mem[64] = _6183 + ceil32(return_data.size) + ceil32(32 * mem[_6183 + mem[_6183]]) + 1
                                    mem[_6183 + ceil32(return_data.size)] = _6185
                                    require _6184 + (32 * _6185) + 32 <= return_data.size
                                    mem[_6183 + ceil32(return_data.size) + 32 len ceil32(32 * _6185)] = mem[_6183 + _6184 + 32 len ceil32(32 * _6185)]
                                    if 1 >= _6185:
                                        revert with 0, 50
                                    _6423 = mem[_6183 + ceil32(return_data.size) + 64]
                                    if not sub_3266f45c:
                                        if Mask(112, 0, ext_call.return_data[32]) and mem[_6183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                            revert with 0, 17
                                        if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_6183 + ceil32(return_data.size) + 64]):
                                            revert with 0, 17
                                        require ext_code.size(lpTokenAddress)
                                        staticcall lpTokenAddress.0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6450 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6423) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                            revert with 0, 17
                                        if not mem[_6450]:
                                            revert with 0, 18
                                        if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423) / mem[_6450] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423) / mem[_6450]:
                                            revert with 0, 17
                                        if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423) / mem[_6450] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                            revert with 0, 17
                                        mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423) / mem[_6450] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                    else:
                                        if bool(bool(sub_3266f45c < 78)) or bool(bool(sub_3266f45c < 32)):
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_6183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not 10^sub_3266f45c:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_6183 + ceil32(return_data.size) + 64] / 10^sub_3266f45c):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6454 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6423 / 10^sub_3266f45c) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6454]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / 10^sub_3266f45c) / mem[_6454] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / 10^sub_3266f45c) / mem[_6454]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / 10^sub_3266f45c) / mem[_6454] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / 10^sub_3266f45c) / mem[_6454] * ext_call.return_data[0] / 100 * 10^18 / 10^18
                                        else:
                                            u = 10
                                            v = 1
                                            idx = sub_3266f45c
                                            while idx > 1:
                                                if u > -1 / u:
                                                    revert with 0, 17
                                                if not bool(idx):
                                                    u = u * u
                                                    v = v
                                                    idx = uint255(idx) * 0.5
                                                    continue 
                                                u = u * u
                                                v = u * v
                                                idx = uint255(idx) * 0.5
                                                continue 
                                            if v > -1 / u:
                                                revert with 0, 17
                                            if Mask(112, 0, ext_call.return_data[32]) and mem[_6183 + ceil32(return_data.size) + 64] > -1 / Mask(112, 0, ext_call.return_data[32]):
                                                revert with 0, 17
                                            if not u * v:
                                                revert with 0, 18
                                            if Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t > !(Mask(112, 0, ext_call.return_data[32]) * mem[_6183 + ceil32(return_data.size) + 64] / u * v):
                                                revert with 0, 17
                                            require ext_code.size(lpTokenAddress)
                                            staticcall lpTokenAddress.0x18160ddd with:
                                                    gas gas_remaining wei
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6489 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            if (Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (Mask(112, 0, ext_call.return_data[32]) * _6423 / u * v) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                                revert with 0, 17
                                            if not mem[_6489]:
                                                revert with 0, 18
                                            if (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / u * v) / mem[_6489] and ext_call.return_data[0] > -1 / (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / u * v) / mem[_6489]:
                                                revert with 0, 17
                                            if userInfo[address(arg1)].field_0 and (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / u * v) / mem[_6489] * ext_call.return_data[0] / 100 * 10^18 > -1 / userInfo[address(arg1)].field_0:
                                                revert with 0, 17
                                            mem[mem[64]] = userInfo[address(arg1)].field_0 * (10^18 * Mask(112, 0, ext_call.return_data[0]) * _3757 / s * t) + (10^18 * Mask(112, 0, ext_call.return_data[32]) * _6423 / u * v) / mem[_6489] * ext_call.return_data[0] / 100 * 10^18 / 10^18
    return memory
      from mem[64]
       len 32
}



}
