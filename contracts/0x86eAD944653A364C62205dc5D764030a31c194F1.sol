contract main {




// =====================  Runtime code  =====================


#
#  - sub_293bd13c(?)
#  - sub_5325de55(?)
#
mapping of uint256 admins;
uint8 stor1;
uint8 stor1; offset 8
uint32 stor1;
address LENDING_POOLAddress; offset 16
uint256 stor1;
uint256 stor1; offset 8
address ADDRESSES_PROVIDER;
address stor3;
address stor4;
address stor5;
uint256 stor6;

function ADDRESSES_PROVIDER() {
    return ADDRESSES_PROVIDER
}

function admins(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return admins[arg1]
}

function LENDING_POOL() {
    return LENDING_POOLAddress
}

function kill() {
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    selfdestruct(msg.sender)
}

function _fallback() payable {
    revert
}

function sub_2ee23f89(?) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    stor6 = arg1
}

function setWeth(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    stor5 = arg1
}

function setUniswapRouter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    stor3 = arg1
}

function setSushiswapRouter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    stor4 = arg1
}

function addAdmin(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    admins[address(arg1)] = 1
}

function removeAdmin(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    admins[address(arg1)] = 0
}

function sub_6722997a(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    ADDRESSES_PROVIDER = address(arg1)
}

function sub_d287cbab(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    LENDING_POOLAddress = address(arg1)
}

function sub_8c597b84(?) {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    uint8(stor1.field_0) = uint8(bool(arg1))
}

function withdrawEth() {
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_0f294d08(?) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    call msg.sender with:
       value arg1 wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function addAdmins(address[] arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 'NH{q', 65
    if floor32(arg1.length) + 97 > test266151307() or floor32(arg1.length) + 97 < 96:
        revert with 'NH{q', 65
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    idx = 0
    while idx < arg1.length:
        if idx >= arg1.length:
            revert with 'NH{q', 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 0
        admins[mem[(32 * idx) + 140 len 20]] = 1
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function removeAdmins(address[] arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 'NH{q', 65
    if floor32(arg1.length) + 97 > test266151307() or floor32(arg1.length) + 97 < 96:
        revert with 'NH{q', 65
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    idx = 0
    while idx < arg1.length:
        if idx >= arg1.length:
            revert with 'NH{q', 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 0
        admins[mem[(32 * idx) + 140 len 20]] = 0
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function withdrawTokens(address[] arg1) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[0] = msg.sender
    mem[32] = 0
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    idx = 0
    while idx < arg1.length:
        require cd[((32 * idx) + arg1 + 36)] == address(cd[((32 * idx) + arg1 + 36)])
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(cd[((32 * idx) + arg1 + 36)]))
        staticcall address(cd[((32 * idx) + arg1 + 36)]).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _14 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _15 = mem[_14]
        require mem[_14] == mem[_14]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _15
        require ext_code.size(address(cd[((32 * idx) + arg1 + 36)]))
        call address(cd[((32 * idx) + arg1 + 36)]).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _15
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _18 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_18] == bool(mem[_18])
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function sub_3618eae5(?) {
    require calldata.size - 4 >= 224
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require arg5 == address(arg5)
    require arg6 == arg6
    require arg7 == arg7
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    Mask(248, 0, stor1.field_8) = 1
    require ext_code.size(LENDING_POOLAddress)
    staticcall LENDING_POOLAddress.getUserAccountData(address rg1) with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 192
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    require ext_call.return_data[96] == ext_call.return_data[96]
    require ext_call.return_data[128] == ext_call.return_data[128]
    require ext_call.return_data[160] == ext_call.return_data[160]
    if ext_call.return_data[160] >= 10^18:
        revert with 0, 'USER_HEALTHY'
    mem[ceil32(return_data.size) + 384] = address(arg3)
    mem[ceil32(return_data.size) + 416] = 1
    idx = 0
    s = ceil32(return_data.size) + 384
    t = ceil32(return_data.size) + 804
    while idx < 1:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ext_code.size(LENDING_POOLAddress)
    call LENDING_POOLAddress.flashLoan(address rg1, address[] rg2, uint256[] rg3, uint256[] rg4, address rg5, bytes rg6, uint16 rg7) with:
         gas gas_remaining wei
        args address(this.address), 224, 288, 352, address(this.address), 416, 0, 1, mem[ceil32(return_data.size) + 804], 1, arg4, 1, 0, 224, address(arg2), address(arg3), address(arg1), arg4, address(arg5), arg6, arg7
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    Mask(248, 0, stor1.field_8) = 0
}

function sub_ef486197(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    require ext_code.size(address(arg1))
    staticcall address(arg1).0xdd62ed3e with:
            gas gas_remaining wei
           args address(this.address), LENDING_POOLAddress
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0]:
        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
    mem[ceil32(return_data.size) + 196 len 96] = approve(address rg1, uint256 rg2), Mask(224, 0, stor1.field_0), uint32(stor1.field_0), -1, mem[ceil32(return_data.size) + 196 len 28]
    call address(arg1).mem[ceil32(return_data.size) + 196 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(return_data.size) + 200 len 64]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'SafeERC20: low-level call failed'
        if ext_call.return_data[0] > 0:
            require ext_call.return_data[0] >= 32
            require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
            if not 0, Mask(224, 0, stor1.field_0):
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        require ext_code.size(address(arg1))
        staticcall address(arg1).0xdd62ed3e with:
                gas gas_remaining wei
               args address(this.address), stor3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[0]:
            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
        mem[(2 * ceil32(return_data.size)) + 296 len 96] = 0, stor3, -1, mem[(2 * ceil32(return_data.size)) + 296 len 28]
        call address(arg1).mem[(2 * ceil32(return_data.size)) + 296 len 4] with:
             gas gas_remaining wei
            args mem[(2 * ceil32(return_data.size)) + 300 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if ext_call.return_data[0] > 0:
                require ext_call.return_data[0] >= 32
                require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                if not 0, Mask(224, 0, stor1.field_0):
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            require ext_code.size(address(arg1))
            staticcall address(arg1).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), stor4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0]:
                revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
            mem[(4 * ceil32(return_data.size)) + 396 len 96] = 0, stor4, -1, mem[(4 * ceil32(return_data.size)) + 396 len 28]
            call address(arg1).mem[(4 * ceil32(return_data.size)) + 396 len 4] with:
                 gas gas_remaining wei
                args mem[(4 * ceil32(return_data.size)) + 400 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if ext_call.return_data[0] > 0:
                    require ext_call.return_data[0] >= 32
                    require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                    if not 0, Mask(224, 0, stor1.field_0):
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                mem[(4 * ceil32(return_data.size)) + 428 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    require mem[(4 * ceil32(return_data.size)) + 428] == bool(mem[(4 * ceil32(return_data.size)) + 428])
                    if not mem[(4 * ceil32(return_data.size)) + 428]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        else:
            mem[(2 * ceil32(return_data.size)) + 328 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                require mem[(2 * ceil32(return_data.size)) + 328] == bool(mem[(2 * ceil32(return_data.size)) + 328])
                if not mem[(2 * ceil32(return_data.size)) + 328]:
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            require ext_code.size(address(arg1))
            staticcall address(arg1).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), stor4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0]:
                revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 96] = 0, stor4, -1, mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 28]
            call address(arg1).mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 4] with:
                 gas gas_remaining wei
                args mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 401 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if ext_call.return_data[0] > 0:
                    require ext_call.return_data[0] >= 32
                    require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                    if not 0, Mask(224, 0, stor1.field_0):
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    require mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] == bool(mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429])
                    if not mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    else:
        mem[ceil32(return_data.size) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 228] == bool(mem[ceil32(return_data.size) + 228])
            if not mem[ceil32(return_data.size) + 228]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        require ext_code.size(address(arg1))
        staticcall address(arg1).0xdd62ed3e with:
                gas gas_remaining wei
               args address(this.address), stor3
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[0]:
            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
        mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 96] = 0, stor3, -1, mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28]
        call address(arg1).mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 4] with:
             gas gas_remaining wei
            args mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 301 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if ext_call.return_data[0] > 0:
                require ext_call.return_data[0] >= 32
                require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                if not 0, Mask(224, 0, stor1.field_0):
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            require ext_code.size(address(arg1))
            staticcall address(arg1).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), stor4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0]:
                revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 96] = 0, stor4, -1, mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 28]
            call address(arg1).mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397 len 4] with:
                 gas gas_remaining wei
                args mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 401 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if ext_call.return_data[0] > 0:
                    require ext_call.return_data[0] >= 32
                    require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                    if not 0, Mask(224, 0, stor1.field_0):
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    require mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] == bool(mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429])
                    if not mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        else:
            mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 329 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                require mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] == bool(mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 329])
                if not mem[(2 * ceil32(return_data.size)) + ceil32(return_data.size) + 329]:
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            require ext_code.size(address(arg1))
            staticcall address(arg1).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), stor4
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0]:
                revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
            mem[(6 * ceil32(return_data.size)) + 398 len 96] = 0, stor4, -1, mem[(6 * ceil32(return_data.size)) + 398 len 28]
            call address(arg1).mem[(6 * ceil32(return_data.size)) + 398 len 4] with:
                 gas gas_remaining wei
                args mem[(6 * ceil32(return_data.size)) + 402 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if ext_call.return_data[0] > 0:
                    require ext_call.return_data[0] >= 32
                    require 0, Mask(224, 0, stor1.field_0) == bool(0, Mask(224, 0, stor1.field_0))
                    if not 0, Mask(224, 0, stor1.field_0):
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                mem[(6 * ceil32(return_data.size)) + 430 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    require mem[(6 * ceil32(return_data.size)) + 430] == bool(mem[(6 * ceil32(return_data.size)) + 430])
                    if not mem[(6 * ceil32(return_data.size)) + 430]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
}

function sub_8f812286(?) {
    mem[0] = msg.sender
    mem[32] = 0
    if admins[address(msg.sender)] != 1:
        revert with 0, 'no50'
    mem[96] = 0xd1946dbc00000000000000000000000000000000000000000000000000000000
    require ext_code.size(LENDING_POOLAddress)
    staticcall LENDING_POOLAddress.getReservesList() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _6 = mem[96]
    require mem[96] <= test266151307()
    require mem[96] + 127 < return_data.size + 96
    _7 = mem[mem[96] + 96]
    if mem[mem[96] + 96] > test266151307():
        revert with 'NH{q', 65
    if ceil32(return_data.size) + floor32(mem[mem[96] + 96]) + 97 > test266151307() or floor32(mem[mem[96] + 96]) + 1 < 0:
        revert with 'NH{q', 65
    mem[64] = ceil32(return_data.size) + floor32(mem[mem[96] + 96]) + 97
    mem[ceil32(return_data.size) + 96] = _7
    require _6 + (32 * _7) + 32 <= return_data.size
    idx = 0
    s = _6 + 128
    t = ceil32(return_data.size) + 128
    while idx < _7:
        require mem[s] == mem[s + 12 len 20]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    idx = 0
    while idx < _7:
        if idx >= mem[ceil32(return_data.size) + 96]:
            revert with 'NH{q', 50
        _5302 = mem[(32 * idx) + ceil32(return_data.size) + 128]
        mem[0] = msg.sender
        mem[32] = 0
        if admins[address(msg.sender)] != 1:
            revert with 0, 'no50'
        mem[mem[64] + 4] = this.address
        mem[mem[64] + 36] = LENDING_POOLAddress
        require ext_code.size(address(_5302))
        staticcall address(_5302).0xdd62ed3e with:
                gas gas_remaining wei
               args address(this.address), LENDING_POOLAddress
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5308 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_5308] == mem[_5308]
        if mem[_5308]:
            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
        _5310 = mem[64]
        mem[mem[64] + 36] = LENDING_POOLAddress
        mem[mem[64] + 68] = -1
        _5313 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_5313 + 32] = mem[_5313 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _5316 = mem[_5313]
        s = 0
        while s < _5316:
            mem[_5310 + s + 100] = mem[_5313 + s + 32]
            s = s + 32
            continue 
        if ceil32(_5316) <= _5316:
            call address(_5302).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _5310 + _5316 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] <= 0:
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7037] == mem[_7037]
                    if mem[_7037]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7051 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7071 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7071 + 32] = mem[_7071 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7091 = mem[_7071]
                    s = 0
                    while s < _7091:
                        mem[_7051 + s + 100] = mem[_7071 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7091) <= _7091:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7051 + _7091 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10539 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10539] == mem[_10539]
                                if mem[_10539]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10651 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10811 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10811 + 32] = mem[_10811 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10971 = mem[_10811]
                                s = 0
                                while s < _10971:
                                    mem[_10651 + s + 100] = mem[_10811 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10971) <= _10971:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10651 + _10971 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13403 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13403] = return_data.size
                                        mem[_13403 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13403 + 32] == bool(mem[_13403 + 32])
                                            if not mem[_13403 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10651 + _10971 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10651 + _10971 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13531 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13531] = return_data.size
                                        mem[_13531 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13531 + 32] == bool(mem[_13531 + 32])
                                            if not mem[_13531 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10653 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10653] == mem[_10653]
                                if mem[_10653]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10813 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11067 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11067 + 32] = mem[_11067 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11228 = mem[_11067]
                                s = 0
                                while s < _11228:
                                    mem[_10813 + s + 100] = mem[_11067 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11228) <= _11228:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10813 + _11228 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13405 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13405] = return_data.size
                                        mem[_13405 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13405 + 32] == bool(mem[_13405 + 32])
                                            if not mem[_13405 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10813 + _11228 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10813 + _11228 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13532 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13532] = return_data.size
                                        mem[_13532 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13532 + 32] == bool(mem[_13532 + 32])
                                            if not mem[_13532 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10211] = return_data.size
                            mem[_10211 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10540 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10540] == mem[_10540]
                                if mem[_10540]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10654 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10815 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10815 + 32] = mem[_10815 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10972 = mem[_10815]
                                s = 0
                                while s < _10972:
                                    mem[_10654 + s + 100] = mem[_10815 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10972) <= _10972:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10654 + _10972 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13407 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13407] = return_data.size
                                        mem[_13407 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13407 + 32] == bool(mem[_13407 + 32])
                                            if not mem[_13407 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10654 + _10972 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10654 + _10972 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13533 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13533] = return_data.size
                                        mem[_13533 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13533 + 32] == bool(mem[_13533 + 32])
                                            if not mem[_13533 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10211 + 32] == bool(mem[_10211 + 32])
                                if not mem[_10211 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10656 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10656] == mem[_10656]
                                if mem[_10656]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10817 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11069 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11069 + 32] = mem[_11069 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11230 = mem[_11069]
                                s = 0
                                while s < _11230:
                                    mem[_10817 + s + 100] = mem[_11069 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11230) <= _11230:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10817 + _11230 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13409 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13409] = return_data.size
                                        mem[_13409 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13409 + 32] == bool(mem[_13409 + 32])
                                            if not mem[_13409 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10817 + _11230 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10817 + _11230 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13534 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13534] = return_data.size
                                        mem[_13534 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13534 + 32] == bool(mem[_13534 + 32])
                                            if not mem[_13534 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7051 + _7091 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7051 + _7091 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10571 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10571] == mem[_10571]
                                if mem[_10571]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10699 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10877 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10877 + 32] = mem[_10877 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10987 = mem[_10877]
                                s = 0
                                while s < _10987:
                                    mem[_10699 + s + 100] = mem[_10877 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10987) <= _10987:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10699 + _10987 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13411 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13411] = return_data.size
                                        mem[_13411 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13411 + 32] == bool(mem[_13411 + 32])
                                            if not mem[_13411 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10699 + _10987 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10699 + _10987 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13535 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13535] = return_data.size
                                        mem[_13535 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13535 + 32] == bool(mem[_13535 + 32])
                                            if not mem[_13535 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10701 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10701] == mem[_10701]
                                if mem[_10701]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10879 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11101 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11101 + 32] = mem[_11101 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11300 = mem[_11101]
                                s = 0
                                while s < _11300:
                                    mem[_10879 + s + 100] = mem[_11101 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11300) <= _11300:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10879 + _11300 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13413 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13413] = return_data.size
                                        mem[_13413 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13413 + 32] == bool(mem[_13413 + 32])
                                            if not mem[_13413 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10879 + _11300 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10879 + _11300 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13536 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13536] = return_data.size
                                        mem[_13536 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13536 + 32] == bool(mem[_13536 + 32])
                                            if not mem[_13536 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10227 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10227] = return_data.size
                            mem[_10227 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10572 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10572] == mem[_10572]
                                if mem[_10572]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10702 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10881 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10881 + 32] = mem[_10881 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10988 = mem[_10881]
                                s = 0
                                while s < _10988:
                                    mem[_10702 + s + 100] = mem[_10881 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10988) <= _10988:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10702 + _10988 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13415 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13415] = return_data.size
                                        mem[_13415 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13415 + 32] == bool(mem[_13415 + 32])
                                            if not mem[_13415 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10702 + _10988 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10702 + _10988 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13537 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13537] = return_data.size
                                        mem[_13537 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13537 + 32] == bool(mem[_13537 + 32])
                                            if not mem[_13537 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10227 + 32] == bool(mem[_10227 + 32])
                                if not mem[_10227 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10704 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10704] == mem[_10704]
                                if mem[_10704]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10883 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11103 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11103 + 32] = mem[_11103 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11302 = mem[_11103]
                                s = 0
                                while s < _11302:
                                    mem[_10883 + s + 100] = mem[_11103 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11302) <= _11302:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10883 + _11302 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13417 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13417] = return_data.size
                                        mem[_13417 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13417 + 32] == bool(mem[_13417 + 32])
                                            if not mem[_13417 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10883 + _11302 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10883 + _11302 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13538 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13538] = return_data.size
                                        mem[_13538 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13538 + 32] == bool(mem[_13538 + 32])
                                            if not mem[_13538 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                else:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7053 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7053] == mem[_7053]
                    if mem[_7053]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7073 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7103 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7103 + 32] = mem[_7103 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7124 = mem[_7103]
                    s = 0
                    while s < _7124:
                        mem[_7073 + s + 100] = mem[_7103 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7124) <= _7124:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7073 + _7124 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10543 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10543] == mem[_10543]
                                if mem[_10543]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10657 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10819 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10819 + 32] = mem[_10819 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10973 = mem[_10819]
                                s = 0
                                while s < _10973:
                                    mem[_10657 + s + 100] = mem[_10819 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10973) <= _10973:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10657 + _10973 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13419 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13419] = return_data.size
                                        mem[_13419 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13419 + 32] == bool(mem[_13419 + 32])
                                            if not mem[_13419 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10657 + _10973 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10657 + _10973 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13539 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13539] = return_data.size
                                        mem[_13539 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13539 + 32] == bool(mem[_13539 + 32])
                                            if not mem[_13539 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10659 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10659] == mem[_10659]
                                if mem[_10659]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10821 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11071 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11071 + 32] = mem[_11071 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11236 = mem[_11071]
                                s = 0
                                while s < _11236:
                                    mem[_10821 + s + 100] = mem[_11071 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11236) <= _11236:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10821 + _11236 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13421 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13421] = return_data.size
                                        mem[_13421 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13421 + 32] == bool(mem[_13421 + 32])
                                            if not mem[_13421 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10821 + _11236 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10821 + _11236 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13540 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13540] = return_data.size
                                        mem[_13540 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13540 + 32] == bool(mem[_13540 + 32])
                                            if not mem[_13540 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10213 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10213] = return_data.size
                            mem[_10213 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10544 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10544] == mem[_10544]
                                if mem[_10544]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10660 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10823 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10823 + 32] = mem[_10823 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10974 = mem[_10823]
                                s = 0
                                while s < _10974:
                                    mem[_10660 + s + 100] = mem[_10823 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10974) <= _10974:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10660 + _10974 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13423 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13423] = return_data.size
                                        mem[_13423 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13423 + 32] == bool(mem[_13423 + 32])
                                            if not mem[_13423 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10660 + _10974 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10660 + _10974 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13541 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13541] = return_data.size
                                        mem[_13541 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13541 + 32] == bool(mem[_13541 + 32])
                                            if not mem[_13541 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10213 + 32] == bool(mem[_10213 + 32])
                                if not mem[_10213 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10662 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10662] == mem[_10662]
                                if mem[_10662]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10825 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11073 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11073 + 32] = mem[_11073 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11238 = mem[_11073]
                                s = 0
                                while s < _11238:
                                    mem[_10825 + s + 100] = mem[_11073 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11238) <= _11238:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10825 + _11238 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13425 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13425] = return_data.size
                                        mem[_13425 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13425 + 32] == bool(mem[_13425 + 32])
                                            if not mem[_13425 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10825 + _11238 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10825 + _11238 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13542 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13542] = return_data.size
                                        mem[_13542 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13542 + 32] == bool(mem[_13542 + 32])
                                            if not mem[_13542 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7073 + _7124 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7073 + _7124 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10573 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10573] == mem[_10573]
                                if mem[_10573]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10705 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10887 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10887 + 32] = mem[_10887 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10989 = mem[_10887]
                                s = 0
                                while s < _10989:
                                    mem[_10705 + s + 100] = mem[_10887 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10989) <= _10989:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10705 + _10989 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13427 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13427] = return_data.size
                                        mem[_13427 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13427 + 32] == bool(mem[_13427 + 32])
                                            if not mem[_13427 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10705 + _10989 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10705 + _10989 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13543 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13543] = return_data.size
                                        mem[_13543 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13543 + 32] == bool(mem[_13543 + 32])
                                            if not mem[_13543 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10707 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10707] == mem[_10707]
                                if mem[_10707]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10889 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11107 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11107 + 32] = mem[_11107 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11312 = mem[_11107]
                                s = 0
                                while s < _11312:
                                    mem[_10889 + s + 100] = mem[_11107 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11312) <= _11312:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10889 + _11312 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13429 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13429] = return_data.size
                                        mem[_13429 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13429 + 32] == bool(mem[_13429 + 32])
                                            if not mem[_13429 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10889 + _11312 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10889 + _11312 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13544 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13544] = return_data.size
                                        mem[_13544 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13544 + 32] == bool(mem[_13544 + 32])
                                            if not mem[_13544 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10228] = return_data.size
                            mem[_10228 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10574 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10574] == mem[_10574]
                                if mem[_10574]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10708 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10891 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10891 + 32] = mem[_10891 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10990 = mem[_10891]
                                s = 0
                                while s < _10990:
                                    mem[_10708 + s + 100] = mem[_10891 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10990) <= _10990:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10708 + _10990 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13431 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13431] = return_data.size
                                        mem[_13431 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13431 + 32] == bool(mem[_13431 + 32])
                                            if not mem[_13431 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10708 + _10990 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10708 + _10990 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13545 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13545] = return_data.size
                                        mem[_13545 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13545 + 32] == bool(mem[_13545 + 32])
                                            if not mem[_13545 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10228 + 32] == bool(mem[_10228 + 32])
                                if not mem[_10228 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10710 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10710] == mem[_10710]
                                if mem[_10710]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10893 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11109 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11109 + 32] = mem[_11109 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11314 = mem[_11109]
                                s = 0
                                while s < _11314:
                                    mem[_10893 + s + 100] = mem[_11109 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11314) <= _11314:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10893 + _11314 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13433 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13433] = return_data.size
                                        mem[_13433 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13433 + 32] == bool(mem[_13433 + 32])
                                            if not mem[_13433 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10893 + _11314 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10893 + _11314 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13546 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13546] = return_data.size
                                        mem[_13546 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13546 + 32] == bool(mem[_13546 + 32])
                                            if not mem[_13546 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                _6996 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_6996] = return_data.size
                mem[_6996 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7038 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7038] == mem[_7038]
                    if mem[_7038]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7054 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7075 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7075 + 32] = mem[_7075 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7092 = mem[_7075]
                    s = 0
                    while s < _7092:
                        mem[_7054 + s + 100] = mem[_7075 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7092) <= _7092:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7054 + _7092 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10547 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10547] == mem[_10547]
                                if mem[_10547]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10663 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10827 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10827 + 32] = mem[_10827 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10975 = mem[_10827]
                                s = 0
                                while s < _10975:
                                    mem[_10663 + s + 100] = mem[_10827 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10975) <= _10975:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10663 + _10975 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13435 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13435] = return_data.size
                                        mem[_13435 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13435 + 32] == bool(mem[_13435 + 32])
                                            if not mem[_13435 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10663 + _10975 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10663 + _10975 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13547 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13547] = return_data.size
                                        mem[_13547 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13547 + 32] == bool(mem[_13547 + 32])
                                            if not mem[_13547 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10665 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10665] == mem[_10665]
                                if mem[_10665]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10829 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11075 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11075 + 32] = mem[_11075 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11244 = mem[_11075]
                                s = 0
                                while s < _11244:
                                    mem[_10829 + s + 100] = mem[_11075 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11244) <= _11244:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10829 + _11244 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13437 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13437] = return_data.size
                                        mem[_13437 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13437 + 32] == bool(mem[_13437 + 32])
                                            if not mem[_13437 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10829 + _11244 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10829 + _11244 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13548 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13548] = return_data.size
                                        mem[_13548 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13548 + 32] == bool(mem[_13548 + 32])
                                            if not mem[_13548 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10215 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10215] = return_data.size
                            mem[_10215 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10548 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10548] == mem[_10548]
                                if mem[_10548]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10666 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10831 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10831 + 32] = mem[_10831 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10976 = mem[_10831]
                                s = 0
                                while s < _10976:
                                    mem[_10666 + s + 100] = mem[_10831 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10976) <= _10976:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10666 + _10976 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13439 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13439] = return_data.size
                                        mem[_13439 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13439 + 32] == bool(mem[_13439 + 32])
                                            if not mem[_13439 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10666 + _10976 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10666 + _10976 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13549 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13549] = return_data.size
                                        mem[_13549 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13549 + 32] == bool(mem[_13549 + 32])
                                            if not mem[_13549 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10215 + 32] == bool(mem[_10215 + 32])
                                if not mem[_10215 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10668 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10668] == mem[_10668]
                                if mem[_10668]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10833 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11077 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11077 + 32] = mem[_11077 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11246 = mem[_11077]
                                s = 0
                                while s < _11246:
                                    mem[_10833 + s + 100] = mem[_11077 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11246) <= _11246:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10833 + _11246 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13441] = return_data.size
                                        mem[_13441 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13441 + 32] == bool(mem[_13441 + 32])
                                            if not mem[_13441 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10833 + _11246 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10833 + _11246 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13550 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13550] = return_data.size
                                        mem[_13550 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13550 + 32] == bool(mem[_13550 + 32])
                                            if not mem[_13550 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7054 + _7092 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7054 + _7092 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10575 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10575] == mem[_10575]
                                if mem[_10575]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10711 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10897 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10897 + 32] = mem[_10897 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10991 = mem[_10897]
                                s = 0
                                while s < _10991:
                                    mem[_10711 + s + 100] = mem[_10897 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10991) <= _10991:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10711 + _10991 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13443 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13443] = return_data.size
                                        mem[_13443 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13443 + 32] == bool(mem[_13443 + 32])
                                            if not mem[_13443 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10711 + _10991 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10711 + _10991 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13551 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13551] = return_data.size
                                        mem[_13551 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13551 + 32] == bool(mem[_13551 + 32])
                                            if not mem[_13551 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10713 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10713] == mem[_10713]
                                if mem[_10713]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10899 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11113 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11113 + 32] = mem[_11113 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11324 = mem[_11113]
                                s = 0
                                while s < _11324:
                                    mem[_10899 + s + 100] = mem[_11113 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11324) <= _11324:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10899 + _11324 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13445 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13445] = return_data.size
                                        mem[_13445 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13445 + 32] == bool(mem[_13445 + 32])
                                            if not mem[_13445 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10899 + _11324 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10899 + _11324 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13552 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13552] = return_data.size
                                        mem[_13552 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13552 + 32] == bool(mem[_13552 + 32])
                                            if not mem[_13552 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10229] = return_data.size
                            mem[_10229 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10576 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10576] == mem[_10576]
                                if mem[_10576]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10714 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10901 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10901 + 32] = mem[_10901 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10992 = mem[_10901]
                                s = 0
                                while s < _10992:
                                    mem[_10714 + s + 100] = mem[_10901 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10992) <= _10992:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10714 + _10992 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13447 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13447] = return_data.size
                                        mem[_13447 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13447 + 32] == bool(mem[_13447 + 32])
                                            if not mem[_13447 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10714 + _10992 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10714 + _10992 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13553 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13553] = return_data.size
                                        mem[_13553 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13553 + 32] == bool(mem[_13553 + 32])
                                            if not mem[_13553 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10229 + 32] == bool(mem[_10229 + 32])
                                if not mem[_10229 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10716 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10716] == mem[_10716]
                                if mem[_10716]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10903 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11115 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11115 + 32] = mem[_11115 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11326 = mem[_11115]
                                s = 0
                                while s < _11326:
                                    mem[_10903 + s + 100] = mem[_11115 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11326) <= _11326:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10903 + _11326 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13449 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13449] = return_data.size
                                        mem[_13449 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13449 + 32] == bool(mem[_13449 + 32])
                                            if not mem[_13449 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10903 + _11326 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10903 + _11326 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13554 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13554] = return_data.size
                                        mem[_13554 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13554 + 32] == bool(mem[_13554 + 32])
                                            if not mem[_13554 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                else:
                    require return_data.size >= 32
                    require mem[_6996 + 32] == bool(mem[_6996 + 32])
                    if not mem[_6996 + 32]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7056 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7056] == mem[_7056]
                    if mem[_7056]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7077 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7105 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7105 + 32] = mem[_7105 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7126 = mem[_7105]
                    s = 0
                    while s < _7126:
                        mem[_7077 + s + 100] = mem[_7105 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7126) <= _7126:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7077 + _7126 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10551 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10551] == mem[_10551]
                                if mem[_10551]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10669 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10835 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10835 + 32] = mem[_10835 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10977 = mem[_10835]
                                s = 0
                                while s < _10977:
                                    mem[_10669 + s + 100] = mem[_10835 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10977) <= _10977:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10669 + _10977 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13451 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13451] = return_data.size
                                        mem[_13451 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13451 + 32] == bool(mem[_13451 + 32])
                                            if not mem[_13451 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10669 + _10977 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10669 + _10977 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13555 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13555] = return_data.size
                                        mem[_13555 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13555 + 32] == bool(mem[_13555 + 32])
                                            if not mem[_13555 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10671 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10671] == mem[_10671]
                                if mem[_10671]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10837 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11079 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11079 + 32] = mem[_11079 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11252 = mem[_11079]
                                s = 0
                                while s < _11252:
                                    mem[_10837 + s + 100] = mem[_11079 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11252) <= _11252:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10837 + _11252 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13453 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13453] = return_data.size
                                        mem[_13453 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13453 + 32] == bool(mem[_13453 + 32])
                                            if not mem[_13453 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10837 + _11252 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10837 + _11252 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13556 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13556] = return_data.size
                                        mem[_13556 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13556 + 32] == bool(mem[_13556 + 32])
                                            if not mem[_13556 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10217 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10217] = return_data.size
                            mem[_10217 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10552 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10552] == mem[_10552]
                                if mem[_10552]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10672 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10839 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10839 + 32] = mem[_10839 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10978 = mem[_10839]
                                s = 0
                                while s < _10978:
                                    mem[_10672 + s + 100] = mem[_10839 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10978) <= _10978:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10672 + _10978 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13455 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13455] = return_data.size
                                        mem[_13455 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13455 + 32] == bool(mem[_13455 + 32])
                                            if not mem[_13455 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10672 + _10978 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10672 + _10978 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13557 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13557] = return_data.size
                                        mem[_13557 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13557 + 32] == bool(mem[_13557 + 32])
                                            if not mem[_13557 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10217 + 32] == bool(mem[_10217 + 32])
                                if not mem[_10217 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10674 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10674] == mem[_10674]
                                if mem[_10674]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10841 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11081 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11081 + 32] = mem[_11081 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11254 = mem[_11081]
                                s = 0
                                while s < _11254:
                                    mem[_10841 + s + 100] = mem[_11081 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11254) <= _11254:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10841 + _11254 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13457 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13457] = return_data.size
                                        mem[_13457 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13457 + 32] == bool(mem[_13457 + 32])
                                            if not mem[_13457 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10841 + _11254 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10841 + _11254 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13558 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13558] = return_data.size
                                        mem[_13558 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13558 + 32] == bool(mem[_13558 + 32])
                                            if not mem[_13558 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7077 + _7126 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7077 + _7126 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10577 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10577] == mem[_10577]
                                if mem[_10577]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10717 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10907 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10907 + 32] = mem[_10907 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10993 = mem[_10907]
                                s = 0
                                while s < _10993:
                                    mem[_10717 + s + 100] = mem[_10907 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10993) <= _10993:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10717 + _10993 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13459 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13459] = return_data.size
                                        mem[_13459 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13459 + 32] == bool(mem[_13459 + 32])
                                            if not mem[_13459 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10717 + _10993 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10717 + _10993 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13559 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13559] = return_data.size
                                        mem[_13559 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13559 + 32] == bool(mem[_13559 + 32])
                                            if not mem[_13559 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10719 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10719] == mem[_10719]
                                if mem[_10719]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10909 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11119 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11119 + 32] = mem[_11119 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11336 = mem[_11119]
                                s = 0
                                while s < _11336:
                                    mem[_10909 + s + 100] = mem[_11119 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11336) <= _11336:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10909 + _11336 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13461 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13461] = return_data.size
                                        mem[_13461 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13461 + 32] == bool(mem[_13461 + 32])
                                            if not mem[_13461 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10909 + _11336 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10909 + _11336 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13560 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13560] = return_data.size
                                        mem[_13560 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13560 + 32] == bool(mem[_13560 + 32])
                                            if not mem[_13560 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10230 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10230] = return_data.size
                            mem[_10230 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10578 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10578] == mem[_10578]
                                if mem[_10578]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10720 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10911 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10911 + 32] = mem[_10911 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10994 = mem[_10911]
                                s = 0
                                while s < _10994:
                                    mem[_10720 + s + 100] = mem[_10911 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10994) <= _10994:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10720 + _10994 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13463 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13463] = return_data.size
                                        mem[_13463 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13463 + 32] == bool(mem[_13463 + 32])
                                            if not mem[_13463 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10720 + _10994 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10720 + _10994 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13561 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13561] = return_data.size
                                        mem[_13561 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13561 + 32] == bool(mem[_13561 + 32])
                                            if not mem[_13561 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10230 + 32] == bool(mem[_10230 + 32])
                                if not mem[_10230 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10722 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10722] == mem[_10722]
                                if mem[_10722]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10913 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11121 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11121 + 32] = mem[_11121 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11338 = mem[_11121]
                                s = 0
                                while s < _11338:
                                    mem[_10913 + s + 100] = mem[_11121 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11338) <= _11338:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10913 + _11338 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13465 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13465] = return_data.size
                                        mem[_13465 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13465 + 32] == bool(mem[_13465 + 32])
                                            if not mem[_13465 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10913 + _11338 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10913 + _11338 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13562 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13562] = return_data.size
                                        mem[_13562 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13562 + 32] == bool(mem[_13562 + 32])
                                            if not mem[_13562 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        else:
            mem[_5310 + _5316 + 100] = 0
            call address(_5302).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _5310 + _5316 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] <= 0:
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7041 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7041] == mem[_7041]
                    if mem[_7041]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7057 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7081 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7081 + 32] = mem[_7081 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7093 = mem[_7081]
                    s = 0
                    while s < _7093:
                        mem[_7057 + s + 100] = mem[_7081 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7093) <= _7093:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7057 + _7093 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10555 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10555] == mem[_10555]
                                if mem[_10555]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10675 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10843 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10843 + 32] = mem[_10843 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10979 = mem[_10843]
                                s = 0
                                while s < _10979:
                                    mem[_10675 + s + 100] = mem[_10843 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10979) <= _10979:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10675 + _10979 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13467 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13467] = return_data.size
                                        mem[_13467 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13467 + 32] == bool(mem[_13467 + 32])
                                            if not mem[_13467 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10675 + _10979 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10675 + _10979 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13563 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13563] = return_data.size
                                        mem[_13563 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13563 + 32] == bool(mem[_13563 + 32])
                                            if not mem[_13563 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10677 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10677] == mem[_10677]
                                if mem[_10677]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10845 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11083 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11083 + 32] = mem[_11083 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11260 = mem[_11083]
                                s = 0
                                while s < _11260:
                                    mem[_10845 + s + 100] = mem[_11083 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11260) <= _11260:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10845 + _11260 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13469 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13469] = return_data.size
                                        mem[_13469 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13469 + 32] == bool(mem[_13469 + 32])
                                            if not mem[_13469 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10845 + _11260 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10845 + _11260 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13564 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13564] = return_data.size
                                        mem[_13564 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13564 + 32] == bool(mem[_13564 + 32])
                                            if not mem[_13564 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10219 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10219] = return_data.size
                            mem[_10219 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10556 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10556] == mem[_10556]
                                if mem[_10556]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10678 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10847 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10847 + 32] = mem[_10847 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10980 = mem[_10847]
                                s = 0
                                while s < _10980:
                                    mem[_10678 + s + 100] = mem[_10847 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10980) <= _10980:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10678 + _10980 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13471 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13471] = return_data.size
                                        mem[_13471 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13471 + 32] == bool(mem[_13471 + 32])
                                            if not mem[_13471 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10678 + _10980 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10678 + _10980 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13565 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13565] = return_data.size
                                        mem[_13565 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13565 + 32] == bool(mem[_13565 + 32])
                                            if not mem[_13565 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10219 + 32] == bool(mem[_10219 + 32])
                                if not mem[_10219 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10680 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10680] == mem[_10680]
                                if mem[_10680]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10849 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11085 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11085 + 32] = mem[_11085 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11262 = mem[_11085]
                                s = 0
                                while s < _11262:
                                    mem[_10849 + s + 100] = mem[_11085 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11262) <= _11262:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10849 + _11262 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13473 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13473] = return_data.size
                                        mem[_13473 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13473 + 32] == bool(mem[_13473 + 32])
                                            if not mem[_13473 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10849 + _11262 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10849 + _11262 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13566 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13566] = return_data.size
                                        mem[_13566 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13566 + 32] == bool(mem[_13566 + 32])
                                            if not mem[_13566 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7057 + _7093 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7057 + _7093 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10579 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10579] == mem[_10579]
                                if mem[_10579]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10723 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10917 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10917 + 32] = mem[_10917 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10995 = mem[_10917]
                                s = 0
                                while s < _10995:
                                    mem[_10723 + s + 100] = mem[_10917 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10995) <= _10995:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10723 + _10995 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13475 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13475] = return_data.size
                                        mem[_13475 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13475 + 32] == bool(mem[_13475 + 32])
                                            if not mem[_13475 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10723 + _10995 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10723 + _10995 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13567 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13567] = return_data.size
                                        mem[_13567 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13567 + 32] == bool(mem[_13567 + 32])
                                            if not mem[_13567 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10725 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10725] == mem[_10725]
                                if mem[_10725]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10919 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11125 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11125 + 32] = mem[_11125 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11348 = mem[_11125]
                                s = 0
                                while s < _11348:
                                    mem[_10919 + s + 100] = mem[_11125 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11348) <= _11348:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10919 + _11348 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13477 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13477] = return_data.size
                                        mem[_13477 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13477 + 32] == bool(mem[_13477 + 32])
                                            if not mem[_13477 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10919 + _11348 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10919 + _11348 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13568 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13568] = return_data.size
                                        mem[_13568 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13568 + 32] == bool(mem[_13568 + 32])
                                            if not mem[_13568 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10231] = return_data.size
                            mem[_10231 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10580 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10580] == mem[_10580]
                                if mem[_10580]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10726 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10921 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10921 + 32] = mem[_10921 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10996 = mem[_10921]
                                s = 0
                                while s < _10996:
                                    mem[_10726 + s + 100] = mem[_10921 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10996) <= _10996:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10726 + _10996 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13479 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13479] = return_data.size
                                        mem[_13479 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13479 + 32] == bool(mem[_13479 + 32])
                                            if not mem[_13479 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10726 + _10996 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10726 + _10996 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13569 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13569] = return_data.size
                                        mem[_13569 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13569 + 32] == bool(mem[_13569 + 32])
                                            if not mem[_13569 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10231 + 32] == bool(mem[_10231 + 32])
                                if not mem[_10231 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10728 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10728] == mem[_10728]
                                if mem[_10728]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10923 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11127 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11127 + 32] = mem[_11127 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11350 = mem[_11127]
                                s = 0
                                while s < _11350:
                                    mem[_10923 + s + 100] = mem[_11127 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11350) <= _11350:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10923 + _11350 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13481 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13481] = return_data.size
                                        mem[_13481 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13481 + 32] == bool(mem[_13481 + 32])
                                            if not mem[_13481 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10923 + _11350 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10923 + _11350 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13570 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13570] = return_data.size
                                        mem[_13570 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13570 + 32] == bool(mem[_13570 + 32])
                                            if not mem[_13570 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                else:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7059 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7059] == mem[_7059]
                    if mem[_7059]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7083 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7109 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7109 + 32] = mem[_7109 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7140 = mem[_7109]
                    s = 0
                    while s < _7140:
                        mem[_7083 + s + 100] = mem[_7109 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7140) <= _7140:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7083 + _7140 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10559 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10559] == mem[_10559]
                                if mem[_10559]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10681 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10851 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10851 + 32] = mem[_10851 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10981 = mem[_10851]
                                s = 0
                                while s < _10981:
                                    mem[_10681 + s + 100] = mem[_10851 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10981) <= _10981:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10681 + _10981 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13483 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13483] = return_data.size
                                        mem[_13483 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13483 + 32] == bool(mem[_13483 + 32])
                                            if not mem[_13483 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10681 + _10981 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10681 + _10981 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13571 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13571] = return_data.size
                                        mem[_13571 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13571 + 32] == bool(mem[_13571 + 32])
                                            if not mem[_13571 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10683 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10683] == mem[_10683]
                                if mem[_10683]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10853 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11087 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11087 + 32] = mem[_11087 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11268 = mem[_11087]
                                s = 0
                                while s < _11268:
                                    mem[_10853 + s + 100] = mem[_11087 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11268) <= _11268:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10853 + _11268 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13485 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13485] = return_data.size
                                        mem[_13485 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13485 + 32] == bool(mem[_13485 + 32])
                                            if not mem[_13485 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10853 + _11268 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10853 + _11268 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13572 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13572] = return_data.size
                                        mem[_13572 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13572 + 32] == bool(mem[_13572 + 32])
                                            if not mem[_13572 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10221] = return_data.size
                            mem[_10221 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10560 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10560] == mem[_10560]
                                if mem[_10560]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10684 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10855 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10855 + 32] = mem[_10855 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10982 = mem[_10855]
                                s = 0
                                while s < _10982:
                                    mem[_10684 + s + 100] = mem[_10855 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10982) <= _10982:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10684 + _10982 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13487 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13487] = return_data.size
                                        mem[_13487 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13487 + 32] == bool(mem[_13487 + 32])
                                            if not mem[_13487 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10684 + _10982 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10684 + _10982 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13573 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13573] = return_data.size
                                        mem[_13573 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13573 + 32] == bool(mem[_13573 + 32])
                                            if not mem[_13573 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10221 + 32] == bool(mem[_10221 + 32])
                                if not mem[_10221 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10686 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10686] == mem[_10686]
                                if mem[_10686]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10857 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11089 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11089 + 32] = mem[_11089 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11270 = mem[_11089]
                                s = 0
                                while s < _11270:
                                    mem[_10857 + s + 100] = mem[_11089 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11270) <= _11270:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10857 + _11270 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13489 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13489] = return_data.size
                                        mem[_13489 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13489 + 32] == bool(mem[_13489 + 32])
                                            if not mem[_13489 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10857 + _11270 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10857 + _11270 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13574 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13574] = return_data.size
                                        mem[_13574 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13574 + 32] == bool(mem[_13574 + 32])
                                            if not mem[_13574 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7083 + _7140 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7083 + _7140 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10581 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10581] == mem[_10581]
                                if mem[_10581]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10729 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10927 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10927 + 32] = mem[_10927 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10997 = mem[_10927]
                                s = 0
                                while s < _10997:
                                    mem[_10729 + s + 100] = mem[_10927 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10997) <= _10997:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10729 + _10997 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13491 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13491] = return_data.size
                                        mem[_13491 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13491 + 32] == bool(mem[_13491 + 32])
                                            if not mem[_13491 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10729 + _10997 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10729 + _10997 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13575 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13575] = return_data.size
                                        mem[_13575 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13575 + 32] == bool(mem[_13575 + 32])
                                            if not mem[_13575 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10731 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10731] == mem[_10731]
                                if mem[_10731]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10929 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11131 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11131 + 32] = mem[_11131 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11360 = mem[_11131]
                                s = 0
                                while s < _11360:
                                    mem[_10929 + s + 100] = mem[_11131 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11360) <= _11360:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10929 + _11360 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13493 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13493] = return_data.size
                                        mem[_13493 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13493 + 32] == bool(mem[_13493 + 32])
                                            if not mem[_13493 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10929 + _11360 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10929 + _11360 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13576 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13576] = return_data.size
                                        mem[_13576 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13576 + 32] == bool(mem[_13576 + 32])
                                            if not mem[_13576 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10232 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10232] = return_data.size
                            mem[_10232 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10582 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10582] == mem[_10582]
                                if mem[_10582]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10732 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10931 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10931 + 32] = mem[_10931 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10998 = mem[_10931]
                                s = 0
                                while s < _10998:
                                    mem[_10732 + s + 100] = mem[_10931 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10998) <= _10998:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10732 + _10998 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13495 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13495] = return_data.size
                                        mem[_13495 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13495 + 32] == bool(mem[_13495 + 32])
                                            if not mem[_13495 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10732 + _10998 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10732 + _10998 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13577] = return_data.size
                                        mem[_13577 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13577 + 32] == bool(mem[_13577 + 32])
                                            if not mem[_13577 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10232 + 32] == bool(mem[_10232 + 32])
                                if not mem[_10232 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10734 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10734] == mem[_10734]
                                if mem[_10734]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10933 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11133 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11133 + 32] = mem[_11133 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11362 = mem[_11133]
                                s = 0
                                while s < _11362:
                                    mem[_10933 + s + 100] = mem[_11133 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11362) <= _11362:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10933 + _11362 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13497 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13497] = return_data.size
                                        mem[_13497 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13497 + 32] == bool(mem[_13497 + 32])
                                            if not mem[_13497 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10933 + _11362 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10933 + _11362 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13578 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13578] = return_data.size
                                        mem[_13578 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13578 + 32] == bool(mem[_13578 + 32])
                                            if not mem[_13578 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
            else:
                _6998 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_6998] = return_data.size
                mem[_6998 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7042] == mem[_7042]
                    if mem[_7042]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7060 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7085 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7085 + 32] = mem[_7085 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7094 = mem[_7085]
                    s = 0
                    while s < _7094:
                        mem[_7060 + s + 100] = mem[_7085 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7094) <= _7094:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7060 + _7094 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10563 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10563] == mem[_10563]
                                if mem[_10563]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10687 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10859 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10859 + 32] = mem[_10859 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10983 = mem[_10859]
                                s = 0
                                while s < _10983:
                                    mem[_10687 + s + 100] = mem[_10859 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10983) <= _10983:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10687 + _10983 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13499 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13499] = return_data.size
                                        mem[_13499 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13499 + 32] == bool(mem[_13499 + 32])
                                            if not mem[_13499 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10687 + _10983 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10687 + _10983 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13579 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13579] = return_data.size
                                        mem[_13579 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13579 + 32] == bool(mem[_13579 + 32])
                                            if not mem[_13579 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10689 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10689] == mem[_10689]
                                if mem[_10689]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10861 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11091 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11091 + 32] = mem[_11091 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11276 = mem[_11091]
                                s = 0
                                while s < _11276:
                                    mem[_10861 + s + 100] = mem[_11091 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11276) <= _11276:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10861 + _11276 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13501 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13501] = return_data.size
                                        mem[_13501 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13501 + 32] == bool(mem[_13501 + 32])
                                            if not mem[_13501 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10861 + _11276 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10861 + _11276 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13580 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13580] = return_data.size
                                        mem[_13580 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13580 + 32] == bool(mem[_13580 + 32])
                                            if not mem[_13580 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10223 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10223] = return_data.size
                            mem[_10223 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10564 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10564] == mem[_10564]
                                if mem[_10564]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10690 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10863 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10863 + 32] = mem[_10863 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10984 = mem[_10863]
                                s = 0
                                while s < _10984:
                                    mem[_10690 + s + 100] = mem[_10863 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10984) <= _10984:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10690 + _10984 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13503 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13503] = return_data.size
                                        mem[_13503 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13503 + 32] == bool(mem[_13503 + 32])
                                            if not mem[_13503 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10690 + _10984 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10690 + _10984 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13581] = return_data.size
                                        mem[_13581 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13581 + 32] == bool(mem[_13581 + 32])
                                            if not mem[_13581 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10223 + 32] == bool(mem[_10223 + 32])
                                if not mem[_10223 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10692 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10692] == mem[_10692]
                                if mem[_10692]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10865 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11093 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11093 + 32] = mem[_11093 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11278 = mem[_11093]
                                s = 0
                                while s < _11278:
                                    mem[_10865 + s + 100] = mem[_11093 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11278) <= _11278:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10865 + _11278 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13505 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13505] = return_data.size
                                        mem[_13505 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13505 + 32] == bool(mem[_13505 + 32])
                                            if not mem[_13505 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10865 + _11278 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10865 + _11278 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13582 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13582] = return_data.size
                                        mem[_13582 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13582 + 32] == bool(mem[_13582 + 32])
                                            if not mem[_13582 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7060 + _7094 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7060 + _7094 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10583 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10583] == mem[_10583]
                                if mem[_10583]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10735 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10937 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10937 + 32] = mem[_10937 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10999 = mem[_10937]
                                s = 0
                                while s < _10999:
                                    mem[_10735 + s + 100] = mem[_10937 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10999) <= _10999:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10735 + _10999 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13507 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13507] = return_data.size
                                        mem[_13507 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13507 + 32] == bool(mem[_13507 + 32])
                                            if not mem[_13507 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10735 + _10999 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10735 + _10999 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13583] = return_data.size
                                        mem[_13583 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13583 + 32] == bool(mem[_13583 + 32])
                                            if not mem[_13583 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10737] == mem[_10737]
                                if mem[_10737]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10939 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11137 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11137 + 32] = mem[_11137 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11372 = mem[_11137]
                                s = 0
                                while s < _11372:
                                    mem[_10939 + s + 100] = mem[_11137 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11372) <= _11372:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10939 + _11372 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13509 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13509] = return_data.size
                                        mem[_13509 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13509 + 32] == bool(mem[_13509 + 32])
                                            if not mem[_13509 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10939 + _11372 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10939 + _11372 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13584 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13584] = return_data.size
                                        mem[_13584 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13584 + 32] == bool(mem[_13584 + 32])
                                            if not mem[_13584 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10233] = return_data.size
                            mem[_10233 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10584 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10584] == mem[_10584]
                                if mem[_10584]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10738 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10941 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10941 + 32] = mem[_10941 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11000 = mem[_10941]
                                s = 0
                                while s < _11000:
                                    mem[_10738 + s + 100] = mem[_10941 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11000) <= _11000:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10738 + _11000 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13511 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13511] = return_data.size
                                        mem[_13511 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13511 + 32] == bool(mem[_13511 + 32])
                                            if not mem[_13511 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10738 + _11000 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10738 + _11000 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13585] = return_data.size
                                        mem[_13585 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13585 + 32] == bool(mem[_13585 + 32])
                                            if not mem[_13585 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10233 + 32] == bool(mem[_10233 + 32])
                                if not mem[_10233 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10740 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10740] == mem[_10740]
                                if mem[_10740]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10943 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11139 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11139 + 32] = mem[_11139 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11374 = mem[_11139]
                                s = 0
                                while s < _11374:
                                    mem[_10943 + s + 100] = mem[_11139 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11374) <= _11374:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10943 + _11374 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13513 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13513] = return_data.size
                                        mem[_13513 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13513 + 32] == bool(mem[_13513 + 32])
                                            if not mem[_13513 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10943 + _11374 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10943 + _11374 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13586 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13586] = return_data.size
                                        mem[_13586 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13586 + 32] == bool(mem[_13586 + 32])
                                            if not mem[_13586 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                else:
                    require return_data.size >= 32
                    require mem[_6998 + 32] == bool(mem[_6998 + 32])
                    if not mem[_6998 + 32]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = stor3
                    require ext_code.size(address(_5302))
                    staticcall address(_5302).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), stor3
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7062 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_7062] == mem[_7062]
                    if mem[_7062]:
                        revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                    _7087 = mem[64]
                    mem[mem[64] + 36] = stor3
                    mem[mem[64] + 68] = -1
                    _7111 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_7111 + 32] = mem[_7111 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _7142 = mem[_7111]
                    s = 0
                    while s < _7142:
                        mem[_7087 + s + 100] = mem[_7111 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(_7142) <= _7142:
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7087 + _7142 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10567 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10567] == mem[_10567]
                                if mem[_10567]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10693 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10867 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10867 + 32] = mem[_10867 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10985 = mem[_10867]
                                s = 0
                                while s < _10985:
                                    mem[_10693 + s + 100] = mem[_10867 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10985) <= _10985:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10693 + _10985 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13515 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13515] = return_data.size
                                        mem[_13515 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13515 + 32] == bool(mem[_13515 + 32])
                                            if not mem[_13515 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10693 + _10985 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10693 + _10985 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13587] = return_data.size
                                        mem[_13587 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13587 + 32] == bool(mem[_13587 + 32])
                                            if not mem[_13587 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10695] == mem[_10695]
                                if mem[_10695]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10869 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11095 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11095 + 32] = mem[_11095 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11284 = mem[_11095]
                                s = 0
                                while s < _11284:
                                    mem[_10869 + s + 100] = mem[_11095 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11284) <= _11284:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10869 + _11284 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13517 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13517] = return_data.size
                                        mem[_13517 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13517 + 32] == bool(mem[_13517 + 32])
                                            if not mem[_13517 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10869 + _11284 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10869 + _11284 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13588 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13588] = return_data.size
                                        mem[_13588 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13588 + 32] == bool(mem[_13588 + 32])
                                            if not mem[_13588 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10225] = return_data.size
                            mem[_10225 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10568 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10568] == mem[_10568]
                                if mem[_10568]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10696 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10871 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10871 + 32] = mem[_10871 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _10986 = mem[_10871]
                                s = 0
                                while s < _10986:
                                    mem[_10696 + s + 100] = mem[_10871 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_10986) <= _10986:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10696 + _10986 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13519 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13519] = return_data.size
                                        mem[_13519 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13519 + 32] == bool(mem[_13519 + 32])
                                            if not mem[_13519 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10696 + _10986 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10696 + _10986 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13589] = return_data.size
                                        mem[_13589 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13589 + 32] == bool(mem[_13589 + 32])
                                            if not mem[_13589 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10225 + 32] == bool(mem[_10225 + 32])
                                if not mem[_10225 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10698 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10698] == mem[_10698]
                                if mem[_10698]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10873 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11097 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11097 + 32] = mem[_11097 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11286 = mem[_11097]
                                s = 0
                                while s < _11286:
                                    mem[_10873 + s + 100] = mem[_11097 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11286) <= _11286:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10873 + _11286 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13521 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13521] = return_data.size
                                        mem[_13521 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13521 + 32] == bool(mem[_13521 + 32])
                                            if not mem[_13521 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10873 + _11286 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10873 + _11286 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13590 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13590] = return_data.size
                                        mem[_13590 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13590 + 32] == bool(mem[_13590 + 32])
                                            if not mem[_13590 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    else:
                        mem[_7087 + _7142 + 100] = 0
                        call address(_5302).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7087 + _7142 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10585 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10585] == mem[_10585]
                                if mem[_10585]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10741 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10947 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10947 + 32] = mem[_10947 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11001 = mem[_10947]
                                s = 0
                                while s < _11001:
                                    mem[_10741 + s + 100] = mem[_10947 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11001) <= _11001:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10741 + _11001 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13523 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13523] = return_data.size
                                        mem[_13523 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13523 + 32] == bool(mem[_13523 + 32])
                                            if not mem[_13523 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10741 + _11001 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10741 + _11001 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13591 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13591] = return_data.size
                                        mem[_13591 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13591 + 32] == bool(mem[_13591 + 32])
                                            if not mem[_13591 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10743 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10743] == mem[_10743]
                                if mem[_10743]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10949 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11143 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11143 + 32] = mem[_11143 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11384 = mem[_11143]
                                s = 0
                                while s < _11384:
                                    mem[_10949 + s + 100] = mem[_11143 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11384) <= _11384:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10949 + _11384 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13525 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13525] = return_data.size
                                        mem[_13525 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13525 + 32] == bool(mem[_13525 + 32])
                                            if not mem[_13525 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10949 + _11384 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10949 + _11384 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13592 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13592] = return_data.size
                                        mem[_13592 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13592 + 32] == bool(mem[_13592 + 32])
                                            if not mem[_13592 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        else:
                            _10234 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_10234] = return_data.size
                            mem[_10234 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10586 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10586] == mem[_10586]
                                if mem[_10586]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10744 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _10951 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_10951 + 32] = mem[_10951 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11002 = mem[_10951]
                                s = 0
                                while s < _11002:
                                    mem[_10744 + s + 100] = mem[_10951 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11002) <= _11002:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10744 + _11002 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13527 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13527] = return_data.size
                                        mem[_13527 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13527 + 32] == bool(mem[_13527 + 32])
                                            if not mem[_13527 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10744 + _11002 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10744 + _11002 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13593 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13593] = return_data.size
                                        mem[_13593 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13593 + 32] == bool(mem[_13593 + 32])
                                            if not mem[_13593 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            else:
                                require return_data.size >= 32
                                require mem[_10234 + 32] == bool(mem[_10234 + 32])
                                if not mem[_10234 + 32]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[mem[64] + 4] = this.address
                                mem[mem[64] + 36] = stor4
                                require ext_code.size(address(_5302))
                                staticcall address(_5302).0xdd62ed3e with:
                                        gas gas_remaining wei
                                       args address(this.address), stor4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10746 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_10746] == mem[_10746]
                                if mem[_10746]:
                                    revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                                _10953 = mem[64]
                                mem[mem[64] + 36] = stor4
                                mem[mem[64] + 68] = -1
                                _11145 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_11145 + 32] = mem[_11145 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                                _11386 = mem[_11145]
                                s = 0
                                while s < _11386:
                                    mem[_10953 + s + 100] = mem[_11145 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_11386) <= _11386:
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10953 + _11386 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13529 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13529] = return_data.size
                                        mem[_13529 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13529 + 32] == bool(mem[_13529 + 32])
                                            if not mem[_13529 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                else:
                                    mem[_10953 + _11386 + 100] = 0
                                    call address(_5302).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _10953 + _11386 + -mem[64] + 96]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            require mem[128] == bool(mem[128])
                                            if not mem[128]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    else:
                                        _13594 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_13594] = return_data.size
                                        mem[_13594 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            require mem[_13594 + 32] == bool(mem[_13594 + 32])
                                            if not mem[_13594 + 32]:
                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        if idx == -1:
            revert with 'NH{q', 17
        idx = idx + 1
        continue 
}

function executeOperation(address[] arg1, uint256[] arg2, uint256[] arg3, address arg4, bytes arg5) {
    require calldata.size - 4 >= 160
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require arg3 + (32 * arg3.length) + 36 <= calldata.size
    require arg4 == arg4
    require arg5 <= test266151307()
    require arg5 + 35 < calldata.size
    require arg5.length <= test266151307()
    require arg5 + arg5.length + 36 <= calldata.size
    if not uint8(stor1.field_8):
        revert with 0, 'no61'
    mem[96] = arg5.length
    mem[128 len arg5.length] = arg5[all]
    mem[arg5.length + 128] = 0
    mem[ceil32(arg5.length) + 128] = 0
    mem[ceil32(arg5.length) + 160] = 0
    mem[ceil32(arg5.length) + 192] = 0
    mem[ceil32(arg5.length) + 224] = 0
    mem[ceil32(arg5.length) + 256] = 0
    mem[ceil32(arg5.length) + 288] = 0
    mem[ceil32(arg5.length) + 320] = 0
    require arg5.length >= 224
    require mem[128] == mem[140 len 20]
    require mem[160] == mem[172 len 20]
    require mem[192] == mem[204 len 20]
    require mem[224] == mem[224]
    require mem[256] == mem[268 len 20]
    require mem[288] == mem[288]
    require mem[320] == mem[320]
    mem[ceil32(arg5.length) + 352] = mem[140 len 20]
    mem[ceil32(arg5.length) + 384] = mem[172 len 20]
    mem[ceil32(arg5.length) + 416] = mem[204 len 20]
    mem[ceil32(arg5.length) + 448] = mem[224]
    mem[ceil32(arg5.length) + 480] = mem[268 len 20]
    mem[ceil32(arg5.length) + 512] = mem[288]
    mem[ceil32(arg5.length) + 544] = mem[320]
    mem[ceil32(arg5.length) + 580] = mem[140 len 20]
    mem[ceil32(arg5.length) + 612] = mem[172 len 20]
    mem[ceil32(arg5.length) + 644] = mem[204 len 20]
    mem[ceil32(arg5.length) + 676] = mem[224]
    mem[ceil32(arg5.length) + 708] = 0
    require ext_code.size(LENDING_POOLAddress)
    call LENDING_POOLAddress.liquidationCall(address rg1, address rg2, address rg3, uint256 rg4, bool rg5) with:
         gas gas_remaining wei
        args mem[ceil32(arg5.length) + 580 len 96], mem[224], 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[ceil32(arg5.length) + 580] = this.address
    require ext_code.size(mem[140 len 20])
    staticcall mem[140 len 20].0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[ceil32(arg5.length) + 576] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] <= 0:
        revert with 0, 'ZERO_BALANCE_RECEIVED'
    if stor5 == mem[140 len 20]:
        if 0 >= arg3.length:
            revert with 'NH{q', 50
        if 0 >= arg2.length:
            revert with 'NH{q', 50
        if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
            revert with 'NH{q', 17
        require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
        if stor5 == mem[172 len 20]:
            require ext_code.size(stor5)
            staticcall stor5.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if 0 >= arg1.length:
                revert with 'NH{q', 50
            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
            if stor5 != address(cd[(arg1 + 36)]):
                require ext_code.size(stor5)
                if stor6 != 1:
                    call stor5.0xa9059cbb with:
                         gas gas_remaining wei
                        args mem[268 len 20], ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    call stor5.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    call mem[268 len 20] with:
                       value ext_call.return_data[0] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with 0, 'TRANSFER_FAILED'
            else:
                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                    revert with 0, 'CANT_REPAY_LOAN'
                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                    revert with 'NH{q', 17
                require ext_code.size(stor5)
                if stor6 != 1:
                    call stor5.0xa9059cbb with:
                         gas gas_remaining wei
                        args mem[268 len 20], ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    call stor5.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    call mem[268 len 20] with:
                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with 0, 'TRANSFER_FAILED'
        else:
            mem[ceil32(arg5.length) + ceil32(return_data.size) + 580] = this.address
            require ext_code.size(mem[172 len 20])
            staticcall mem[172 len 20].0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[ceil32(arg5.length) + ceil32(return_data.size) + 576] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= ext_call.return_data[0]:
                require ext_code.size(stor5)
                staticcall stor5.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if 0 >= arg1.length:
                    revert with 'NH{q', 50
                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                if stor5 != address(cd[(arg1 + 36)]):
                    require ext_code.size(stor5)
                    if stor6 != 1:
                        call stor5.0xa9059cbb with:
                             gas gas_remaining wei
                            args mem[268 len 20], ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with 0, 'TRANSFER_FAILED'
                else:
                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                        revert with 0, 'CANT_REPAY_LOAN'
                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                        revert with 'NH{q', 17
                    require ext_code.size(stor5)
                    if stor6 != 1:
                        call stor5.0xa9059cbb with:
                             gas gas_remaining wei
                            args mem[268 len 20], ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with 0, 'TRANSFER_FAILED'
            else:
                if cd[(arg2 + 36)] + cd[(arg3 + 36)] < ext_call.return_data[0]:
                    revert with 'NH{q', 17
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 576] = 2
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608] = stor5
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 640] = mem[172 len 20]
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = this.address
                require ext_code.size(stor5)
                staticcall stor5.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if mem[320] == 1:
                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                   len (13 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                        else:
                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (7 * ceil32(return_data.size)) + 100
                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                   len (13 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                        if not return_data.size:
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (7 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (7 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len (7 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                           len (7 * ceil32(return_data.size)) + 100
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 160
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 2
                    idx = 0
                    s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608
                    t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = block.timestamp
                    require ext_code.size(stor3)
                    call stor3.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0], ext_call.return_data[0], Array(len=2, data=mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868 len 64]), address(this.address), block.timestamp
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672
                    require return_data.size >= 32
                    _3201 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32
                    require mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 <= test266151307()
                    require ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 703 < ceil32(arg5.length) + (4 * ceil32(return_data.size)) + return_data.size + 672
                    _3224 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]
                    if mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672] > test266151307():
                        revert with 'NH{q', 65
                    if ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673
                    mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672] = _3224
                    require _3201 + (32 * _3224) + 32 <= return_data.size
                    idx = 0
                    s = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + _3201 + 704
                    t = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704
                    while idx < _3224:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5754 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5787 = mem[_5754]
                    require mem[_5754] == mem[_5754]
                    if 0 >= arg1.length:
                        revert with 'NH{q', 50
                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                    if stor5 != address(cd[(arg1 + 36)]):
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _5787
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args _5787
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _5787 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _5787
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _5787
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_6189] == bool(mem[_6189])
                    else:
                        if mem[_5754] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 0, 'CANT_REPAY_LOAN'
                        if mem[_5754] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 'NH{q', 17
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _5787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args (_5787 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _5787 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _5787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _5787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6368 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_6368] == bool(mem[_6368])
                else:
                    if mem[320] == 2:
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                            else:
                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (7 * ceil32(return_data.size)) + 100
                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                            if not return_data.size:
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                                   len (7 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len (7 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 160
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 2
                        idx = 0
                        s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608
                        t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = block.timestamp
                        require ext_code.size(stor4)
                        call stor4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0], ext_call.return_data[0], Array(len=2, data=mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868 len 64]), address(this.address), block.timestamp
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672
                        require return_data.size >= 32
                        _3200 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32
                        require mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 <= test266151307()
                        require ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 703 < ceil32(arg5.length) + (4 * ceil32(return_data.size)) + return_data.size + 672
                        _3223 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]
                        if mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672] > test266151307():
                            revert with 'NH{q', 65
                        if ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673
                        mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672] = _3223
                        require _3200 + (32 * _3223) + 32 <= return_data.size
                        idx = 0
                        s = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + _3200 + 704
                        t = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704
                        while idx < _3223:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5735 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5768 = mem[_5735]
                        require mem[_5735] == mem[_5735]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5768
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args _5768
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5768 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5768
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5768
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6146 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6146] == bool(mem[_6146])
                        else:
                            if mem[_5735] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 0, 'CANT_REPAY_LOAN'
                            if mem[_5735] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5768 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args (_5768 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5768 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5768 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5768 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6340 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6340] == bool(mem[_6340])
                    else:
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2:
                            revert with 'NH{q', 17
                        require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                            revert with 'NH{q', 17
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= 0:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] wei
                                         gas gas_remaining wei
                                else:
                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                           len (7 * ceil32(return_data.size)) + 100
                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 672
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                if not return_data.size:
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = block.timestamp
                            require ext_code.size(stor4)
                            call stor4.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2), ext_call.return_data[0] - (ext_call.return_data[0] / 2), Array(len=2, data=mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868 len 64]), address(this.address), block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672
                            require return_data.size >= 32
                            _3198 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32
                            require mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 <= test266151307()
                            require ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 703 < ceil32(arg5.length) + (4 * ceil32(return_data.size)) + return_data.size + 672
                            _3221 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 672]
                            if mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 672] > test266151307():
                                revert with 'NH{q', 65
                            if ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 672]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)) >> 32 + 672]) + 673
                            mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672] = _3221
                            require _3198 + (32 * _3221) + 32 <= return_data.size
                            idx = 0
                            s = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + _3198 + 704
                            t = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704
                            while idx < _3221:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5733 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5767 = mem[_5733]
                            require mem[_5733] == mem[_5733]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5767
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5767
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5767 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5767
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5767
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6140 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6140] == bool(mem[_6140])
                            else:
                                if mem[_5733] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5733] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5767 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5767 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5767 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5767 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5767 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6337 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6337] == bool(mem[_6337])
                        else:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] / 2
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868
                            while idx < 2:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = block.timestamp
                            require ext_code.size(stor3)
                            call stor3.swapTokensForExactTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                                 gas gas_remaining wei
                                args Mask(255, 1, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]), Mask(255, 1, ext_call.return_data[0]), Array(len=2, data=mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868 len 64]), address(this.address), block.timestamp
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672
                            require return_data.size >= 32
                            _3199 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32
                            require mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 <= test266151307()
                            require ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 703 < ceil32(arg5.length) + (4 * ceil32(return_data.size)) + return_data.size + 672
                            _3222 = mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]
                            if mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672] > test266151307():
                                revert with 'NH{q', 65
                            if ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672 len 4], Mask(224, 32, cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]) >> 32 + 672]) + 673
                            mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 672] = _3222
                            require _3199 + (32 * _3222) + 32 <= return_data.size
                            idx = 0
                            s = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + _3199 + 704
                            t = ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704
                            while idx < _3222:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5753 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5786 = mem[_5753]
                                require mem[_5753] == mem[_5753]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5786
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _5786
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5786 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5786
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5786
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6186 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6186] == bool(mem[_6186])
                                else:
                                    if mem[_5753] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_5753] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_5786 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5786 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6364 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6364] == bool(mem[_6364])
                            else:
                                _5680 = mem[64]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                mem[mem[64] + 68] = 160
                                _5734 = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 576]
                                mem[mem[64] + 164] = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 576]
                                idx = 0
                                s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 608
                                t = mem[64] + 196
                                while idx < _5734:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[_5680 + 100] = this.address
                                mem[_5680 + 132] = block.timestamp
                                require ext_code.size(stor4)
                                call stor4.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _5680 + (32 * _5734) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8210 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8231 = mem[_8210]
                                require mem[_8210] <= test266151307()
                                require _8210 + mem[_8210] + 31 < _8210 + return_data.size
                                _8254 = mem[_8210 + mem[_8210]]
                                if mem[_8210 + mem[_8210]] > test266151307():
                                    revert with 'NH{q', 65
                                if _8210 + ceil32(return_data.size) + floor32(mem[_8210 + mem[_8210]]) + 1 > test266151307() or floor32(mem[_8210 + mem[_8210]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _8210 + ceil32(return_data.size) + floor32(mem[_8210 + mem[_8210]]) + 1
                                mem[_8210 + ceil32(return_data.size)] = _8254
                                require _8231 + (32 * _8254) + 32 <= return_data.size
                                idx = 0
                                s = _8210 + _8231 + 32
                                t = _8210 + ceil32(return_data.size) + 32
                                while idx < _8254:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9764 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9784 = mem[_9764]
                                require mem[_9764] == mem[_9764]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9784
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _9784
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9784 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9784
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9784
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10013 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10013] == bool(mem[_10013])
                                else:
                                    if mem[_9764] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_9764] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9784 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_9784 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9784 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9784 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9784 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10151 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10151] == bool(mem[_10151])
    else:
        mem[ceil32(arg5.length) + ceil32(return_data.size) + 576] = 2
        mem[ceil32(arg5.length) + ceil32(return_data.size) + 608] = mem[140 len 20]
        mem[ceil32(arg5.length) + ceil32(return_data.size) + 640] = stor5
        if mem[288] == 1:
            if ext_call.return_data[0] <= 0:
                if 0 >= arg3.length:
                    revert with 'NH{q', 50
                if 0 >= arg2.length:
                    revert with 'NH{q', 50
                if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                    revert with 'NH{q', 17
                require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = this.address
                if stor5 == mem[172 len 20]:
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if 0 >= arg1.length:
                        revert with 'NH{q', 50
                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                    if stor5 != address(cd[(arg1 + 36)]):
                        if stor6 != 1:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (5 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                        require ext_code.size(stor5)
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                    else:
                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                            revert with memory
                              from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                               len ceil32(return_data.size) + 100
                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 'NH{q', 17
                        if stor6 != 1:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (5 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                        require ext_code.size(stor5)
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                             gas gas_remaining wei
                    if not return_data.size:
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 1
                            return memory
                              from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                               len ceil32(return_data.size) + 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                           len ceil32(return_data.size) + 100
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                        return memory
                          from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                           len ceil32(return_data.size) + 32
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                    revert with memory
                      from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                       len ceil32(return_data.size) + 100
                require ext_code.size(mem[172 len 20])
                staticcall mem[172 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= ext_call.return_data[0]:
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = this.address
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if 0 >= arg1.length:
                        revert with 'NH{q', 50
                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                    if stor5 != address(cd[(arg1 + 36)]):
                        if stor6 != 1:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                        require ext_code.size(stor5)
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                    else:
                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (5 * ceil32(return_data.size)) + 100
                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 'NH{q', 17
                        if stor6 != 1:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                        require ext_code.size(stor5)
                        call stor5.0x2e1a7d4d with:
                             gas gas_remaining wei
                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        call mem[268 len 20] with:
                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                             gas gas_remaining wei
                    if not return_data.size:
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (5 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                           len (5 * ceil32(return_data.size)) + 100
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                        return memory
                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                           len (5 * ceil32(return_data.size)) + 32
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                    revert with memory
                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                       len (5 * ceil32(return_data.size)) + 100
                if cd[(arg2 + 36)] + cd[(arg3 + 36)] < ext_call.return_data[0]:
                    revert with 'NH{q', 17
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 2
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704] = stor5
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 736] = mem[172 len 20]
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 772] = this.address
                require ext_code.size(stor5)
                staticcall stor5.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if mem[320] == 1:
                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                return memory
                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                   len (13 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                        else:
                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                   len (7 * ceil32(return_data.size)) + 100
                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                return memory
                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                   len (13 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                        if not return_data.size:
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                   len (7 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                               len (7 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                               len (7 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                           len (7 * ceil32(return_data.size)) + 100
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                    idx = 0
                    s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                    t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                    while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                    require ext_code.size(stor3)
                    call stor3.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3197 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3215 = mem[_3197]
                    require mem[_3197] <= test266151307()
                    require _3197 + mem[_3197] + 31 < _3197 + return_data.size
                    _3238 = mem[_3197 + mem[_3197]]
                    if mem[_3197 + mem[_3197]] > test266151307():
                        revert with 'NH{q', 65
                    if _3197 + ceil32(return_data.size) + floor32(mem[_3197 + mem[_3197]]) + 1 > test266151307() or floor32(mem[_3197 + mem[_3197]]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = _3197 + ceil32(return_data.size) + floor32(mem[_3197 + mem[_3197]]) + 1
                    mem[_3197 + ceil32(return_data.size)] = _3238
                    require _3215 + (32 * _3238) + 32 <= return_data.size
                    idx = 0
                    s = _3197 + _3215 + 32
                    t = _3197 + ceil32(return_data.size) + 32
                    while idx < _3238:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5761 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _5793 = mem[_5761]
                    require mem[_5761] == mem[_5761]
                    if 0 >= arg1.length:
                        revert with 'NH{q', 50
                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                    if stor5 != address(cd[(arg1 + 36)]):
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _5793
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args _5793
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _5793 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _5793
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _5793
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6209 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_6209] == bool(mem[_6209])
                    else:
                        if mem[_5761] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 0, 'CANT_REPAY_LOAN'
                        if mem[_5761] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 'NH{q', 17
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _5793 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args (_5793 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _5793 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _5793 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _5793 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6394 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_6394] == bool(mem[_6394])
                else:
                    if mem[320] == 2:
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                            else:
                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 100
                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                            if not return_data.size:
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                   len (7 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                               len (7 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                        idx = 0
                        s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                        t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                        while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                        require ext_code.size(stor4)
                        call stor4.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3196 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3214 = mem[_3196]
                        require mem[_3196] <= test266151307()
                        require _3196 + mem[_3196] + 31 < _3196 + return_data.size
                        _3237 = mem[_3196 + mem[_3196]]
                        if mem[_3196 + mem[_3196]] > test266151307():
                            revert with 'NH{q', 65
                        if _3196 + ceil32(return_data.size) + floor32(mem[_3196 + mem[_3196]]) + 1 > test266151307() or floor32(mem[_3196 + mem[_3196]]) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = _3196 + ceil32(return_data.size) + floor32(mem[_3196 + mem[_3196]]) + 1
                        mem[_3196 + ceil32(return_data.size)] = _3237
                        require _3214 + (32 * _3237) + 32 <= return_data.size
                        idx = 0
                        s = _3196 + _3214 + 32
                        t = _3196 + ceil32(return_data.size) + 32
                        while idx < _3237:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5781 = mem[_5748]
                        require mem[_5748] == mem[_5748]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5781
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args _5781
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5781 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5781
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5781
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6181 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6181] == bool(mem[_6181])
                        else:
                            if mem[_5748] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 0, 'CANT_REPAY_LOAN'
                            if mem[_5748] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5781 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args (_5781 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5781 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5781 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5781 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6359 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6359] == bool(mem[_6359])
                    else:
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2:
                            revert with 'NH{q', 17
                        require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                        if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                            revert with 'NH{q', 17
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= 0:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] wei
                                         gas gas_remaining wei
                                else:
                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 100
                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                if not return_data.size:
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                            while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                            require ext_code.size(stor4)
                            call stor4.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3194 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3212 = mem[_3194]
                            require mem[_3194] <= test266151307()
                            require _3194 + mem[_3194] + 31 < _3194 + return_data.size
                            _3235 = mem[_3194 + mem[_3194]]
                            if mem[_3194 + mem[_3194]] > test266151307():
                                revert with 'NH{q', 65
                            if _3194 + ceil32(return_data.size) + floor32(mem[_3194 + mem[_3194]]) + 1 > test266151307() or floor32(mem[_3194 + mem[_3194]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _3194 + ceil32(return_data.size) + floor32(mem[_3194 + mem[_3194]]) + 1
                            mem[_3194 + ceil32(return_data.size)] = _3235
                            require _3212 + (32 * _3235) + 32 <= return_data.size
                            idx = 0
                            s = _3194 + _3212 + 32
                            t = _3194 + ceil32(return_data.size) + 32
                            while idx < _3235:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5780 = mem[_5746]
                            require mem[_5746] == mem[_5746]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5780
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5780
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5780 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5780
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5780
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6175 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6175] == bool(mem[_6175])
                            else:
                                if mem[_5746] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5746] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5780 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5780 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5780 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5780 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5780 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6356 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6356] == bool(mem[_6356])
                        else:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] / 2
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                            while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                            require ext_code.size(stor3)
                            call stor3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3195 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3213 = mem[_3195]
                            require mem[_3195] <= test266151307()
                            require _3195 + mem[_3195] + 31 < _3195 + return_data.size
                            _3236 = mem[_3195 + mem[_3195]]
                            if mem[_3195 + mem[_3195]] > test266151307():
                                revert with 'NH{q', 65
                            if _3195 + ceil32(return_data.size) + floor32(mem[_3195 + mem[_3195]]) + 1 > test266151307() or floor32(mem[_3195 + mem[_3195]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _3195 + ceil32(return_data.size) + floor32(mem[_3195 + mem[_3195]]) + 1
                            mem[_3195 + ceil32(return_data.size)] = _3236
                            require _3213 + (32 * _3236) + 32 <= return_data.size
                            idx = 0
                            s = _3195 + _3213 + 32
                            t = _3195 + ceil32(return_data.size) + 32
                            while idx < _3236:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5760 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5792 = mem[_5760]
                                require mem[_5760] == mem[_5760]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5792
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _5792
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5792 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5792
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5792
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6206 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6206] == bool(mem[_6206])
                                else:
                                    if mem[_5760] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_5760] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_5792 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5792 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6390 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6390] == bool(mem[_6390])
                            else:
                                _5684 = mem[64]
                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                mem[mem[64] + 68] = 160
                                _5747 = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                mem[mem[64] + 164] = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                idx = 0
                                s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                t = mem[64] + 196
                                while idx < _5747:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[_5684 + 100] = this.address
                                mem[_5684 + 132] = block.timestamp
                                require ext_code.size(stor4)
                                call stor4.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _5684 + (32 * _5747) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8224 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8246 = mem[_8224]
                                require mem[_8224] <= test266151307()
                                require _8224 + mem[_8224] + 31 < _8224 + return_data.size
                                _8268 = mem[_8224 + mem[_8224]]
                                if mem[_8224 + mem[_8224]] > test266151307():
                                    revert with 'NH{q', 65
                                if _8224 + ceil32(return_data.size) + floor32(mem[_8224 + mem[_8224]]) + 1 > test266151307() or floor32(mem[_8224 + mem[_8224]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _8224 + ceil32(return_data.size) + floor32(mem[_8224 + mem[_8224]]) + 1
                                mem[_8224 + ceil32(return_data.size)] = _8268
                                require _8246 + (32 * _8268) + 32 <= return_data.size
                                idx = 0
                                s = _8224 + _8246 + 32
                                t = _8224 + ceil32(return_data.size) + 32
                                while idx < _8268:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9774 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9792 = mem[_9774]
                                require mem[_9774] == mem[_9774]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9792
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _9792
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9792 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9792
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9792
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10046] == bool(mem[_10046])
                                else:
                                    if mem[_9774] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_9774] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_9792 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9792 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9792 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10170 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10170] == bool(mem[_10170])
            else:
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = ext_call.return_data[0]
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 708] = 0
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 740] = 160
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 836] = 2
                idx = 0
                s = ceil32(arg5.length) + ceil32(return_data.size) + 608
                t = ceil32(arg5.length) + ceil32(return_data.size) + 868
                while idx < 2:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 772] = this.address
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 804] = block.timestamp
                require ext_code.size(stor3)
                call stor3.swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(arg5.length) + ceil32(return_data.size) + 868 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                require return_data.size >= 32
                _150 = mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28]
                require mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] <= test266151307()
                require ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 703 < ceil32(arg5.length) + ceil32(return_data.size) + return_data.size + 672
                _161 = mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]
                if mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672] > test266151307():
                    revert with 'NH{q', 65
                if ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 1 < 0:
                    revert with 'NH{q', 65
                mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 673
                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = _161
                require _150 + (32 * _161) + 32 <= return_data.size
                idx = 0
                s = ceil32(arg5.length) + ceil32(return_data.size) + _150 + 704
                t = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                while idx < _161:
                    require mem[s] == mem[s]
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                if 0 >= arg3.length:
                    revert with 'NH{q', 50
                if 0 >= arg2.length:
                    revert with 'NH{q', 50
                if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                    revert with 'NH{q', 17
                require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                if stor5 == mem[ceil32(arg5.length) + 396 len 20]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3266 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3270 = mem[_3266]
                    require mem[_3266] == mem[_3266]
                    if 0 >= arg1.length:
                        revert with 'NH{q', 50
                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                    if stor5 != address(cd[(arg1 + 36)]):
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3270
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args _3270
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _3270 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _3270
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _3270
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3457 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_3457] == bool(mem[_3457])
                    else:
                        if mem[_3266] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 0, 'CANT_REPAY_LOAN'
                        if mem[_3266] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                            revert with 'NH{q', 17
                        if stor6 == 1:
                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _3270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args (_3270 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[ceil32(arg5.length) + 492 len 20] with:
                               value _3270 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 'TRANSFER_FAILED'
                        else:
                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                            mem[mem[64] + 36] = _3270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0xa9059cbb with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], _3270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3574 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_3574] == bool(mem[_3574])
                else:
                    _3240 = mem[172 len 20]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_3240))
                    staticcall address(_3240).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3271 = mem[_3267]
                    require mem[_3267] == mem[_3267]
                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= mem[_3267]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3389 = mem[_3351]
                        require mem[_3351] == mem[_3351]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3389
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args _3389
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _3389 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _3389
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _3389
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3883 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_3883] == bool(mem[_3883])
                        else:
                            if mem[_3351] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 0, 'CANT_REPAY_LOAN'
                            if mem[_3351] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3389 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args (_3389 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _3389 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _3389 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _3389 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4084 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_4084] == bool(mem[_4084])
                    else:
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] < mem[_3267]:
                            revert with 'NH{q', 17
                        _3315 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_3315 + 32 len 64] = call.data[calldata.size len 64]
                        if 0 >= mem[_3315]:
                            revert with 'NH{q', 50
                        mem[_3315 + 32] = stor5
                        if 1 >= mem[_3315]:
                            revert with 'NH{q', 50
                        mem[_3315 + 64] = mem[ceil32(arg5.length) + 396 len 20]
                        mem[_3315 + 100] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_3315 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _3315 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if mem[ceil32(arg5.length) + 544] == 1:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 <= 0:
                                mem[_3315 + ceil32(return_data.size) + 100] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_3315 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 != 1:
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value ext_call.return_data[0] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                else:
                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 != 1:
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[_3315 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[_3315 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271
                                mem[_3315 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                mem[_3315 + ceil32(return_data.size) + 164] = 160
                                mem[_3315 + ceil32(return_data.size) + 260] = mem[_3315]
                                idx = 0
                                s = _3315 + 32
                                t = _3315 + ceil32(return_data.size) + 292
                                while idx < mem[_3315]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[_3315 + ceil32(return_data.size) + 196] = this.address
                                mem[_3315 + ceil32(return_data.size) + 228] = block.timestamp
                                require ext_code.size(stor3)
                                call stor3.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _3315 + ceil32(return_data.size) + (32 * mem[_3315]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5724 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5752 = mem[_5724]
                                require mem[_5724] <= test266151307()
                                require _5724 + mem[_5724] + 31 < _5724 + return_data.size
                                _5785 = mem[_5724 + mem[_5724]]
                                if mem[_5724 + mem[_5724]] > test266151307():
                                    revert with 'NH{q', 65
                                if _5724 + ceil32(return_data.size) + floor32(mem[_5724 + mem[_5724]]) + 1 > test266151307() or floor32(mem[_5724 + mem[_5724]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _5724 + ceil32(return_data.size) + floor32(mem[_5724 + mem[_5724]]) + 1
                                mem[_5724 + ceil32(return_data.size)] = _5785
                                require _5752 + (32 * _5785) + 32 <= return_data.size
                                idx = 0
                                s = _5724 + _5752 + 32
                                t = _5724 + ceil32(return_data.size) + 32
                                while idx < _5785:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8274 = mem[_8253]
                                require mem[_8253] == mem[_8253]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _8274
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _8274
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _8274 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _8274
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _8274
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8514 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8514] == bool(mem[_8514])
                                else:
                                    if mem[_8253] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_8253] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _8274 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_8274 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _8274 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _8274 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _8274 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8603 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8603] == bool(mem[_8603])
                        else:
                            if mem[ceil32(arg5.length) + 544] == 2:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 <= 0:
                                    mem[_3315 + ceil32(return_data.size) + 100] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_3315 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 != 1:
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value ext_call.return_data[0] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 != 1:
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[_3315 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[_3315 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271
                                    mem[_3315 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                    mem[_3315 + ceil32(return_data.size) + 164] = 160
                                    mem[_3315 + ceil32(return_data.size) + 260] = mem[_3315]
                                    idx = 0
                                    s = _3315 + 32
                                    t = _3315 + ceil32(return_data.size) + 292
                                    while idx < mem[_3315]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[_3315 + ceil32(return_data.size) + 196] = this.address
                                    mem[_3315 + ceil32(return_data.size) + 228] = block.timestamp
                                    require ext_code.size(stor4)
                                    call stor4.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _3315 + ceil32(return_data.size) + (32 * mem[_3315]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5723 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5751 = mem[_5723]
                                    require mem[_5723] <= test266151307()
                                    require _5723 + mem[_5723] + 31 < _5723 + return_data.size
                                    _5784 = mem[_5723 + mem[_5723]]
                                    if mem[_5723 + mem[_5723]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5723 + ceil32(return_data.size) + floor32(mem[_5723 + mem[_5723]]) + 1 > test266151307() or floor32(mem[_5723 + mem[_5723]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5723 + ceil32(return_data.size) + floor32(mem[_5723 + mem[_5723]]) + 1
                                    mem[_5723 + ceil32(return_data.size)] = _5784
                                    require _5751 + (32 * _5784) + 32 <= return_data.size
                                    idx = 0
                                    s = _5723 + _5751 + 32
                                    t = _5723 + ceil32(return_data.size) + 32
                                    while idx < _5784:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8249 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _8270 = mem[_8249]
                                    require mem[_8249] == mem[_8249]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _8270
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args _8270
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _8270 wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _8270
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _8270
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8500 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_8500] == bool(mem[_8500])
                                    else:
                                        if mem[_8249] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if mem[_8249] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _8270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (_8270 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _8270 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _8270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _8270 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8586 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_8586] == bool(mem[_8586])
                            else:
                                require cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 < cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2:
                                    revert with 'NH{q', 17
                                require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                    revert with 'NH{q', 17
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2 <= 0:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2) <= 0:
                                        mem[_3315 + ceil32(return_data.size) + 100] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[_3315 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_3315 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_3315 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[_3315 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_3315 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2)
                                        mem[_3315 + ceil32(return_data.size) + 132] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                        mem[_3315 + ceil32(return_data.size) + 164] = 160
                                        mem[_3315 + ceil32(return_data.size) + 260] = mem[_3315]
                                        idx = 0
                                        s = _3315 + 32
                                        t = _3315 + ceil32(return_data.size) + 292
                                        while idx < mem[_3315]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_3315 + ceil32(return_data.size) + 196] = this.address
                                        mem[_3315 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor4)
                                        call stor4.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _3315 + ceil32(return_data.size) + (32 * mem[_3315]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5721 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _5749 = mem[_5721]
                                        require mem[_5721] <= test266151307()
                                        require _5721 + mem[_5721] + 31 < _5721 + return_data.size
                                        _5782 = mem[_5721 + mem[_5721]]
                                        if mem[_5721 + mem[_5721]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _5721 + ceil32(return_data.size) + floor32(mem[_5721 + mem[_5721]]) + 1 > test266151307() or floor32(mem[_5721 + mem[_5721]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _5721 + ceil32(return_data.size) + floor32(mem[_5721 + mem[_5721]]) + 1
                                        mem[_5721 + ceil32(return_data.size)] = _5782
                                        require _5749 + (32 * _5782) + 32 <= return_data.size
                                        idx = 0
                                        s = _5721 + _5749 + 32
                                        t = _5721 + ceil32(return_data.size) + 32
                                        while idx < _5782:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8247 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8269 = mem[_8247]
                                        require mem[_8247] == mem[_8247]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8269
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _8269
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8269 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8269
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8269
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8494 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8494] == bool(mem[_8494])
                                        else:
                                            if mem[_8247] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_8247] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8269 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_8269 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8269 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8269 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8269 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8583 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8583] == bool(mem[_8583])
                                else:
                                    mem[_3315 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[_3315 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2
                                    mem[_3315 + ceil32(return_data.size) + 132] = ext_call.return_data[0] / 2
                                    mem[_3315 + ceil32(return_data.size) + 164] = 160
                                    mem[_3315 + ceil32(return_data.size) + 260] = mem[_3315]
                                    idx = 0
                                    s = _3315 + 32
                                    t = _3315 + ceil32(return_data.size) + 292
                                    while idx < mem[_3315]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[_3315 + ceil32(return_data.size) + 196] = this.address
                                    mem[_3315 + ceil32(return_data.size) + 228] = block.timestamp
                                    require ext_code.size(stor3)
                                    call stor3.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _3315 + ceil32(return_data.size) + (32 * mem[_3315]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5722 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5750 = mem[_5722]
                                    require mem[_5722] <= test266151307()
                                    require _5722 + mem[_5722] + 31 < _5722 + return_data.size
                                    _5783 = mem[_5722 + mem[_5722]]
                                    if mem[_5722 + mem[_5722]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5722 + ceil32(return_data.size) + floor32(mem[_5722 + mem[_5722]]) + 1 > test266151307() or floor32(mem[_5722 + mem[_5722]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5722 + ceil32(return_data.size) + floor32(mem[_5722 + mem[_5722]]) + 1
                                    mem[_5722 + ceil32(return_data.size)] = _5783
                                    require _5750 + (32 * _5783) + 32 <= return_data.size
                                    idx = 0
                                    s = _5722 + _5750 + 32
                                    t = _5722 + ceil32(return_data.size) + 32
                                    while idx < _5783:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2) <= 0:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8252 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8273 = mem[_8252]
                                        require mem[_8252] == mem[_8252]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8273
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _8273
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8273 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8273
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8273
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8511 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8511] == bool(mem[_8511])
                                        else:
                                            if mem[_8252] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_8252] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8273 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_8273 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8273 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8273 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8273 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8599 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8599] == bool(mem[_8599])
                                    else:
                                        _8188 = mem[64]
                                        mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3271 / 2)
                                        mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                        mem[mem[64] + 68] = 160
                                        _8248 = mem[_3315]
                                        mem[mem[64] + 164] = mem[_3315]
                                        idx = 0
                                        s = _3315 + 32
                                        t = mem[64] + 196
                                        while idx < _8248:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_8188 + 100] = this.address
                                        mem[_8188 + 132] = block.timestamp
                                        require ext_code.size(stor4)
                                        call stor4.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _8188 + (32 * _8248) + -mem[64] + 192]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9759 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9775 = mem[_9759]
                                        require mem[_9759] <= test266151307()
                                        require _9759 + mem[_9759] + 31 < _9759 + return_data.size
                                        _9793 = mem[_9759 + mem[_9759]]
                                        if mem[_9759 + mem[_9759]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _9759 + ceil32(return_data.size) + floor32(mem[_9759 + mem[_9759]]) + 1 > test266151307() or floor32(mem[_9759 + mem[_9759]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _9759 + ceil32(return_data.size) + floor32(mem[_9759 + mem[_9759]]) + 1
                                        mem[_9759 + ceil32(return_data.size)] = _9793
                                        require _9775 + (32 * _9793) + 32 <= return_data.size
                                        idx = 0
                                        s = _9759 + _9775 + 32
                                        t = _9759 + ceil32(return_data.size) + 32
                                        while idx < _9793:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10935 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _10943 = mem[_10935]
                                        require mem[_10935] == mem[_10935]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _10943
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _10943
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _10943 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _10943
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _10943
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11016 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_11016] == bool(mem[_11016])
                                        else:
                                            if mem[_10935] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_10935] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _10943 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_10943 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _10943 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _10943 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _10943 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11035 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_11035] == bool(mem[_11035])
        else:
            if mem[288] == 2:
                if ext_call.return_data[0] <= 0:
                    if 0 >= arg3.length:
                        revert with 'NH{q', 50
                    if 0 >= arg2.length:
                        revert with 'NH{q', 50
                    if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                        revert with 'NH{q', 17
                    require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = this.address
                    if stor5 == mem[172 len 20]:
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (5 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                        else:
                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                revert with memory
                                  from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                                   len ceil32(return_data.size) + 100
                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (5 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                        if not return_data.size:
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                                   len ceil32(return_data.size) + 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                               len ceil32(return_data.size) + 100
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                            return memory
                              from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len ceil32(return_data.size) + 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                           len ceil32(return_data.size) + 100
                    require ext_code.size(mem[172 len 20])
                    staticcall mem[172 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= ext_call.return_data[0]:
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                        else:
                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (5 * ceil32(return_data.size)) + 100
                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 != 1:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                            require ext_code.size(stor5)
                            call stor5.0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            call mem[268 len 20] with:
                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                 gas gas_remaining wei
                        if not return_data.size:
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (5 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                               len (5 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                            return memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len (5 * ceil32(return_data.size)) + 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                        revert with memory
                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                           len (5 * ceil32(return_data.size)) + 100
                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] < ext_call.return_data[0]:
                        revert with 'NH{q', 17
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 2
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704] = stor5
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 736] = mem[172 len 20]
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 772] = this.address
                    require ext_code.size(stor5)
                    staticcall stor5.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    if mem[320] == 1:
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                            else:
                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 100
                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                       len (13 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                            if not return_data.size:
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                   len (7 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                               len (7 * ceil32(return_data.size)) + 100
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                        idx = 0
                        s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                        t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                        while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                        require ext_code.size(stor3)
                        call stor3.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3193 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3211 = mem[_3193]
                        require mem[_3193] <= test266151307()
                        require _3193 + mem[_3193] + 31 < _3193 + return_data.size
                        _3234 = mem[_3193 + mem[_3193]]
                        if mem[_3193 + mem[_3193]] > test266151307():
                            revert with 'NH{q', 65
                        if _3193 + ceil32(return_data.size) + floor32(mem[_3193 + mem[_3193]]) + 1 > test266151307() or floor32(mem[_3193 + mem[_3193]]) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = _3193 + ceil32(return_data.size) + floor32(mem[_3193 + mem[_3193]]) + 1
                        mem[_3193 + ceil32(return_data.size)] = _3234
                        require _3211 + (32 * _3234) + 32 <= return_data.size
                        idx = 0
                        s = _3193 + _3211 + 32
                        t = _3193 + ceil32(return_data.size) + 32
                        while idx < _3234:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _5791 = mem[_5759]
                        require mem[_5759] == mem[_5759]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5791
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args _5791
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5791 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5791
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5791
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6203 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6203] == bool(mem[_6203])
                        else:
                            if mem[_5759] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 0, 'CANT_REPAY_LOAN'
                            if mem[_5759] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _5791 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args (_5791 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _5791 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _5791 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _5791 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6386 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6386] == bool(mem[_6386])
                    else:
                        if mem[320] == 2:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] wei
                                         gas gas_remaining wei
                                else:
                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 100
                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                if not return_data.size:
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                            while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                            require ext_code.size(stor4)
                            call stor4.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3192 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3210 = mem[_3192]
                            require mem[_3192] <= test266151307()
                            require _3192 + mem[_3192] + 31 < _3192 + return_data.size
                            _3233 = mem[_3192 + mem[_3192]]
                            if mem[_3192 + mem[_3192]] > test266151307():
                                revert with 'NH{q', 65
                            if _3192 + ceil32(return_data.size) + floor32(mem[_3192 + mem[_3192]]) + 1 > test266151307() or floor32(mem[_3192 + mem[_3192]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _3192 + ceil32(return_data.size) + floor32(mem[_3192 + mem[_3192]]) + 1
                            mem[_3192 + ceil32(return_data.size)] = _3233
                            require _3210 + (32 * _3233) + 32 <= return_data.size
                            idx = 0
                            s = _3192 + _3210 + 32
                            t = _3192 + ceil32(return_data.size) + 32
                            while idx < _3233:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5741 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5775 = mem[_5741]
                            require mem[_5741] == mem[_5741]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5775
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5775
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5775 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5775
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5775
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6170 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6170] == bool(mem[_6170])
                            else:
                                if mem[_5741] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5741] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5775 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5775 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5775 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5775 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5775 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6353 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6353] == bool(mem[_6353])
                        else:
                            require cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2:
                                revert with 'NH{q', 17
                            require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                            if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                revert with 'NH{q', 17
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= 0:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 != 1:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                               len (13 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[268 len 20] with:
                                           value ext_call.return_data[0] wei
                                             gas gas_remaining wei
                                    else:
                                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                            revert with memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                               len (7 * ceil32(return_data.size)) + 100
                                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 != 1:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                               len (13 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[268 len 20] with:
                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                    if not return_data.size:
                                        if ext_call.success:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                               len (7 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 100
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                                idx = 0
                                s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                                while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                                require ext_code.size(stor4)
                                call stor4.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3190 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3208 = mem[_3190]
                                require mem[_3190] <= test266151307()
                                require _3190 + mem[_3190] + 31 < _3190 + return_data.size
                                _3231 = mem[_3190 + mem[_3190]]
                                if mem[_3190 + mem[_3190]] > test266151307():
                                    revert with 'NH{q', 65
                                if _3190 + ceil32(return_data.size) + floor32(mem[_3190 + mem[_3190]]) + 1 > test266151307() or floor32(mem[_3190 + mem[_3190]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _3190 + ceil32(return_data.size) + floor32(mem[_3190 + mem[_3190]]) + 1
                                mem[_3190 + ceil32(return_data.size)] = _3231
                                require _3208 + (32 * _3231) + 32 <= return_data.size
                                idx = 0
                                s = _3190 + _3208 + 32
                                t = _3190 + ceil32(return_data.size) + 32
                                while idx < _3231:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5774 = mem[_5739]
                                require mem[_5739] == mem[_5739]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5774
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _5774
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5774 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5774
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5774
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6164 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6164] == bool(mem[_6164])
                                else:
                                    if mem[_5739] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_5739] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5774 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_5774 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5774 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5774 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5774 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6350 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6350] == bool(mem[_6350])
                            else:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] / 2
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                                idx = 0
                                s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                                while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                                require ext_code.size(stor3)
                                call stor3.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3191 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3209 = mem[_3191]
                                require mem[_3191] <= test266151307()
                                require _3191 + mem[_3191] + 31 < _3191 + return_data.size
                                _3232 = mem[_3191 + mem[_3191]]
                                if mem[_3191 + mem[_3191]] > test266151307():
                                    revert with 'NH{q', 65
                                if _3191 + ceil32(return_data.size) + floor32(mem[_3191 + mem[_3191]]) + 1 > test266151307() or floor32(mem[_3191 + mem[_3191]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _3191 + ceil32(return_data.size) + floor32(mem[_3191 + mem[_3191]]) + 1
                                mem[_3191 + ceil32(return_data.size)] = _3232
                                require _3209 + (32 * _3232) + 32 <= return_data.size
                                idx = 0
                                s = _3191 + _3209 + 32
                                t = _3191 + ceil32(return_data.size) + 32
                                while idx < _3232:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5758 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5790 = mem[_5758]
                                    require mem[_5758] == mem[_5758]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _5790
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args _5790
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _5790 wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _5790
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _5790
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6200 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_6200] == bool(mem[_6200])
                                    else:
                                        if mem[_5758] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if mem[_5758] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _5790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (_5790 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _5790 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _5790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _5790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6382 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_6382] == bool(mem[_6382])
                                else:
                                    _5683 = mem[64]
                                    mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                    mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                    mem[mem[64] + 68] = 160
                                    _5740 = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                    mem[mem[64] + 164] = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                    idx = 0
                                    s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                    t = mem[64] + 196
                                    while idx < _5740:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[_5683 + 100] = this.address
                                    mem[_5683 + 132] = block.timestamp
                                    require ext_code.size(stor4)
                                    call stor4.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _5683 + (32 * _5740) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8221 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _8242 = mem[_8221]
                                    require mem[_8221] <= test266151307()
                                    require _8221 + mem[_8221] + 31 < _8221 + return_data.size
                                    _8265 = mem[_8221 + mem[_8221]]
                                    if mem[_8221 + mem[_8221]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _8221 + ceil32(return_data.size) + floor32(mem[_8221 + mem[_8221]]) + 1 > test266151307() or floor32(mem[_8221 + mem[_8221]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _8221 + ceil32(return_data.size) + floor32(mem[_8221 + mem[_8221]]) + 1
                                    mem[_8221 + ceil32(return_data.size)] = _8265
                                    require _8242 + (32 * _8265) + 32 <= return_data.size
                                    idx = 0
                                    s = _8221 + _8242 + 32
                                    t = _8221 + ceil32(return_data.size) + 32
                                    while idx < _8265:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9772 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _9790 = mem[_9772]
                                    require mem[_9772] == mem[_9772]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _9790
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args _9790
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _9790 wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _9790
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _9790
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _10043 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_10043] == bool(mem[_10043])
                                    else:
                                        if mem[_9772] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if mem[_9772] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _9790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (_9790 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _9790 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _9790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _9790 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _10168 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_10168] == bool(mem[_10168])
                else:
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = ext_call.return_data[0]
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 708] = 0
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 740] = 160
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 836] = 2
                    idx = 0
                    s = ceil32(arg5.length) + ceil32(return_data.size) + 608
                    t = ceil32(arg5.length) + ceil32(return_data.size) + 868
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 772] = this.address
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 804] = block.timestamp
                    require ext_code.size(stor4)
                    call stor4.swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0], 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(arg5.length) + ceil32(return_data.size) + 868 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                    require return_data.size >= 32
                    _149 = mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28]
                    require mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 703 < ceil32(arg5.length) + ceil32(return_data.size) + return_data.size + 672
                    _160 = mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]
                    if mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672] > test266151307():
                        revert with 'NH{q', 65
                    if ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], ext_call.return_data[0 len 28] + 672]) + 673
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = _160
                    require _149 + (32 * _160) + 32 <= return_data.size
                    idx = 0
                    s = ceil32(arg5.length) + ceil32(return_data.size) + _149 + 704
                    t = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                    while idx < _160:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    if 0 >= arg3.length:
                        revert with 'NH{q', 50
                    if 0 >= arg2.length:
                        revert with 'NH{q', 50
                    if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                        revert with 'NH{q', 17
                    require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                    if stor5 == mem[ceil32(arg5.length) + 396 len 20]:
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3264 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3268 = mem[_3264]
                        require mem[_3264] == mem[_3264]
                        if 0 >= arg1.length:
                            revert with 'NH{q', 50
                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                        if stor5 != address(cd[(arg1 + 36)]):
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3268
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args _3268
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _3268 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _3268
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _3268
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3445 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_3445] == bool(mem[_3445])
                        else:
                            if mem[_3264] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 0, 'CANT_REPAY_LOAN'
                            if mem[_3264] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                revert with 'NH{q', 17
                            if stor6 == 1:
                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _3268 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args (_3268 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                   value _3268 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 'TRANSFER_FAILED'
                            else:
                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                mem[mem[64] + 36] = _3268 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0xa9059cbb with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4], _3268 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3567 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_3567] == bool(mem[_3567])
                    else:
                        _3218 = mem[172 len 20]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_3218))
                        staticcall address(_3218).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3269 = mem[_3265]
                        require mem[_3265] == mem[_3265]
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= mem[_3265]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3332 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3373 = mem[_3332]
                            require mem[_3332] == mem[_3332]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _3373
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _3373
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _3373 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _3373
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _3373
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3823 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3823] == bool(mem[_3823])
                            else:
                                if mem[_3332] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_3332] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _3373 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_3373 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _3373 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _3373 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _3373 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4050 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_4050] == bool(mem[_4050])
                        else:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] < mem[_3265]:
                                revert with 'NH{q', 17
                            _3313 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            mem[_3313 + 32 len 64] = call.data[calldata.size len 64]
                            if 0 >= mem[_3313]:
                                revert with 'NH{q', 50
                            mem[_3313 + 32] = stor5
                            if 1 >= mem[_3313]:
                                revert with 'NH{q', 50
                            mem[_3313 + 64] = mem[ceil32(arg5.length) + 396 len 20]
                            mem[_3313 + 100] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_3313 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _3313 + ceil32(return_data.size) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if mem[ceil32(arg5.length) + 544] == 1:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 <= 0:
                                    mem[_3313 + ceil32(return_data.size) + 100] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[_3313 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 != 1:
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value ext_call.return_data[0] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 != 1:
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[_3313 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[_3313 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269
                                    mem[_3313 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                    mem[_3313 + ceil32(return_data.size) + 164] = 160
                                    mem[_3313 + ceil32(return_data.size) + 260] = mem[_3313]
                                    idx = 0
                                    s = _3313 + 32
                                    t = _3313 + ceil32(return_data.size) + 292
                                    while idx < mem[_3313]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[_3313 + ceil32(return_data.size) + 196] = this.address
                                    mem[_3313 + ceil32(return_data.size) + 228] = block.timestamp
                                    require ext_code.size(stor3)
                                    call stor3.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _3313 + ceil32(return_data.size) + (32 * mem[_3313]) + -mem[64] + 288]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5718 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5745 = mem[_5718]
                                    require mem[_5718] <= test266151307()
                                    require _5718 + mem[_5718] + 31 < _5718 + return_data.size
                                    _5779 = mem[_5718 + mem[_5718]]
                                    if mem[_5718 + mem[_5718]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _5718 + ceil32(return_data.size) + floor32(mem[_5718 + mem[_5718]]) + 1 > test266151307() or floor32(mem[_5718 + mem[_5718]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _5718 + ceil32(return_data.size) + floor32(mem[_5718 + mem[_5718]]) + 1
                                    mem[_5718 + ceil32(return_data.size)] = _5779
                                    require _5745 + (32 * _5779) + 32 <= return_data.size
                                    idx = 0
                                    s = _5718 + _5745 + 32
                                    t = _5718 + ceil32(return_data.size) + 32
                                    while idx < _5779:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8251 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _8272 = mem[_8251]
                                    require mem[_8251] == mem[_8251]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _8272
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args _8272
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _8272 wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _8272
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _8272
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8508 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_8508] == bool(mem[_8508])
                                    else:
                                        if mem[_8251] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if mem[_8251] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _8272 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (_8272 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _8272 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _8272 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _8272 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8595 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_8595] == bool(mem[_8595])
                            else:
                                if mem[ceil32(arg5.length) + 544] == 2:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 <= 0:
                                        mem[_3313 + ceil32(return_data.size) + 100] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[_3313 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[_3313 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_3313 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269
                                        mem[_3313 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                        mem[_3313 + ceil32(return_data.size) + 164] = 160
                                        mem[_3313 + ceil32(return_data.size) + 260] = mem[_3313]
                                        idx = 0
                                        s = _3313 + 32
                                        t = _3313 + ceil32(return_data.size) + 292
                                        while idx < mem[_3313]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_3313 + ceil32(return_data.size) + 196] = this.address
                                        mem[_3313 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor4)
                                        call stor4.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _3313 + ceil32(return_data.size) + (32 * mem[_3313]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5717 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _5744 = mem[_5717]
                                        require mem[_5717] <= test266151307()
                                        require _5717 + mem[_5717] + 31 < _5717 + return_data.size
                                        _5778 = mem[_5717 + mem[_5717]]
                                        if mem[_5717 + mem[_5717]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _5717 + ceil32(return_data.size) + floor32(mem[_5717 + mem[_5717]]) + 1 > test266151307() or floor32(mem[_5717 + mem[_5717]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _5717 + ceil32(return_data.size) + floor32(mem[_5717 + mem[_5717]]) + 1
                                        mem[_5717 + ceil32(return_data.size)] = _5778
                                        require _5744 + (32 * _5778) + 32 <= return_data.size
                                        idx = 0
                                        s = _5717 + _5744 + 32
                                        t = _5717 + ceil32(return_data.size) + 32
                                        while idx < _5778:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8245 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8267 = mem[_8245]
                                        require mem[_8245] == mem[_8245]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8267
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _8267
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8267 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8267
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8267
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8489 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8489] == bool(mem[_8489])
                                        else:
                                            if mem[_8245] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_8245] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _8267 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_8267 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _8267 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _8267 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _8267 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8580 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_8580] == bool(mem[_8580])
                                else:
                                    require cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 < cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2:
                                        revert with 'NH{q', 17
                                    require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                    if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                        revert with 'NH{q', 17
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2 <= 0:
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2) <= 0:
                                            mem[_3313 + ceil32(return_data.size) + 100] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[_3313 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_3313 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_3313 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[_3313 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_3313 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2)
                                            mem[_3313 + ceil32(return_data.size) + 132] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                            mem[_3313 + ceil32(return_data.size) + 164] = 160
                                            mem[_3313 + ceil32(return_data.size) + 260] = mem[_3313]
                                            idx = 0
                                            s = _3313 + 32
                                            t = _3313 + ceil32(return_data.size) + 292
                                            while idx < mem[_3313]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_3313 + ceil32(return_data.size) + 196] = this.address
                                            mem[_3313 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor4)
                                            call stor4.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _3313 + ceil32(return_data.size) + (32 * mem[_3313]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _5715 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _5742 = mem[_5715]
                                            require mem[_5715] <= test266151307()
                                            require _5715 + mem[_5715] + 31 < _5715 + return_data.size
                                            _5776 = mem[_5715 + mem[_5715]]
                                            if mem[_5715 + mem[_5715]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _5715 + ceil32(return_data.size) + floor32(mem[_5715 + mem[_5715]]) + 1 > test266151307() or floor32(mem[_5715 + mem[_5715]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _5715 + ceil32(return_data.size) + floor32(mem[_5715 + mem[_5715]]) + 1
                                            mem[_5715 + ceil32(return_data.size)] = _5776
                                            require _5742 + (32 * _5776) + 32 <= return_data.size
                                            idx = 0
                                            s = _5715 + _5742 + 32
                                            t = _5715 + ceil32(return_data.size) + 32
                                            while idx < _5776:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8243 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8266 = mem[_8243]
                                            require mem[_8243] == mem[_8243]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _8266
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _8266
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _8266 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _8266
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _8266
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _8483 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_8483] == bool(mem[_8483])
                                            else:
                                                if mem[_8243] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_8243] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _8266 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_8266 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _8266 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _8266 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _8266 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _8577 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_8577] == bool(mem[_8577])
                                    else:
                                        mem[_3313 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_3313 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2
                                        mem[_3313 + ceil32(return_data.size) + 132] = ext_call.return_data[0] / 2
                                        mem[_3313 + ceil32(return_data.size) + 164] = 160
                                        mem[_3313 + ceil32(return_data.size) + 260] = mem[_3313]
                                        idx = 0
                                        s = _3313 + 32
                                        t = _3313 + ceil32(return_data.size) + 292
                                        while idx < mem[_3313]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_3313 + ceil32(return_data.size) + 196] = this.address
                                        mem[_3313 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor3)
                                        call stor3.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _3313 + ceil32(return_data.size) + (32 * mem[_3313]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5716 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _5743 = mem[_5716]
                                        require mem[_5716] <= test266151307()
                                        require _5716 + mem[_5716] + 31 < _5716 + return_data.size
                                        _5777 = mem[_5716 + mem[_5716]]
                                        if mem[_5716 + mem[_5716]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _5716 + ceil32(return_data.size) + floor32(mem[_5716 + mem[_5716]]) + 1 > test266151307() or floor32(mem[_5716 + mem[_5716]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _5716 + ceil32(return_data.size) + floor32(mem[_5716 + mem[_5716]]) + 1
                                        mem[_5716 + ceil32(return_data.size)] = _5777
                                        require _5743 + (32 * _5777) + 32 <= return_data.size
                                        idx = 0
                                        s = _5716 + _5743 + 32
                                        t = _5716 + ceil32(return_data.size) + 32
                                        while idx < _5777:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2) <= 0:
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8250 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8271 = mem[_8250]
                                            require mem[_8250] == mem[_8250]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _8271
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _8271
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _8271 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _8271
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _8271
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _8505 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_8505] == bool(mem[_8505])
                                            else:
                                                if mem[_8250] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_8250] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _8271 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_8271 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _8271 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _8271 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _8271 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _8591 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_8591] == bool(mem[_8591])
                                        else:
                                            _8187 = mem[64]
                                            mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _3269 / 2)
                                            mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                            mem[mem[64] + 68] = 160
                                            _8244 = mem[_3313]
                                            mem[mem[64] + 164] = mem[_3313]
                                            idx = 0
                                            s = _3313 + 32
                                            t = mem[64] + 196
                                            while idx < _8244:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_8187 + 100] = this.address
                                            mem[_8187 + 132] = block.timestamp
                                            require ext_code.size(stor4)
                                            call stor4.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _8187 + (32 * _8244) + -mem[64] + 192]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _9757 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _9773 = mem[_9757]
                                            require mem[_9757] <= test266151307()
                                            require _9757 + mem[_9757] + 31 < _9757 + return_data.size
                                            _9791 = mem[_9757 + mem[_9757]]
                                            if mem[_9757 + mem[_9757]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _9757 + ceil32(return_data.size) + floor32(mem[_9757 + mem[_9757]]) + 1 > test266151307() or floor32(mem[_9757 + mem[_9757]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _9757 + ceil32(return_data.size) + floor32(mem[_9757 + mem[_9757]]) + 1
                                            mem[_9757 + ceil32(return_data.size)] = _9791
                                            require _9773 + (32 * _9791) + 32 <= return_data.size
                                            idx = 0
                                            s = _9757 + _9773 + 32
                                            t = _9757 + ceil32(return_data.size) + 32
                                            while idx < _9791:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _10934 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _10942 = mem[_10934]
                                            require mem[_10934] == mem[_10934]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _10942
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _10942
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _10942 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _10942
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _10942
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _11013 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_11013] == bool(mem[_11013])
                                            else:
                                                if mem[_10934] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_10934] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _10942 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_10942 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _10942 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _10942 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _10942 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _11033 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_11033] == bool(mem[_11033])
            else:
                require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                    revert with 'NH{q', 17
                if ext_call.return_data[0] / 2 <= 0:
                    if ext_call.return_data[0] - (ext_call.return_data[0] / 2) <= 0:
                        if 0 >= arg3.length:
                            revert with 'NH{q', 50
                        if 0 >= arg2.length:
                            revert with 'NH{q', 50
                        if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                            revert with 'NH{q', 17
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = this.address
                        if stor5 == mem[172 len 20]:
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (5 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                            else:
                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                    revert with memory
                                      from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                                       len ceil32(return_data.size) + 100
                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 64]
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (5 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                            if not return_data.size:
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                                       len ceil32(return_data.size) + 32
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                                   len ceil32(return_data.size) + 100
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                                return memory
                                  from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                                   len ceil32(return_data.size) + 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len ceil32(return_data.size) + 100
                        require ext_code.size(mem[172 len 20])
                        staticcall mem[172 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= ext_call.return_data[0]:
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 676 len ceil32(return_data.size) + 32]
                            mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                            else:
                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'CANT_REPAY_LOAN'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (5 * ceil32(return_data.size)) + 100
                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 != 1:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = mem[268 len 20]
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    return 1, mem[ceil32(arg5.length) + (6 * ceil32(return_data.size)) + 704 len 9 * ceil32(return_data.size)]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                require ext_code.size(stor5)
                                call stor5.0x2e1a7d4d with:
                                     gas gas_remaining wei
                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                call mem[268 len 20] with:
                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                     gas gas_remaining wei
                            if not return_data.size:
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                       len (5 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 676] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 708] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 740] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 672
                                   len (5 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 704 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 1
                                return memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                                   len (5 * ceil32(return_data.size)) + 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 677] = 32
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 709] = 15
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 741] = 'TRANSFER_FAILED'
                            revert with memory
                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 673
                               len (5 * ceil32(return_data.size)) + 100
                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] < ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = 2
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704] = stor5
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 736] = mem[172 len 20]
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 772] = this.address
                        require ext_code.size(stor5)
                        staticcall stor5.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if mem[320] == 1:
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] wei
                                         gas gas_remaining wei
                                else:
                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 100
                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 != 1:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                           len (13 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[268 len 20] with:
                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                if not return_data.size:
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                    return memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                       len (7 * ceil32(return_data.size)) + 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                revert with memory
                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                   len (7 * ceil32(return_data.size)) + 100
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                            idx = 0
                            s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                            t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                            while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                            require ext_code.size(stor3)
                            call stor3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3187 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _3205 = mem[_3187]
                            require mem[_3187] <= test266151307()
                            require _3187 + mem[_3187] + 31 < _3187 + return_data.size
                            _3228 = mem[_3187 + mem[_3187]]
                            if mem[_3187 + mem[_3187]] > test266151307():
                                revert with 'NH{q', 65
                            if _3187 + ceil32(return_data.size) + floor32(mem[_3187 + mem[_3187]]) + 1 > test266151307() or floor32(mem[_3187 + mem[_3187]]) + 1 < 0:
                                revert with 'NH{q', 65
                            mem[64] = _3187 + ceil32(return_data.size) + floor32(mem[_3187 + mem[_3187]]) + 1
                            mem[_3187 + ceil32(return_data.size)] = _3228
                            require _3205 + (32 * _3228) + 32 <= return_data.size
                            idx = 0
                            s = _3187 + _3205 + 32
                            t = _3187 + ceil32(return_data.size) + 32
                            while idx < _3228:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5756 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5789 = mem[_5756]
                            require mem[_5756] == mem[_5756]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5789
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5789
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5789 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5789
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5789
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6195 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6195] == bool(mem[_6195])
                            else:
                                if mem[_5756] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5756] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5789 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5789 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6376 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6376] == bool(mem[_6376])
                        else:
                            if mem[320] == 2:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] <= 0:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[0]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 != 1:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                               len (13 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[268 len 20] with:
                                           value ext_call.return_data[0] wei
                                             gas gas_remaining wei
                                    else:
                                        if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                            revert with memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                               len (7 * ceil32(return_data.size)) + 100
                                        if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 != 1:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                               len (13 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[268 len 20] with:
                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                    if not return_data.size:
                                        if ext_call.success:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                            return memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                               len (7 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                           len (7 * ceil32(return_data.size)) + 100
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                        return memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                           len (7 * ceil32(return_data.size)) + 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                    revert with memory
                                      from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                       len (7 * ceil32(return_data.size)) + 100
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                                idx = 0
                                s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                                while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                                require ext_code.size(stor4)
                                call stor4.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3186 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _3204 = mem[_3186]
                                require mem[_3186] <= test266151307()
                                require _3186 + mem[_3186] + 31 < _3186 + return_data.size
                                _3227 = mem[_3186 + mem[_3186]]
                                if mem[_3186 + mem[_3186]] > test266151307():
                                    revert with 'NH{q', 65
                                if _3186 + ceil32(return_data.size) + floor32(mem[_3186 + mem[_3186]]) + 1 > test266151307() or floor32(mem[_3186 + mem[_3186]]) + 1 < 0:
                                    revert with 'NH{q', 65
                                mem[64] = _3186 + ceil32(return_data.size) + floor32(mem[_3186 + mem[_3186]]) + 1
                                mem[_3186 + ceil32(return_data.size)] = _3227
                                require _3204 + (32 * _3227) + 32 <= return_data.size
                                idx = 0
                                s = _3186 + _3204 + 32
                                t = _3186 + ceil32(return_data.size) + 32
                                while idx < _3227:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _5770 = mem[_5738]
                                require mem[_5738] == mem[_5738]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5770
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _5770
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5770 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5770
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5770
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6157 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6157] == bool(mem[_6157])
                                else:
                                    if mem[_5738] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_5738] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _5770 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_5770 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _5770 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _5770 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _5770 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6346 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6346] == bool(mem[_6346])
                            else:
                                require cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0]
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2:
                                    revert with 'NH{q', 17
                                require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                    revert with 'NH{q', 17
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2 <= 0:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (5 * ceil32(return_data.size)) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                                return memory
                                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                                   len (13 * ceil32(return_data.size)) + 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[268 len 20] with:
                                               value ext_call.return_data[0] wei
                                                 gas gas_remaining wei
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'CANT_REPAY_LOAN'
                                                revert with memory
                                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                                   len (7 * ceil32(return_data.size)) + 100
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = mem[268 len 20]
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 64]
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                mem[ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768] = 1
                                                return memory
                                                  from ceil32(arg5.length) + (8 * ceil32(return_data.size)) + 768
                                                   len (13 * ceil32(return_data.size)) + 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772 len (7 * ceil32(return_data.size)) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[268 len 20] with:
                                               value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                        if not return_data.size:
                                            if ext_call.success:
                                                mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 1
                                                return memory
                                                  from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                                   len (7 * ceil32(return_data.size)) + 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = 32
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = 15
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 'TRANSFER_FAILED'
                                            revert with memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768
                                               len (7 * ceil32(return_data.size)) + 100
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 800 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 1
                                            return memory
                                              from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                               len (7 * ceil32(return_data.size)) + 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 773] = 32
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 805] = 15
                                        mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 837] = 'TRANSFER_FAILED'
                                        revert with memory
                                          from ceil32(arg5.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 769
                                           len (7 * ceil32(return_data.size)) + 100
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                                    idx = 0
                                    s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                    t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                                    while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                                    require ext_code.size(stor4)
                                    call stor4.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3184 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3202 = mem[_3184]
                                    require mem[_3184] <= test266151307()
                                    require _3184 + mem[_3184] + 31 < _3184 + return_data.size
                                    _3225 = mem[_3184 + mem[_3184]]
                                    if mem[_3184 + mem[_3184]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3184 + ceil32(return_data.size) + floor32(mem[_3184 + mem[_3184]]) + 1 > test266151307() or floor32(mem[_3184 + mem[_3184]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3184 + ceil32(return_data.size) + floor32(mem[_3184 + mem[_3184]]) + 1
                                    mem[_3184 + ceil32(return_data.size)] = _3225
                                    require _3202 + (32 * _3225) + 32 <= return_data.size
                                    idx = 0
                                    s = _3184 + _3202 + 32
                                    t = _3184 + ceil32(return_data.size) + 32
                                    while idx < _3225:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(stor5)
                                    staticcall stor5.0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _5736 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _5769 = mem[_5736]
                                    require mem[_5736] == mem[_5736]
                                    if 0 >= arg1.length:
                                        revert with 'NH{q', 50
                                    require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                    if stor5 != address(cd[(arg1 + 36)]):
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _5769
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args _5769
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _5769 wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _5769
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _5769
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6151 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_6151] == bool(mem[_6151])
                                    else:
                                        if mem[_5736] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 0, 'CANT_REPAY_LOAN'
                                        if mem[_5736] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                            revert with 'NH{q', 17
                                        if stor6 == 1:
                                            mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = _5769 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0x2e1a7d4d with:
                                                 gas gas_remaining wei
                                                args (_5769 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            call mem[ceil32(arg5.length) + 492 len 20] with:
                                               value _5769 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                 gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                            mem[mem[64] + 36] = _5769 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            require ext_code.size(stor5)
                                            call stor5.0xa9059cbb with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4], _5769 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _6343 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_6343] == bool(mem[_6343])
                                else:
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 768] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 772] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 804] = ext_call.return_data[0] / 2
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 836] = 160
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 932] = 2
                                    idx = 0
                                    s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                    t = ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 964
                                    while idx < mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]:
                                        mem[t] = mem[s + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 868] = this.address
                                    mem[ceil32(arg5.length) + (4 * ceil32(return_data.size)) + 900] = block.timestamp
                                    require ext_code.size(stor3)
                                    call stor3.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len ceil32(arg5.length) + (4 * ceil32(return_data.size)) + -mem[64] + 1024]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3185 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _3203 = mem[_3185]
                                    require mem[_3185] <= test266151307()
                                    require _3185 + mem[_3185] + 31 < _3185 + return_data.size
                                    _3226 = mem[_3185 + mem[_3185]]
                                    if mem[_3185 + mem[_3185]] > test266151307():
                                        revert with 'NH{q', 65
                                    if _3185 + ceil32(return_data.size) + floor32(mem[_3185 + mem[_3185]]) + 1 > test266151307() or floor32(mem[_3185 + mem[_3185]]) + 1 < 0:
                                        revert with 'NH{q', 65
                                    mem[64] = _3185 + ceil32(return_data.size) + floor32(mem[_3185 + mem[_3185]]) + 1
                                    mem[_3185 + ceil32(return_data.size)] = _3226
                                    require _3203 + (32 * _3226) + 32 <= return_data.size
                                    idx = 0
                                    s = _3185 + _3203 + 32
                                    t = _3185 + ceil32(return_data.size) + 32
                                    while idx < _3226:
                                        require mem[s] == mem[s]
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2) <= 0:
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _5755 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _5788 = mem[_5755]
                                        require mem[_5755] == mem[_5755]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _5788
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _5788
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _5788 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _5788
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _5788
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _6192 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_6192] == bool(mem[_6192])
                                        else:
                                            if mem[_5755] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_5755] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _5788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_5788 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _5788 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _5788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _5788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _6372 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_6372] == bool(mem[_6372])
                                    else:
                                        _5681 = mem[64]
                                        mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - ext_call.return_data[0] / 2)
                                        mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                        mem[mem[64] + 68] = 160
                                        _5737 = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                        mem[mem[64] + 164] = mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672]
                                        idx = 0
                                        s = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                                        t = mem[64] + 196
                                        while idx < _5737:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_5681 + 100] = this.address
                                        mem[_5681 + 132] = block.timestamp
                                        require ext_code.size(stor4)
                                        call stor4.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _5681 + (32 * _5737) + -mem[64] + 192]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8211 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8232 = mem[_8211]
                                        require mem[_8211] <= test266151307()
                                        require _8211 + mem[_8211] + 31 < _8211 + return_data.size
                                        _8255 = mem[_8211 + mem[_8211]]
                                        if mem[_8211 + mem[_8211]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _8211 + ceil32(return_data.size) + floor32(mem[_8211 + mem[_8211]]) + 1 > test266151307() or floor32(mem[_8211 + mem[_8211]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _8211 + ceil32(return_data.size) + floor32(mem[_8211 + mem[_8211]]) + 1
                                        mem[_8211 + ceil32(return_data.size)] = _8255
                                        require _8232 + (32 * _8255) + 32 <= return_data.size
                                        idx = 0
                                        s = _8211 + _8232 + 32
                                        t = _8211 + ceil32(return_data.size) + 32
                                        while idx < _8255:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9765 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9785 = mem[_9765]
                                        require mem[_9765] == mem[_9765]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9785
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _9785
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9785 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9785
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9785
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10016 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10016] == bool(mem[_10016])
                                        else:
                                            if mem[_9765] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_9765] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9785 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_9785 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9785 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9785 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9785 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10153 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10153] == bool(mem[_10153])
                    else:
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 708] = 0
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 740] = 160
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 836] = 2
                        idx = 0
                        s = ceil32(arg5.length) + ceil32(return_data.size) + 608
                        t = ceil32(arg5.length) + ceil32(return_data.size) + 868
                        while idx < 2:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 772] = this.address
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 804] = block.timestamp
                        require ext_code.size(stor4)
                        call stor4.swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0] - (ext_call.return_data[0] / 2), 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(arg5.length) + ceil32(return_data.size) + 868 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                        require return_data.size >= 32
                        _3206 = mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32
                        require mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 <= test266151307()
                        require ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 703 < ceil32(arg5.length) + ceil32(return_data.size) + return_data.size + 672
                        _3229 = mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 672]
                        if mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 672] > test266151307():
                            revert with 'NH{q', 65
                        if ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 672]) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0] - (ext_call.return_data[0] / 2)) >> 32 + 672]) + 673
                        mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = _3229
                        require _3206 + (32 * _3229) + 32 <= return_data.size
                        idx = 0
                        s = ceil32(arg5.length) + ceil32(return_data.size) + _3206 + 704
                        t = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                        while idx < _3229:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        if 0 >= arg3.length:
                            revert with 'NH{q', 50
                        if 0 >= arg2.length:
                            revert with 'NH{q', 50
                        if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                            revert with 'NH{q', 17
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                        if stor5 == mem[ceil32(arg5.length) + 396 len 20]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5811 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5815 = mem[_5811]
                            require mem[_5811] == mem[_5811]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5815
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5815
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5815 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5815
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5815
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6473 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6473] == bool(mem[_6473])
                            else:
                                if mem[_5811] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5811] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5815 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5815 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5815 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5815 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5815 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6715 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6715] == bool(mem[_6715])
                        else:
                            _5763 = mem[172 len 20]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_5763))
                            staticcall address(_5763).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5812 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5816 = mem[_5812]
                            require mem[_5812] == mem[_5812]
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= mem[_5812]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5992 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6076 = mem[_5992]
                                require mem[_5992] == mem[_5992]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _6076
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _6076
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _6076 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _6076
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _6076
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6900 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6900] == bool(mem[_6900])
                                else:
                                    if mem[_5992] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_5992] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _6076 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_6076 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _6076 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _6076 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _6076 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7037 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7037] == bool(mem[_7037])
                            else:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] < mem[_5812]:
                                    revert with 'NH{q', 17
                                _5927 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                mem[_5927 + 32 len 64] = call.data[calldata.size len 64]
                                if 0 >= mem[_5927]:
                                    revert with 'NH{q', 50
                                mem[_5927 + 32] = stor5
                                if 1 >= mem[_5927]:
                                    revert with 'NH{q', 50
                                mem[_5927 + 64] = mem[ceil32(arg5.length) + 396 len 20]
                                mem[_5927 + 100] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_5927 + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5927 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if mem[ceil32(arg5.length) + 544] == 1:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 <= 0:
                                        mem[_5927 + ceil32(return_data.size) + 100] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[_5927 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[_5927 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_5927 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816
                                        mem[_5927 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                        mem[_5927 + ceil32(return_data.size) + 164] = 160
                                        mem[_5927 + ceil32(return_data.size) + 260] = mem[_5927]
                                        idx = 0
                                        s = _5927 + 32
                                        t = _5927 + ceil32(return_data.size) + 292
                                        while idx < mem[_5927]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_5927 + ceil32(return_data.size) + 196] = this.address
                                        mem[_5927 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor3)
                                        call stor3.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _5927 + ceil32(return_data.size) + (32 * mem[_5927]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8215 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8236 = mem[_8215]
                                        require mem[_8215] <= test266151307()
                                        require _8215 + mem[_8215] + 31 < _8215 + return_data.size
                                        _8259 = mem[_8215 + mem[_8215]]
                                        if mem[_8215 + mem[_8215]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _8215 + ceil32(return_data.size) + floor32(mem[_8215 + mem[_8215]]) + 1 > test266151307() or floor32(mem[_8215 + mem[_8215]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _8215 + ceil32(return_data.size) + floor32(mem[_8215 + mem[_8215]]) + 1
                                        mem[_8215 + ceil32(return_data.size)] = _8259
                                        require _8236 + (32 * _8259) + 32 <= return_data.size
                                        idx = 0
                                        s = _8215 + _8236 + 32
                                        t = _8215 + ceil32(return_data.size) + 32
                                        while idx < _8259:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9777 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9795 = mem[_9777]
                                        require mem[_9777] == mem[_9777]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9795
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _9795
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9795 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9795
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9795
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10052 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10052] == bool(mem[_10052])
                                        else:
                                            if mem[_9777] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_9777] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9795 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_9795 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9795 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9795 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9795 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10182 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10182] == bool(mem[_10182])
                                else:
                                    if mem[ceil32(arg5.length) + 544] == 2:
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 <= 0:
                                            mem[_5927 + ceil32(return_data.size) + 100] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[_5927 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[_5927 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_5927 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816
                                            mem[_5927 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                            mem[_5927 + ceil32(return_data.size) + 164] = 160
                                            mem[_5927 + ceil32(return_data.size) + 260] = mem[_5927]
                                            idx = 0
                                            s = _5927 + 32
                                            t = _5927 + ceil32(return_data.size) + 292
                                            while idx < mem[_5927]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_5927 + ceil32(return_data.size) + 196] = this.address
                                            mem[_5927 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor4)
                                            call stor4.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _5927 + ceil32(return_data.size) + (32 * mem[_5927]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8214 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8235 = mem[_8214]
                                            require mem[_8214] <= test266151307()
                                            require _8214 + mem[_8214] + 31 < _8214 + return_data.size
                                            _8258 = mem[_8214 + mem[_8214]]
                                            if mem[_8214 + mem[_8214]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _8214 + ceil32(return_data.size) + floor32(mem[_8214 + mem[_8214]]) + 1 > test266151307() or floor32(mem[_8214 + mem[_8214]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _8214 + ceil32(return_data.size) + floor32(mem[_8214 + mem[_8214]]) + 1
                                            mem[_8214 + ceil32(return_data.size)] = _8258
                                            require _8235 + (32 * _8258) + 32 <= return_data.size
                                            idx = 0
                                            s = _8214 + _8235 + 32
                                            t = _8214 + ceil32(return_data.size) + 32
                                            while idx < _8258:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _9768 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _9787 = mem[_9768]
                                            require mem[_9768] == mem[_9768]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _9787
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _9787
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _9787 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _9787
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _9787
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _10025 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_10025] == bool(mem[_10025])
                                            else:
                                                if mem[_9768] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_9768] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _9787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_9787 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _9787 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _9787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _9787 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _10158 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_10158] == bool(mem[_10158])
                                    else:
                                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 < cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2:
                                            revert with 'NH{q', 17
                                        require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                        if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                            revert with 'NH{q', 17
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2 <= 0:
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2) <= 0:
                                                mem[_5927 + ceil32(return_data.size) + 100] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[_5927 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_5927 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_5927 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[_5927 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[_5927 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2)
                                                mem[_5927 + ceil32(return_data.size) + 132] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[_5927 + ceil32(return_data.size) + 164] = 160
                                                mem[_5927 + ceil32(return_data.size) + 260] = mem[_5927]
                                                idx = 0
                                                s = _5927 + 32
                                                t = _5927 + ceil32(return_data.size) + 292
                                                while idx < mem[_5927]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_5927 + ceil32(return_data.size) + 196] = this.address
                                                mem[_5927 + ceil32(return_data.size) + 228] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _5927 + ceil32(return_data.size) + (32 * mem[_5927]) + -mem[64] + 288]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8212 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _8233 = mem[_8212]
                                                require mem[_8212] <= test266151307()
                                                require _8212 + mem[_8212] + 31 < _8212 + return_data.size
                                                _8256 = mem[_8212 + mem[_8212]]
                                                if mem[_8212 + mem[_8212]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _8212 + ceil32(return_data.size) + floor32(mem[_8212 + mem[_8212]]) + 1 > test266151307() or floor32(mem[_8212 + mem[_8212]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _8212 + ceil32(return_data.size) + floor32(mem[_8212 + mem[_8212]]) + 1
                                                mem[_8212 + ceil32(return_data.size)] = _8256
                                                require _8233 + (32 * _8256) + 32 <= return_data.size
                                                idx = 0
                                                s = _8212 + _8233 + 32
                                                t = _8212 + ceil32(return_data.size) + 32
                                                while idx < _8256:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _9766 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _9786 = mem[_9766]
                                                require mem[_9766] == mem[_9766]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9786
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _9786
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9786 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9786
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9786
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10019 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10019] == bool(mem[_10019])
                                                else:
                                                    if mem[_9766] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_9766] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_9786 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9786 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9786 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10155 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10155] == bool(mem[_10155])
                                        else:
                                            mem[_5927 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_5927 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2
                                            mem[_5927 + ceil32(return_data.size) + 132] = ext_call.return_data[0] / 2
                                            mem[_5927 + ceil32(return_data.size) + 164] = 160
                                            mem[_5927 + ceil32(return_data.size) + 260] = mem[_5927]
                                            idx = 0
                                            s = _5927 + 32
                                            t = _5927 + ceil32(return_data.size) + 292
                                            while idx < mem[_5927]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_5927 + ceil32(return_data.size) + 196] = this.address
                                            mem[_5927 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor3)
                                            call stor3.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _5927 + ceil32(return_data.size) + (32 * mem[_5927]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8213 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8234 = mem[_8213]
                                            require mem[_8213] <= test266151307()
                                            require _8213 + mem[_8213] + 31 < _8213 + return_data.size
                                            _8257 = mem[_8213 + mem[_8213]]
                                            if mem[_8213 + mem[_8213]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _8213 + ceil32(return_data.size) + floor32(mem[_8213 + mem[_8213]]) + 1 > test266151307() or floor32(mem[_8213 + mem[_8213]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _8213 + ceil32(return_data.size) + floor32(mem[_8213 + mem[_8213]]) + 1
                                            mem[_8213 + ceil32(return_data.size)] = _8257
                                            require _8234 + (32 * _8257) + 32 <= return_data.size
                                            idx = 0
                                            s = _8213 + _8234 + 32
                                            t = _8213 + ceil32(return_data.size) + 32
                                            while idx < _8257:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2) <= 0:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _9776 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _9794 = mem[_9776]
                                                require mem[_9776] == mem[_9776]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9794
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _9794
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9794 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9794
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9794
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10049 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10049] == bool(mem[_10049])
                                                else:
                                                    if mem[_9776] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_9776] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9794 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_9794 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9794 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9794 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9794 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10178 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10178] == bool(mem[_10178])
                                            else:
                                                _9734 = mem[64]
                                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5816 / 2)
                                                mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[mem[64] + 68] = 160
                                                _9767 = mem[_5927]
                                                mem[mem[64] + 164] = mem[_5927]
                                                idx = 0
                                                s = _5927 + 32
                                                t = mem[64] + 196
                                                while idx < _9767:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_9734 + 100] = this.address
                                                mem[_9734 + 132] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _9734 + (32 * _9767) + -mem[64] + 192]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10920 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _10928 = mem[_10920]
                                                require mem[_10920] <= test266151307()
                                                require _10920 + mem[_10920] + 31 < _10920 + return_data.size
                                                _10936 = mem[_10920 + mem[_10920]]
                                                if mem[_10920 + mem[_10920]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _10920 + ceil32(return_data.size) + floor32(mem[_10920 + mem[_10920]]) + 1 > test266151307() or floor32(mem[_10920 + mem[_10920]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _10920 + ceil32(return_data.size) + floor32(mem[_10920 + mem[_10920]]) + 1
                                                mem[_10920 + ceil32(return_data.size)] = _10936
                                                require _10928 + (32 * _10936) + 32 <= return_data.size
                                                idx = 0
                                                s = _10920 + _10928 + 32
                                                t = _10920 + ceil32(return_data.size) + 32
                                                while idx < _10936:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11408 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11415 = mem[_11408]
                                                require mem[_11408] == mem[_11408]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11415
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _11415
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11415 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11415
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11415
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11513 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11513] == bool(mem[_11513])
                                                else:
                                                    if mem[_11408] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_11408] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11415 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_11415 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11415 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11415 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11415 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11577 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11577] == bool(mem[_11577])
                else:
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 676] = ext_call.return_data[0] / 2
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 708] = 0
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 740] = 160
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 836] = 2
                    idx = 0
                    s = ceil32(arg5.length) + ceil32(return_data.size) + 608
                    t = ceil32(arg5.length) + ceil32(return_data.size) + 868
                    while idx < 2:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 772] = this.address
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 804] = block.timestamp
                    require ext_code.size(stor3)
                    call stor3.swapExactTokensForTokens(uint256 rg1, uint256 rg2, address[] rg3, address rg4, uint256 rg5) with:
                         gas gas_remaining wei
                        args Mask(255, 1, ext_call.return_data[0]), 0, 160, address(this.address), block.timestamp, 2, mem[ceil32(arg5.length) + ceil32(return_data.size) + 868 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672
                    require return_data.size >= 32
                    _3207 = mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32
                    require mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 <= test266151307()
                    require ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 703 < ceil32(arg5.length) + ceil32(return_data.size) + return_data.size + 672
                    _3230 = mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 672]
                    if mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 672] > test266151307():
                        revert with 'NH{q', 65
                    if ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 672]) + 673 > test266151307() or floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 672]) + 1 < 0:
                        revert with 'NH{q', 65
                    mem[64] = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + floor32(mem[ceil32(arg5.length) + ceil32(return_data.size) + mem[ceil32(arg5.length) + ceil32(return_data.size) + 672 len 4], Mask(224, 32, ext_call.return_data[0]) >> 32 + 672]) + 673
                    mem[ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 672] = _3230
                    require _3207 + (32 * _3230) + 32 <= return_data.size
                    idx = 0
                    s = ceil32(arg5.length) + ceil32(return_data.size) + _3207 + 704
                    t = ceil32(arg5.length) + (2 * ceil32(return_data.size)) + 704
                    while idx < _3230:
                        require mem[s] == mem[s]
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    if ext_call.return_data[0] - (ext_call.return_data[0] / 2) <= 0:
                        if 0 >= arg3.length:
                            revert with 'NH{q', 50
                        if 0 >= arg2.length:
                            revert with 'NH{q', 50
                        if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                            revert with 'NH{q', 17
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                        if stor5 == mem[ceil32(arg5.length) + 396 len 20]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5813 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5817 = mem[_5813]
                            require mem[_5813] == mem[_5813]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5817
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _5817
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5817 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5817
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5817
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6514 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6514] == bool(mem[_6514])
                            else:
                                if mem[_5813] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_5813] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _5817 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_5817 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _5817 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _5817 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _5817 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6738 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_6738] == bool(mem[_6738])
                        else:
                            _5772 = mem[172 len 20]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_5772))
                            staticcall address(_5772).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5814 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _5818 = mem[_5814]
                            require mem[_5814] == mem[_5814]
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= mem[_5814]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6042 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _6081 = mem[_6042]
                                require mem[_6042] == mem[_6042]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _6081
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _6081
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _6081 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _6081
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _6081
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _6920 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_6920] == bool(mem[_6920])
                                else:
                                    if mem[_6042] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_6042] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _6081 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_6081 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _6081 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _6081 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _6081 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7050 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_7050] == bool(mem[_7050])
                            else:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] < mem[_5814]:
                                    revert with 'NH{q', 17
                                _5939 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                mem[_5939 + 32 len 64] = call.data[calldata.size len 64]
                                if 0 >= mem[_5939]:
                                    revert with 'NH{q', 50
                                mem[_5939 + 32] = stor5
                                if 1 >= mem[_5939]:
                                    revert with 'NH{q', 50
                                mem[_5939 + 64] = mem[ceil32(arg5.length) + 396 len 20]
                                mem[_5939 + 100] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_5939 + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _5939 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if mem[ceil32(arg5.length) + 544] == 1:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 <= 0:
                                        mem[_5939 + ceil32(return_data.size) + 100] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[_5939 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[_5939 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_5939 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818
                                        mem[_5939 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                        mem[_5939 + ceil32(return_data.size) + 164] = 160
                                        mem[_5939 + ceil32(return_data.size) + 260] = mem[_5939]
                                        idx = 0
                                        s = _5939 + 32
                                        t = _5939 + ceil32(return_data.size) + 292
                                        while idx < mem[_5939]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_5939 + ceil32(return_data.size) + 196] = this.address
                                        mem[_5939 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor3)
                                        call stor3.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _5939 + ceil32(return_data.size) + (32 * mem[_5939]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8219 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _8240 = mem[_8219]
                                        require mem[_8219] <= test266151307()
                                        require _8219 + mem[_8219] + 31 < _8219 + return_data.size
                                        _8263 = mem[_8219 + mem[_8219]]
                                        if mem[_8219 + mem[_8219]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _8219 + ceil32(return_data.size) + floor32(mem[_8219 + mem[_8219]]) + 1 > test266151307() or floor32(mem[_8219 + mem[_8219]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _8219 + ceil32(return_data.size) + floor32(mem[_8219 + mem[_8219]]) + 1
                                        mem[_8219 + ceil32(return_data.size)] = _8263
                                        require _8240 + (32 * _8263) + 32 <= return_data.size
                                        idx = 0
                                        s = _8219 + _8240 + 32
                                        t = _8219 + ceil32(return_data.size) + 32
                                        while idx < _8263:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9779 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _9797 = mem[_9779]
                                        require mem[_9779] == mem[_9779]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9797
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _9797
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9797 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9797
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9797
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10058 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10058] == bool(mem[_10058])
                                        else:
                                            if mem[_9779] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_9779] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _9797 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_9797 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _9797 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _9797 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _9797 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10190 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_10190] == bool(mem[_10190])
                                else:
                                    if mem[ceil32(arg5.length) + 544] == 2:
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 <= 0:
                                            mem[_5939 + ceil32(return_data.size) + 100] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[_5939 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[_5939 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_5939 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818
                                            mem[_5939 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                            mem[_5939 + ceil32(return_data.size) + 164] = 160
                                            mem[_5939 + ceil32(return_data.size) + 260] = mem[_5939]
                                            idx = 0
                                            s = _5939 + 32
                                            t = _5939 + ceil32(return_data.size) + 292
                                            while idx < mem[_5939]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_5939 + ceil32(return_data.size) + 196] = this.address
                                            mem[_5939 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor4)
                                            call stor4.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _5939 + ceil32(return_data.size) + (32 * mem[_5939]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8218 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8239 = mem[_8218]
                                            require mem[_8218] <= test266151307()
                                            require _8218 + mem[_8218] + 31 < _8218 + return_data.size
                                            _8262 = mem[_8218 + mem[_8218]]
                                            if mem[_8218 + mem[_8218]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _8218 + ceil32(return_data.size) + floor32(mem[_8218 + mem[_8218]]) + 1 > test266151307() or floor32(mem[_8218 + mem[_8218]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _8218 + ceil32(return_data.size) + floor32(mem[_8218 + mem[_8218]]) + 1
                                            mem[_8218 + ceil32(return_data.size)] = _8262
                                            require _8239 + (32 * _8262) + 32 <= return_data.size
                                            idx = 0
                                            s = _8218 + _8239 + 32
                                            t = _8218 + ceil32(return_data.size) + 32
                                            while idx < _8262:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _9771 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _9789 = mem[_9771]
                                            require mem[_9771] == mem[_9771]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _9789
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _9789
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _9789 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _9789
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _9789
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _10036 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_10036] == bool(mem[_10036])
                                            else:
                                                if mem[_9771] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_9771] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _9789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_9789 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _9789 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _9789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _9789 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _10164 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_10164] == bool(mem[_10164])
                                    else:
                                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 < cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2:
                                            revert with 'NH{q', 17
                                        require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                        if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                            revert with 'NH{q', 17
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2 <= 0:
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2) <= 0:
                                                mem[_5939 + ceil32(return_data.size) + 100] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[_5939 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_5939 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_5939 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[_5939 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[_5939 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2)
                                                mem[_5939 + ceil32(return_data.size) + 132] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[_5939 + ceil32(return_data.size) + 164] = 160
                                                mem[_5939 + ceil32(return_data.size) + 260] = mem[_5939]
                                                idx = 0
                                                s = _5939 + 32
                                                t = _5939 + ceil32(return_data.size) + 292
                                                while idx < mem[_5939]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_5939 + ceil32(return_data.size) + 196] = this.address
                                                mem[_5939 + ceil32(return_data.size) + 228] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _5939 + ceil32(return_data.size) + (32 * mem[_5939]) + -mem[64] + 288]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _8216 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _8237 = mem[_8216]
                                                require mem[_8216] <= test266151307()
                                                require _8216 + mem[_8216] + 31 < _8216 + return_data.size
                                                _8260 = mem[_8216 + mem[_8216]]
                                                if mem[_8216 + mem[_8216]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _8216 + ceil32(return_data.size) + floor32(mem[_8216 + mem[_8216]]) + 1 > test266151307() or floor32(mem[_8216 + mem[_8216]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _8216 + ceil32(return_data.size) + floor32(mem[_8216 + mem[_8216]]) + 1
                                                mem[_8216 + ceil32(return_data.size)] = _8260
                                                require _8237 + (32 * _8260) + 32 <= return_data.size
                                                idx = 0
                                                s = _8216 + _8237 + 32
                                                t = _8216 + ceil32(return_data.size) + 32
                                                while idx < _8260:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _9769 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _9788 = mem[_9769]
                                                require mem[_9769] == mem[_9769]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9788
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _9788
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9788 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9788
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9788
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10030 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10030] == bool(mem[_10030])
                                                else:
                                                    if mem[_9769] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_9769] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_9788 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9788 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9788 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10161 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10161] == bool(mem[_10161])
                                        else:
                                            mem[_5939 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_5939 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2
                                            mem[_5939 + ceil32(return_data.size) + 132] = ext_call.return_data[0] / 2
                                            mem[_5939 + ceil32(return_data.size) + 164] = 160
                                            mem[_5939 + ceil32(return_data.size) + 260] = mem[_5939]
                                            idx = 0
                                            s = _5939 + 32
                                            t = _5939 + ceil32(return_data.size) + 292
                                            while idx < mem[_5939]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_5939 + ceil32(return_data.size) + 196] = this.address
                                            mem[_5939 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor3)
                                            call stor3.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _5939 + ceil32(return_data.size) + (32 * mem[_5939]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _8217 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _8238 = mem[_8217]
                                            require mem[_8217] <= test266151307()
                                            require _8217 + mem[_8217] + 31 < _8217 + return_data.size
                                            _8261 = mem[_8217 + mem[_8217]]
                                            if mem[_8217 + mem[_8217]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _8217 + ceil32(return_data.size) + floor32(mem[_8217 + mem[_8217]]) + 1 > test266151307() or floor32(mem[_8217 + mem[_8217]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _8217 + ceil32(return_data.size) + floor32(mem[_8217 + mem[_8217]]) + 1
                                            mem[_8217 + ceil32(return_data.size)] = _8261
                                            require _8238 + (32 * _8261) + 32 <= return_data.size
                                            idx = 0
                                            s = _8217 + _8238 + 32
                                            t = _8217 + ceil32(return_data.size) + 32
                                            while idx < _8261:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2) <= 0:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _9778 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _9796 = mem[_9778]
                                                require mem[_9778] == mem[_9778]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9796
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _9796
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9796 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9796
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9796
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10055 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10055] == bool(mem[_10055])
                                                else:
                                                    if mem[_9778] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_9778] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _9796 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_9796 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _9796 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _9796 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _9796 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _10186 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_10186] == bool(mem[_10186])
                                            else:
                                                _9735 = mem[64]
                                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _5818 / 2)
                                                mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[mem[64] + 68] = 160
                                                _9770 = mem[_5939]
                                                mem[mem[64] + 164] = mem[_5939]
                                                idx = 0
                                                s = _5939 + 32
                                                t = mem[64] + 196
                                                while idx < _9770:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_9735 + 100] = this.address
                                                mem[_9735 + 132] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _9735 + (32 * _9770) + -mem[64] + 192]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10921 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _10929 = mem[_10921]
                                                require mem[_10921] <= test266151307()
                                                require _10921 + mem[_10921] + 31 < _10921 + return_data.size
                                                _10937 = mem[_10921 + mem[_10921]]
                                                if mem[_10921 + mem[_10921]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _10921 + ceil32(return_data.size) + floor32(mem[_10921 + mem[_10921]]) + 1 > test266151307() or floor32(mem[_10921 + mem[_10921]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _10921 + ceil32(return_data.size) + floor32(mem[_10921 + mem[_10921]]) + 1
                                                mem[_10921 + ceil32(return_data.size)] = _10937
                                                require _10929 + (32 * _10937) + 32 <= return_data.size
                                                idx = 0
                                                s = _10921 + _10929 + 32
                                                t = _10921 + ceil32(return_data.size) + 32
                                                while idx < _10937:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11409 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11416 = mem[_11409]
                                                require mem[_11409] == mem[_11409]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11416
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _11416
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11416 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11416
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11416
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11516 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11516] == bool(mem[_11516])
                                                else:
                                                    if mem[_11409] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_11409] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11416 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_11416 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11416 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11416 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11416 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11579 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11579] == bool(mem[_11579])
                    else:
                        _5682 = mem[64]
                        mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _5766 = mem[ceil32(arg5.length) + ceil32(return_data.size) + 576]
                        mem[mem[64] + 164] = mem[ceil32(arg5.length) + ceil32(return_data.size) + 576]
                        idx = 0
                        s = ceil32(arg5.length) + ceil32(return_data.size) + 608
                        t = mem[64] + 196
                        while idx < _5766:
                            mem[t] = mem[s + 12 len 20]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_5682 + 100] = this.address
                        mem[_5682 + 132] = block.timestamp
                        require ext_code.size(stor4)
                        call stor4.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _5682 + (32 * _5766) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8220 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8241 = mem[_8220]
                        require mem[_8220] <= test266151307()
                        require _8220 + mem[_8220] + 31 < _8220 + return_data.size
                        _8264 = mem[_8220 + mem[_8220]]
                        if mem[_8220 + mem[_8220]] > test266151307():
                            revert with 'NH{q', 65
                        if _8220 + ceil32(return_data.size) + floor32(mem[_8220 + mem[_8220]]) + 1 > test266151307() or floor32(mem[_8220 + mem[_8220]]) + 1 < 0:
                            revert with 'NH{q', 65
                        mem[64] = _8220 + ceil32(return_data.size) + floor32(mem[_8220 + mem[_8220]]) + 1
                        mem[_8220 + ceil32(return_data.size)] = _8264
                        require _8241 + (32 * _8264) + 32 <= return_data.size
                        idx = 0
                        s = _8220 + _8241 + 32
                        t = _8220 + ceil32(return_data.size) + 32
                        while idx < _8264:
                            require mem[s] == mem[s]
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        if 0 >= arg3.length:
                            revert with 'NH{q', 50
                        if 0 >= arg2.length:
                            revert with 'NH{q', 50
                        if cd[(arg2 + 36)] > -cd[(arg3 + 36)] - 1:
                            revert with 'NH{q', 17
                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] >= cd[(arg2 + 36)]
                        if stor5 == mem[ceil32(arg5.length) + 396 len 20]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor5)
                            staticcall stor5.0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9804 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9806 = mem[_9804]
                            require mem[_9804] == mem[_9804]
                            if 0 >= arg1.length:
                                revert with 'NH{q', 50
                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                            if stor5 != address(cd[(arg1 + 36)]):
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _9806
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args _9806
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _9806 wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _9806
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _9806
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10267 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10267] == bool(mem[_10267])
                            else:
                                if mem[_9804] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 0, 'CANT_REPAY_LOAN'
                                if mem[_9804] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                    revert with 'NH{q', 17
                                if stor6 == 1:
                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _9806 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0x2e1a7d4d with:
                                         gas gas_remaining wei
                                        args (_9806 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                       value _9806 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with 0, 'TRANSFER_FAILED'
                                else:
                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                    mem[mem[64] + 36] = _9806 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    require ext_code.size(stor5)
                                    call stor5.0xa9059cbb with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4], _9806 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _10403 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_10403] == bool(mem[_10403])
                        else:
                            _9782 = mem[ceil32(arg5.length) + 384]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_9782))
                            staticcall address(_9782).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9807 = mem[_9805]
                            require mem[_9805] == mem[_9805]
                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] <= mem[_9805]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9936 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _9970 = mem[_9936]
                                require mem[_9936] == mem[_9936]
                                if 0 >= arg1.length:
                                    revert with 'NH{q', 50
                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                if stor5 != address(cd[(arg1 + 36)]):
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9970
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args _9970
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9970 wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9970
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9970
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10477 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10477] == bool(mem[_10477])
                                else:
                                    if mem[_9936] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 0, 'CANT_REPAY_LOAN'
                                    if mem[_9936] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                        revert with 'NH{q', 17
                                    if stor6 == 1:
                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _9970 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0x2e1a7d4d with:
                                             gas gas_remaining wei
                                            args (_9970 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                           value _9970 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                             gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                        mem[mem[64] + 36] = _9970 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        require ext_code.size(stor5)
                                        call stor5.0xa9059cbb with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4], _9970 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10519 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_10519] == bool(mem[_10519])
                            else:
                                if cd[(arg2 + 36)] + cd[(arg3 + 36)] < mem[_9805]:
                                    revert with 'NH{q', 17
                                _9875 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                mem[_9875 + 32 len 64] = call.data[calldata.size len 64]
                                if 0 >= mem[_9875]:
                                    revert with 'NH{q', 50
                                mem[_9875 + 32] = stor5
                                if 1 >= mem[_9875]:
                                    revert with 'NH{q', 50
                                mem[_9875 + 64] = mem[ceil32(arg5.length) + 396 len 20]
                                mem[_9875 + 100] = this.address
                                require ext_code.size(stor5)
                                staticcall stor5.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_9875 + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _9875 + ceil32(return_data.size) + 96
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if mem[ceil32(arg5.length) + 544] == 1:
                                    if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 <= 0:
                                        mem[_9875 + ceil32(return_data.size) + 100] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[_9875 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[0]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 != 1:
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                    else:
                                        mem[_9875 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                        mem[_9875 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807
                                        mem[_9875 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                        mem[_9875 + ceil32(return_data.size) + 164] = 160
                                        mem[_9875 + ceil32(return_data.size) + 260] = mem[_9875]
                                        idx = 0
                                        s = _9875 + 32
                                        t = _9875 + ceil32(return_data.size) + 292
                                        while idx < mem[_9875]:
                                            mem[t] = mem[s + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[_9875 + ceil32(return_data.size) + 196] = this.address
                                        mem[_9875 + ceil32(return_data.size) + 228] = block.timestamp
                                        require ext_code.size(stor3)
                                        call stor3.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _9875 + ceil32(return_data.size) + (32 * mem[_9875]) + -mem[64] + 288]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _10925 = mem[64]
                                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _10933 = mem[_10925]
                                        require mem[_10925] <= test266151307()
                                        require _10925 + mem[_10925] + 31 < _10925 + return_data.size
                                        _10941 = mem[_10925 + mem[_10925]]
                                        if mem[_10925 + mem[_10925]] > test266151307():
                                            revert with 'NH{q', 65
                                        if _10925 + ceil32(return_data.size) + floor32(mem[_10925 + mem[_10925]]) + 1 > test266151307() or floor32(mem[_10925 + mem[_10925]]) + 1 < 0:
                                            revert with 'NH{q', 65
                                        mem[64] = _10925 + ceil32(return_data.size) + floor32(mem[_10925 + mem[_10925]]) + 1
                                        mem[_10925 + ceil32(return_data.size)] = _10941
                                        require _10933 + (32 * _10941) + 32 <= return_data.size
                                        idx = 0
                                        s = _10925 + _10933 + 32
                                        t = _10925 + ceil32(return_data.size) + 32
                                        while idx < _10941:
                                            require mem[s] == mem[s]
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(stor5)
                                        staticcall stor5.0x70a08231 with:
                                                gas gas_remaining wei
                                               args address(this.address)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _11414 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _11420 = mem[_11414]
                                        require mem[_11414] == mem[_11414]
                                        if 0 >= arg1.length:
                                            revert with 'NH{q', 50
                                        require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                        if stor5 != address(cd[(arg1 + 36)]):
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _11420
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args _11420
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _11420 wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _11420
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _11420
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11533 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_11533] == bool(mem[_11533])
                                        else:
                                            if mem[_11414] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 0, 'CANT_REPAY_LOAN'
                                            if mem[_11414] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                revert with 'NH{q', 17
                                            if stor6 == 1:
                                                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = _11420 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0x2e1a7d4d with:
                                                     gas gas_remaining wei
                                                    args (_11420 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                call mem[ceil32(arg5.length) + 492 len 20] with:
                                                   value _11420 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                     gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                mem[mem[64] + 36] = _11420 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                require ext_code.size(stor5)
                                                call stor5.0xa9059cbb with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4], _11420 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11597 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_11597] == bool(mem[_11597])
                                else:
                                    if mem[ceil32(arg5.length) + 544] == 2:
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 <= 0:
                                            mem[_9875 + ceil32(return_data.size) + 100] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            mem[_9875 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == ext_call.return_data[0]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 != 1:
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                        else:
                                            mem[_9875 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_9875 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807
                                            mem[_9875 + ceil32(return_data.size) + 132] = ext_call.return_data[0]
                                            mem[_9875 + ceil32(return_data.size) + 164] = 160
                                            mem[_9875 + ceil32(return_data.size) + 260] = mem[_9875]
                                            idx = 0
                                            s = _9875 + 32
                                            t = _9875 + ceil32(return_data.size) + 292
                                            while idx < mem[_9875]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_9875 + ceil32(return_data.size) + 196] = this.address
                                            mem[_9875 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor4)
                                            call stor4.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _9875 + ceil32(return_data.size) + (32 * mem[_9875]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _10924 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _10932 = mem[_10924]
                                            require mem[_10924] <= test266151307()
                                            require _10924 + mem[_10924] + 31 < _10924 + return_data.size
                                            _10940 = mem[_10924 + mem[_10924]]
                                            if mem[_10924 + mem[_10924]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _10924 + ceil32(return_data.size) + floor32(mem[_10924 + mem[_10924]]) + 1 > test266151307() or floor32(mem[_10924 + mem[_10924]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _10924 + ceil32(return_data.size) + floor32(mem[_10924 + mem[_10924]]) + 1
                                            mem[_10924 + ceil32(return_data.size)] = _10940
                                            require _10932 + (32 * _10940) + 32 <= return_data.size
                                            idx = 0
                                            s = _10924 + _10932 + 32
                                            t = _10924 + ceil32(return_data.size) + 32
                                            while idx < _10940:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[mem[64] + 4] = this.address
                                            require ext_code.size(stor5)
                                            staticcall stor5.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args address(this.address)
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _11412 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _11418 = mem[_11412]
                                            require mem[_11412] == mem[_11412]
                                            if 0 >= arg1.length:
                                                revert with 'NH{q', 50
                                            require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                            if stor5 != address(cd[(arg1 + 36)]):
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _11418
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args _11418
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _11418 wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _11418
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _11418
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _11525 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_11525] == bool(mem[_11525])
                                            else:
                                                if mem[_11412] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 0, 'CANT_REPAY_LOAN'
                                                if mem[_11412] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                    revert with 'NH{q', 17
                                                if stor6 == 1:
                                                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = _11418 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0x2e1a7d4d with:
                                                         gas gas_remaining wei
                                                        args (_11418 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    call mem[ceil32(arg5.length) + 492 len 20] with:
                                                       value _11418 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                         gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                    mem[mem[64] + 36] = _11418 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    require ext_code.size(stor5)
                                                    call stor5.0xa9059cbb with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4], _11418 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _11584 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_11584] == bool(mem[_11584])
                                    else:
                                        require cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2 <= cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 < cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2:
                                            revert with 'NH{q', 17
                                        require ext_call.return_data[0] / 2 <= ext_call.return_data[0]
                                        if ext_call.return_data[0] < ext_call.return_data[0] / 2:
                                            revert with 'NH{q', 17
                                        if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2 <= 0:
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2) <= 0:
                                                mem[_9875 + ceil32(return_data.size) + 100] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                mem[_9875 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == ext_call.return_data[0]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                else:
                                                    if ext_call.return_data[0] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if ext_call.return_data[0] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 != 1:
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args address(mem[ceil32(arg5.length) + 480]), ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    else:
                                                        mem[_9875 + (2 * ceil32(return_data.size)) + 96] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[_9875 + (2 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value ext_call.return_data[0] - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                            else:
                                                mem[_9875 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[_9875 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2)
                                                mem[_9875 + ceil32(return_data.size) + 132] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[_9875 + ceil32(return_data.size) + 164] = 160
                                                mem[_9875 + ceil32(return_data.size) + 260] = mem[_9875]
                                                idx = 0
                                                s = _9875 + 32
                                                t = _9875 + ceil32(return_data.size) + 292
                                                while idx < mem[_9875]:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_9875 + ceil32(return_data.size) + 196] = this.address
                                                mem[_9875 + ceil32(return_data.size) + 228] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _9875 + ceil32(return_data.size) + (32 * mem[_9875]) + -mem[64] + 288]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _10922 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _10930 = mem[_10922]
                                                require mem[_10922] <= test266151307()
                                                require _10922 + mem[_10922] + 31 < _10922 + return_data.size
                                                _10938 = mem[_10922 + mem[_10922]]
                                                if mem[_10922 + mem[_10922]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _10922 + ceil32(return_data.size) + floor32(mem[_10922 + mem[_10922]]) + 1 > test266151307() or floor32(mem[_10922 + mem[_10922]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _10922 + ceil32(return_data.size) + floor32(mem[_10922 + mem[_10922]]) + 1
                                                mem[_10922 + ceil32(return_data.size)] = _10938
                                                require _10930 + (32 * _10938) + 32 <= return_data.size
                                                idx = 0
                                                s = _10922 + _10930 + 32
                                                t = _10922 + ceil32(return_data.size) + 32
                                                while idx < _10938:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11410 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11417 = mem[_11410]
                                                require mem[_11410] == mem[_11410]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11417
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _11417
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11417 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11417
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11417
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11519 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11519] == bool(mem[_11519])
                                                else:
                                                    if mem[_11410] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_11410] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11417 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_11417 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11417 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11417 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11417 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11581 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11581] == bool(mem[_11581])
                                        else:
                                            mem[_9875 + ceil32(return_data.size) + 96] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                            mem[_9875 + ceil32(return_data.size) + 100] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2
                                            mem[_9875 + ceil32(return_data.size) + 132] = ext_call.return_data[0] / 2
                                            mem[_9875 + ceil32(return_data.size) + 164] = 160
                                            mem[_9875 + ceil32(return_data.size) + 260] = mem[_9875]
                                            idx = 0
                                            s = _9875 + 32
                                            t = _9875 + ceil32(return_data.size) + 292
                                            while idx < mem[_9875]:
                                                mem[t] = mem[s + 12 len 20]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            mem[_9875 + ceil32(return_data.size) + 196] = this.address
                                            mem[_9875 + ceil32(return_data.size) + 228] = block.timestamp
                                            require ext_code.size(stor3)
                                            call stor3.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len _9875 + ceil32(return_data.size) + (32 * mem[_9875]) + -mem[64] + 288]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _10923 = mem[64]
                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            _10931 = mem[_10923]
                                            require mem[_10923] <= test266151307()
                                            require _10923 + mem[_10923] + 31 < _10923 + return_data.size
                                            _10939 = mem[_10923 + mem[_10923]]
                                            if mem[_10923 + mem[_10923]] > test266151307():
                                                revert with 'NH{q', 65
                                            if _10923 + ceil32(return_data.size) + floor32(mem[_10923 + mem[_10923]]) + 1 > test266151307() or floor32(mem[_10923 + mem[_10923]]) + 1 < 0:
                                                revert with 'NH{q', 65
                                            mem[64] = _10923 + ceil32(return_data.size) + floor32(mem[_10923 + mem[_10923]]) + 1
                                            mem[_10923 + ceil32(return_data.size)] = _10939
                                            require _10931 + (32 * _10939) + 32 <= return_data.size
                                            idx = 0
                                            s = _10923 + _10931 + 32
                                            t = _10923 + ceil32(return_data.size) + 32
                                            while idx < _10939:
                                                require mem[s] == mem[s]
                                                mem[t] = mem[s]
                                                idx = idx + 1
                                                s = s + 32
                                                t = t + 32
                                                continue 
                                            if cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2) <= 0:
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11413 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11419 = mem[_11413]
                                                require mem[_11413] == mem[_11413]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11419
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _11419
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11419 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11419
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11419
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11530 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11530] == bool(mem[_11530])
                                                else:
                                                    if mem[_11413] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_11413] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11419 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_11419 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11419 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11419 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11419 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11593 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11593] == bool(mem[_11593])
                                            else:
                                                _11395 = mem[64]
                                                mem[mem[64]] = 0x8803dbee00000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 - (cd[(arg2 + 36)] + cd[(arg3 + 36)] - _9807 / 2)
                                                mem[mem[64] + 36] = ext_call.return_data[0] - (ext_call.return_data[0] / 2)
                                                mem[mem[64] + 68] = 160
                                                _11411 = mem[_9875]
                                                mem[mem[64] + 164] = mem[_9875]
                                                idx = 0
                                                s = _9875 + 32
                                                t = mem[64] + 196
                                                while idx < _11411:
                                                    mem[t] = mem[s + 12 len 20]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[_11395 + 100] = this.address
                                                mem[_11395 + 132] = block.timestamp
                                                require ext_code.size(stor4)
                                                call stor4.mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len _11395 + (32 * _11411) + -mem[64] + 192]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11742 = mem[64]
                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11743 = mem[_11742]
                                                require mem[_11742] <= test266151307()
                                                require _11742 + mem[_11742] + 31 < _11742 + return_data.size
                                                _11744 = mem[_11742 + mem[_11742]]
                                                if mem[_11742 + mem[_11742]] > test266151307():
                                                    revert with 'NH{q', 65
                                                if _11742 + ceil32(return_data.size) + floor32(mem[_11742 + mem[_11742]]) + 1 > test266151307() or floor32(mem[_11742 + mem[_11742]]) + 1 < 0:
                                                    revert with 'NH{q', 65
                                                mem[64] = _11742 + ceil32(return_data.size) + floor32(mem[_11742 + mem[_11742]]) + 1
                                                mem[_11742 + ceil32(return_data.size)] = _11744
                                                require _11743 + (32 * _11744) + 32 <= return_data.size
                                                idx = 0
                                                s = _11742 + _11743 + 32
                                                t = _11742 + ceil32(return_data.size) + 32
                                                while idx < _11744:
                                                    require mem[s] == mem[s]
                                                    mem[t] = mem[s]
                                                    idx = idx + 1
                                                    s = s + 32
                                                    t = t + 32
                                                    continue 
                                                mem[mem[64] + 4] = this.address
                                                require ext_code.size(stor5)
                                                staticcall stor5.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args address(this.address)
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _11798 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                _11799 = mem[_11798]
                                                require mem[_11798] == mem[_11798]
                                                if 0 >= arg1.length:
                                                    revert with 'NH{q', 50
                                                require cd[(arg1 + 36)] == address(cd[(arg1 + 36)])
                                                if stor5 != address(cd[(arg1 + 36)]):
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11799
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args _11799
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11799 wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11799
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11799
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11815 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11815] == bool(mem[_11815])
                                                else:
                                                    if mem[_11798] <= cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 0, 'CANT_REPAY_LOAN'
                                                    if mem[_11798] < cd[(arg2 + 36)] + cd[(arg3 + 36)]:
                                                        revert with 'NH{q', 17
                                                    if stor6 == 1:
                                                        mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = _11799 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0x2e1a7d4d with:
                                                             gas gas_remaining wei
                                                            args (_11799 - cd[(arg2 + 36)] - cd[(arg3 + 36)])
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        call mem[ceil32(arg5.length) + 492 len 20] with:
                                                           value _11799 - cd[(arg2 + 36)] - cd[(arg3 + 36)] wei
                                                             gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with 0, 'TRANSFER_FAILED'
                                                    else:
                                                        mem[mem[64] + 4] = mem[ceil32(arg5.length) + 492 len 20]
                                                        mem[mem[64] + 36] = _11799 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        require ext_code.size(stor5)
                                                        call stor5.0xa9059cbb with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4], _11799 - cd[(arg2 + 36)] - cd[(arg3 + 36)]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _11825 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_11825] == bool(mem[_11825])
    return 1
}



}
