contract main {




// =====================  Runtime code  =====================


uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
address sub_0f0a1c6fAddress; offset 16
mapping of uint8 stor1;
array of address sub_e94b0dd2;
mapping of uint256 totalTokenBalance;
mapping of uint256 stor5;
mapping of uint256 userInvestedAmountByToken;
mapping of uint256 userStrategyBalanceByToken;
mapping of uint256 sub_df9b1af9;

function sub_0f0a1c6f(?) payable {
    return sub_0f0a1c6fAddress
}

function getUserInvestedAmountByToken(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return userInvestedAmountByToken[address(arg2)][address(arg1)]
}

function getUserStrategyBalanceByToken(uint256 arg1, address arg2, address arg3) payable {
    require calldata.size - 4 >= 96
    require arg2 == arg2
    require arg3 == arg3
    return userStrategyBalanceByToken[address(arg3)][arg1][address(arg2)]
}

function sub_df9b1af9(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    return sub_df9b1af9[address(arg1)][address(arg2)]
}

function sub_e94b0dd2(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_e94b0dd2.length
    return address(sub_e94b0dd2[arg1])
}

function totalTokenBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return totalTokenBalance[address(arg1)]
}

function _fallback() payable {
    revert
}

function userTokenBalance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if userInvestedAmountByToken[address(arg2)][address(arg1)] >= stor5[address(arg1)][address(arg2)]:
        return 0
    if stor5[address(arg1)][address(arg2)] < userInvestedAmountByToken[address(arg2)][address(arg1)]:
        revert with 0, 17
    return (stor5[address(arg1)][address(arg2)] - userInvestedAmountByToken[address(arg2)][address(arg1)])
}

function sub_e88d4d0e(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if stor5[address(arg1)][address(arg2)] > !sub_df9b1af9[address(arg1)][address(arg2)]:
        revert with 0, 17
    if stor5[address(arg1)][address(arg2)] + sub_df9b1af9[address(arg1)][address(arg2)] <= userInvestedAmountByToken[address(arg2)][address(arg1)]:
        return 0
    if stor5[address(arg1)][address(arg2)] + sub_df9b1af9[address(arg1)][address(arg2)] < userInvestedAmountByToken[address(arg2)][address(arg1)]:
        revert with 0, 17
    return (stor5[address(arg1)][address(arg2)] + sub_df9b1af9[address(arg1)][address(arg2)] - userInvestedAmountByToken[address(arg2)][address(arg1)])
}

function claimEthRewards(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not stor1[msg.sender]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Controlled::onlyController: Caller is not controller'
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 5
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).0xc115b22c with:
         gas gas_remaining wei
        args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function addController(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x2f54bf6e with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if not ext_call.return_data[0]:
        revert with 0, 'Controlled::onlyOwner: Caller is not owner'
    stor1[address(arg1)] = 1
    idx = 0
    s = 0
    while idx < sub_e94b0dd2.length:
        mem[0] = 2
        if idx == -1:
            revert with 0, 17
        if address(sub_e94b0dd2[idx]) != arg1:
            idx = idx + 1
            s = s
            continue 
        idx = idx + 1
        s = 1
        continue 
    if not s:
        sub_e94b0dd2.length++
        address(sub_e94b0dd2[sub_e94b0dd2.length]) = arg1
}

function sub_98c671ce(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 1
        stor1[mem[(32 * idx) + 140 len 20]] = 1
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    sub_e94b0dd2.length = ('cd', 4).length
    if not ('cd', 4).length:
        idx = 0
        while sub_e94b0dd2.length > idx:
            uint256(sub_e94b0dd2[idx]) = 0
            idx = idx + 1
            continue 
    else:
        s = 0
        idx = 128
        while (32 * ('cd', 4).length) + 128 > idx:
            address(sub_e94b0dd2[s]) = mem[idx + 12 len 20]
            s = s + 1
            idx = idx + 32
            continue 
        idx = Mask(251, 0, (32 * ('cd', 4).length) + 31) >> 5
        while sub_e94b0dd2.length > idx:
            uint256(sub_e94b0dd2[idx]) = 0
            idx = idx + 1
            continue 
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0, 'Initializable: contract is already initialized'
    if uint8(stor0.field_8):
        sub_0f0a1c6fAddress = address(cd[36])
    else:
        uint16(stor0.field_0) = 257
        sub_0f0a1c6fAddress = address(cd[36])
        uint8(stor0.field_8) = 0
        uint8(stor0.field_8) = 0
}

function initialize(address[] arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg1.length) + 97 < 96 or ceil32(32 * arg1.length) + 97 > test266151307():
        revert with 0, 65
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0, 'Initializable: contract is already initialized'
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0, 'Initializable: contract is already initialized'
    else:
        uint16(stor0.field_0) = 257
        if uint8(stor0.field_0):
            revert with 0, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
    idx = 0
    while idx < arg1.length:
        if idx >= arg1.length:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 1
        stor1[mem[(32 * idx) + 140 len 20]] = 1
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    sub_e94b0dd2.length = arg1.length
    if not arg1.length:
        idx = 0
        while sub_e94b0dd2.length > idx:
            uint256(sub_e94b0dd2[idx]) = 0
            idx = idx + 1
            continue 
    else:
        s = 0
        idx = 128
        while (32 * arg1.length) + 128 > idx:
            address(sub_e94b0dd2[s]) = mem[idx + 12 len 20]
            s = s + 1
            idx = idx + 32
            continue 
        idx = Mask(251, 0, (32 * arg1.length) + 31) >> 5
        while sub_e94b0dd2.length > idx:
            uint256(sub_e94b0dd2[idx]) = 0
            idx = idx + 1
            continue 
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0, 'Initializable: contract is already initialized'
    if uint8(stor0.field_8):
        sub_0f0a1c6fAddress = arg2
    else:
        uint16(stor0.field_0) = 257
        sub_0f0a1c6fAddress = arg2
        uint8(stor0.field_8) = 0
        uint8(stor0.field_8) = 0
        uint8(stor0.field_8) = 0
}

function sub_b81f4499(?) payable {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (64 * ('cd', 36).length) + 36 <= calldata.size
    if not ('cd', 36).length:
        revert with 0, 'tokens required'
    idx = 0
    while idx < ('cd', 36).length:
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if not address(cd[((64 * idx) + cd[36] + 36)]):
            revert with 0, 'invalid token'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        if cd[((64 * idx) + cd[36] + 68)] <= 0:
            revert with 0, 'invalid amount'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if userStrategyBalanceByToken[msg.sender][cd[4]][address(cd[((64 * idx) + cd[36] + 36)])] < cd[((64 * idx) + cd[36] + 68)]:
            revert with 0, 'insufficient funds'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])] < cd[((64 * idx) + cd[36] + 68)]:
            revert with 0, 17
        userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])] -= cd[((64 * idx) + cd[36] + 68)]
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        mem[0] = address(cd[((64 * idx) + cd[36] + 36)])
        mem[32] = sha3(cd[4], sha3(msg.sender, 7))
        if userStrategyBalanceByToken[msg.sender][cd[4]][address(cd[((64 * idx) + cd[36] + 36)])] < cd[((64 * idx) + cd[36] + 68)]:
            revert with 0, 17
        userStrategyBalanceByToken[msg.sender][cd[4]][address(cd[((64 * idx) + cd[36] + 36)])] -= cd[((64 * idx) + cd[36] + 68)]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    idx = 0
    s = cd[36] + 36
    t = 160
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = address(cd[s])
        mem[t + 32] = cd[(s + 32)]
        idx = idx + 1
        s = s + 64
        t = t + 64
        continue 
    emit 0x3ad24ebe: Array(len=('cd', 36).length, data=mem[160 len 64 * ('cd', 36).length]), cd[4], msg.sender
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 8
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    idx = 0
    s = cd[36] + 36
    t = ceil32(return_data.size) + 196
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = address(cd[s])
        mem[t + 32] = cd[(s + 32)]
        idx = idx + 1
        s = s + 64
        t = t + 64
        continue 
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).0xd4a4a043 with:
         gas gas_remaining wei
        args cd[4], Array(len=('cd', 36).length, data=mem[ceil32(return_data.size) + 196 len 64 * ('cd', 36).length])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_5702ea2a(?) payable {
    require calldata.size - 4 >= 128
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    if ('cd', 68).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 68).length) + 98 < 97 or ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + 97] = ('cd', 68).length
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    idx = 0
    s = cd[68] + 36
    t = ceil32(32 * ('cd', 4).length) + 129
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require calldata.size > cd[100] + 35
    if ('cd', 100).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 100).length) + 99 < 98 or ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + ceil32(32 * ('cd', 100).length) + 99 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 98] = ('cd', 100).length
    require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
    s = cd[100] + 36
    t = ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 130
    idx = 0
    while idx < ('cd', 100).length:
        require cd[s] == bool(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if not stor1[msg.sender]:
        revert with 0, 'Controlled::onlyController: Caller is not controller'
    if ('cd', 4).length != ('cd', 68).length:
        revert with 0, 'aUserPositions::updateUserIntercnnectBalances: arrays must be equal length'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        if idx >= ('cd', 68).length:
            revert with 0, 50
        if 0 == mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
            revert with 0, 'aUserPositions::updateUserIntercnnectBalances: Must have a positive or negative number to change the balance'
        if idx >= ('cd', 100).length:
            revert with 0, 50
        if idx >= ('cd', 68).length:
            revert with 0, 50
        if mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 130]:
            if sub_df9b1af9[mem[(32 * idx) + 140 len 20]][address(cd[36])] > !mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
                revert with 0, 17
            if idx >= ('cd', 4).length:
                revert with 0, 50
            mem[0] = address(cd[36])
            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 8)
            sub_df9b1af9[mem[(32 * idx) + 140 len 20]][address(cd[36])] += mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]
        else:
            if mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129] > sub_df9b1af9[mem[(32 * idx) + 140 len 20]][address(cd[36])]:
                revert with 0, 'aUserPositions::updateUserIntercnnectBalances: Amount to reduce balance must be no more than current balance'
            if idx >= ('cd', 68).length:
                revert with 0, 50
            if sub_df9b1af9[mem[(32 * idx) + 140 len 20]][address(cd[36])] < mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
                revert with 0, 17
            if idx >= ('cd', 4).length:
                revert with 0, 50
            mem[0] = address(cd[36])
            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 8)
            sub_df9b1af9[mem[(32 * idx) + 140 len 20]][address(cd[36])] -= mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_8a22eee3(?) payable {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (64 * ('cd', 36).length) + 36 <= calldata.size
    if not ('cd', 36).length:
        revert with 0, 'tokens required'
    idx = 0
    while idx < ('cd', 36).length:
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if not address(cd[((64 * idx) + cd[36] + 36)]):
            revert with 0, 'invalid token'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        if cd[((64 * idx) + cd[36] + 68)] <= 0:
            revert with 0, 'invalid amount'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if stor5[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] > !sub_df9b1af9[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)]:
            revert with 0, 17
        if stor5[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] + sub_df9b1af9[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] <= userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])]:
            if 0 < cd[((64 * idx) + cd[36] + 68)]:
                revert with 0, 'insufficient funds'
        else:
            if stor5[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] + sub_df9b1af9[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] < userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])]:
                revert with 0, 17
            if stor5[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] + sub_df9b1af9[address(cd[((64 * idx) + cd[36] + 36)])][address(msg.sender)] - userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])] < cd[((64 * idx) + cd[36] + 68)]:
                revert with 0, 'insufficient funds'
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        if userStrategyBalanceByToken[address(msg.sender)][cd[4]][address(cd[((64 * idx) + cd[36] + 36)])] > !cd[((64 * idx) + cd[36] + 68)]:
            revert with 0, 17
        userStrategyBalanceByToken[address(msg.sender)][cd[4]][address(cd[((64 * idx) + cd[36] + 36)])] += cd[((64 * idx) + cd[36] + 68)]
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((64 * idx) + cd[36] + 36)] == address(cd[((64 * idx) + cd[36] + 36)])
        mem[0] = address(cd[((64 * idx) + cd[36] + 36)])
        mem[32] = sha3(address(msg.sender), 6)
        if userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])] > !cd[((64 * idx) + cd[36] + 68)]:
            revert with 0, 17
        userInvestedAmountByToken[address(msg.sender)][address(cd[((64 * idx) + cd[36] + 36)])] += cd[((64 * idx) + cd[36] + 68)]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    idx = 0
    s = cd[36] + 36
    t = 160
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = address(cd[s])
        mem[t + 32] = cd[(s + 32)]
        idx = idx + 1
        s = s + 64
        t = t + 64
        continue 
    emit 0x334bb5f8: Array(len=('cd', 36).length, data=mem[160 len 64 * ('cd', 36).length]), cd[4], msg.sender
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 8
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    idx = 0
    s = cd[36] + 36
    t = ceil32(return_data.size) + 196
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = address(cd[s])
        mem[t + 32] = cd[(s + 32)]
        idx = idx + 1
        s = s + 64
        t = t + 64
        continue 
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).0x1416110b with:
         gas gas_remaining wei
        args cd[4], Array(len=('cd', 36).length, data=mem[ceil32(return_data.size) + 196 len 64 * ('cd', 36).length])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_f0f25dd5(?) payable {
    require calldata.size - 4 >= 128
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    if ('cd', 68).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 68).length) + 98 < 97 or ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + 97] = ('cd', 68).length
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    idx = 0
    s = cd[68] + 36
    t = ceil32(32 * ('cd', 4).length) + 129
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require calldata.size > cd[100] + 35
    if ('cd', 100).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 100).length) + 99 < 98 or ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + ceil32(32 * ('cd', 100).length) + 99 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 98] = ('cd', 100).length
    require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
    s = cd[100] + 36
    t = ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 130
    idx = 0
    while idx < ('cd', 100).length:
        require cd[s] == bool(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if not stor1[msg.sender]:
        revert with 0, 'Controlled::onlyController: Caller is not controller'
    if ('cd', 4).length != ('cd', 68).length:
        revert with 0, 
                    32,
                    67,
                    0xfe55736572506f736974696f6e733a3a75706461746555736572546f6b656e42,
                    'lances: arrays must be equal len',
                    0x6774680000000000000000000000000000000000000000000000000000000000
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        if idx >= ('cd', 68).length:
            revert with 0, 50
        if 0 == mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
            revert with 0, 
                        32,
                        101,
                        0xfe55736572506f736974696f6e733a3a75706461746555736572546f6b656e42,
                        'lances: Must have a positive or ',
                        'negative number to change the ba',
                        0x6c616e6365000000000000000000000000000000000000000000000000000000
        if idx >= ('cd', 100).length:
            revert with 0, 50
        if idx >= ('cd', 68).length:
            revert with 0, 50
        if mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + ceil32(32 * ('cd', 68).length) + 130]:
            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[36])] > !mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
                revert with 0, 17
            if idx >= ('cd', 4).length:
                revert with 0, 50
            mem[0] = address(cd[36])
            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
            stor5[mem[(32 * idx) + 140 len 20]][address(cd[36])] += mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]
        else:
            if mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129] > stor5[mem[(32 * idx) + 140 len 20]][address(cd[36])]:
                revert with 0, 
                            32,
                            101,
                            0xfe55736572506f736974696f6e733a3a75706461746555736572546f6b656e42,
                            'lances: Amount to reduce balance',
                            ' must be no more than current ba',
                            0x6c616e6365000000000000000000000000000000000000000000000000000000
            if idx >= ('cd', 68).length:
                revert with 0, 50
            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[36])] < mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]:
                revert with 0, 17
            if idx >= ('cd', 4).length:
                revert with 0, 50
            mem[0] = address(cd[36])
            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
            stor5[mem[(32 * idx) + 140 len 20]][address(cd[36])] -= mem[(32 * idx) + ceil32(32 * ('cd', 4).length) + 129]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_6e10e5b7(?) payable {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    mem[0] = msg.sender
    if not stor1[msg.sender]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Controlled::onlyController: Caller is not controller'
    mem[100] = 8
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 8
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    idx = 0
    while idx < ('cd', 36).length:
        require cd[(cd[36] + (32 * idx) + 36)] < calldata.size + -cd[36] - 99
        require cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)] == address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[(cd[36] + (32 * idx) + 36)] < calldata.size + -cd[36] - 99
        require cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] < calldata.size + -cd[(cd[36] + (32 * idx) + 36)] + -cd[36] - 67
        require cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)] <= test266151307()
        require cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68 <= calldata.size - (64 * cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)])
        if not cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
            revert with 0, 'tokens required'
        s = 0
        while s < cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
            require cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)] == address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])
            if not address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)]):
                revert with 0, 'invalid token'
            if s >= cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
                revert with 0, 50
            if cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)] <= 0:
                revert with 0, 'invalid amount'
            if s >= cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
                revert with 0, 50
            require cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)] == address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])
            if stor5[address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])][address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])] > !cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]:
                revert with 0, 17
            stor5[address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])][address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])] += cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]
            if s >= cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
                revert with 0, 50
            require cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)] == address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])
            if userStrategyBalanceByToken[address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])][cd[4]][address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])] > !cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]:
                revert with 0, 17
            userStrategyBalanceByToken[address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])][cd[4]][address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])] += cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]
            if s >= cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
                revert with 0, 50
            require cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)] == address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])
            mem[0] = address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])
            mem[32] = sha3(address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)]), 6)
            if userInvestedAmountByToken[address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])][address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])] > !cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]:
                revert with 0, 17
            userInvestedAmountByToken[address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])][address(cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68)])] += cd[((64 * s) + cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 100)]
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        mem[mem[64]] = 32
        mem[mem[64] + 32] = cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]
        s = 0
        t = cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68
        u = mem[64] + 64
        while s < cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
            require cd[t] == address(cd[t])
            mem[u] = address(cd[t])
            mem[u + 32] = cd[(t + 32)]
            s = s + 1
            t = t + 64
            u = u + 64
            continue 
        emit 0x334bb5f8: mem[mem[64] len u - mem[64]], cd[4], address(cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 36)])
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[(cd[36] + (32 * idx) + 36)] < calldata.size + -cd[36] - 99
        require cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] < calldata.size + -cd[(cd[36] + (32 * idx) + 36)] + -cd[36] - 67
        require cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)] <= test266151307()
        require cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68 <= calldata.size - (64 * cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)])
        mem[mem[64]] = 0x85039aa600000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = cd[4]
        mem[mem[64] + 36] = 64
        mem[mem[64] + 68] = cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]
        s = 0
        t = cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 68
        u = mem[64] + 100
        while s < cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + cd[(cd[(cd[36] + (32 * idx) + 36)] + cd[36] + 68)] + 36)]:
            require cd[t] == address(cd[t])
            mem[u] = address(cd[t])
            mem[u + 32] = cd[(t + 32)]
            s = s + 1
            t = t + 64
            u = u + 64
            continue 
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len u + -mem[64] - 4]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_a810b378(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] == address(cd[4])
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 36).length
    if not ('cd', 36).length:
        if ('cd', 68).length > test266151307():
            revert with 0, 65
        mem[(32 * ('cd', 36).length) + 128] = ('cd', 68).length
        mem[64] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160
        if not ('cd', 68).length:
            idx = 0
            while idx < ('cd', 68).length:
                require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
                if idx >= mem[(32 * ('cd', 36).length) + 128]:
                    revert with 0, 50
                mem[mem[(32 * idx) + (32 * ('cd', 36).length) + 160]] = address(cd[((32 * idx) + cd[68] + 36)])
                if idx >= ('cd', 68).length:
                    revert with 0, 50
                require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
                mem[0] = address(cd[4])
                mem[32] = sha3(address(cd[((32 * idx) + cd[68] + 36)]), 5)
                if idx >= mem[(32 * ('cd', 36).length) + 128]:
                    revert with 0, 50
                mem[mem[(32 * idx) + (32 * ('cd', 36).length) + 160] + 32] = stor5[address(cd[((32 * idx) + cd[68] + 36)])][address(cd[4])]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
            mem[mem[64] + 4] = 8
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 8
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _664 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _668 = mem[_664]
            require mem[_664] == mem[_664 + 12 len 20]
            idx = 0
            while idx < ('cd', 36).length:
                mem[mem[64]] = 0xcfc0cc3400000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = cd[((32 * idx) + cd[36] + 36)]
                require ext_code.size(address(_668))
                staticcall address(_668).getStrategy(uint256 arg1) with:
                        gas gas_remaining wei
                       args cd[((32 * idx) + cd[36] + 36)]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1326 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1332 = mem[_1326]
                require mem[_1326] <= test266151307()
                require return_data.size - mem[_1326] >= 96
                if not bool(_1326 + ceil32(return_data.size) + 96 <= test266151307()):
                    revert with 0, 65
                mem[64] = _1326 + ceil32(return_data.size) + 96
                _1348 = mem[_1326 + _1332]
                require mem[_1326 + _1332] <= test266151307()
                require _1326 + return_data.size > _1326 + _1332 + mem[_1326 + _1332] + 31
                _1354 = mem[_1326 + _1332 + mem[_1326 + _1332]]
                if mem[_1326 + _1332 + mem[_1326 + _1332]] > test266151307():
                    revert with 0, 65
                if ceil32(ceil32(mem[_1326 + _1332 + mem[_1326 + _1332]])) + 97 < 96 or _1326 + ceil32(return_data.size) + ceil32(ceil32(mem[_1326 + _1332 + mem[_1326 + _1332]])) + 97 > test266151307():
                    revert with 0, 65
                mem[64] = _1326 + ceil32(return_data.size) + ceil32(ceil32(mem[_1326 + _1332 + mem[_1326 + _1332]])) + 97
                mem[_1326 + ceil32(return_data.size) + 96] = _1354
                require _1332 + _1348 + _1354 + 32 <= return_data.size
                s = 0
                while s < _1354:
                    mem[s + _1326 + ceil32(return_data.size) + 128] = mem[s + _1326 + _1332 + _1348 + 32]
                    s = s + 32
                    continue 
                if ceil32(_1354) <= _1354:
                    mem[_1326 + ceil32(return_data.size)] = _1326 + ceil32(return_data.size) + 96
                    _1969 = mem[_1326 + _1332 + 32]
                    require mem[_1326 + _1332 + 32] <= test266151307()
                    require _1326 + _1332 + mem[_1326 + _1332 + 32] + 31 < _1326 + return_data.size
                    _1986 = mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]
                    if mem[_1326 + _1332 + mem[_1326 + _1332 + 32]] > test266151307():
                        revert with 0, 65
                    _2002 = mem[64]
                    if mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1
                    mem[_2002] = _1986
                    require _1332 + _1969 + (64 * _1986) + 32 <= return_data.size
                    s = 0
                    t = _1326 + _1332 + _1969 + 32
                    u = _2002 + 32
                    while s < _1986:
                        require _1326 + return_data.size - t >= 64
                        _2600 = mem[64]
                        if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                            revert with 0, 65
                        mem[64] = mem[64] + 64
                        require mem[t] == mem[t + 12 len 20]
                        mem[_2600] = mem[t]
                        require mem[t + 32] == mem[t + 60 len 4]
                        mem[_2600 + 32] = mem[t + 32]
                        mem[u] = _2600
                        s = s + 1
                        t = t + 64
                        u = u + 32
                        continue 
                    mem[_1326 + ceil32(return_data.size) + 32] = _2002
                    _2593 = mem[_1326 + _1332 + 64]
                    require mem[_1326 + _1332 + 64] <= test266151307()
                    require _1326 + _1332 + mem[_1326 + _1332 + 64] + 31 < _1326 + return_data.size
                    _2613 = mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]
                    if mem[_1326 + _1332 + mem[_1326 + _1332 + 64]] > test266151307():
                        revert with 0, 65
                    _2636 = mem[64]
                    if mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1
                    mem[_2636] = _2613
                    require return_data.size >= _1332 + _2593 + (96 * _2613) + 32
                    s = 0
                    t = _1326 + _1332 + _2593 + 32
                    u = _2636 + 32
                    while s < _2613:
                        require _1326 + return_data.size - t >= 96
                        _3190 = mem[64]
                        if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                            revert with 0, 65
                        mem[64] = mem[64] + 96
                        mem[_3190] = mem[t]
                        require mem[t + 32] == mem[t + 44 len 20]
                        mem[_3190 + 32] = mem[t + 32]
                        require mem[t + 64] == mem[t + 92 len 4]
                        mem[_3190 + 64] = mem[t + 64]
                        mem[u] = _3190
                        s = s + 1
                        t = t + 96
                        u = u + 32
                        continue 
                    mem[_1326 + ceil32(return_data.size) + 64] = _2636
                    _3189 = mem[_2636]
                    if mem[_2636] > test266151307():
                        revert with 0, 65
                    _3201 = mem[64]
                    mem[mem[64]] = mem[_2636]
                    mem[64] = mem[64] + (32 * _3189) + 32
                    if not _3189:
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128] + 32] = _3201
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                        _3711 = mem[_2636]
                        s = 0
                        while s < _3711:
                            if s >= mem[_2636]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _2636 + 32] + 44 len 20]
                            if idx >= ('cd', 36).length:
                                revert with 0, 50
                            mem[0] = cd[((32 * idx) + cd[36] + 36)]
                            mem[32] = sha3(address(cd[4]), 7)
                            if s >= mem[_2636]:
                                revert with 0, 50
                            mem[0] = mem[mem[(32 * s) + _2636 + 32] + 44 len 20]
                            mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                            if s == -1:
                                revert with 0, 17
                            _3711 = mem[_2636]
                            s = s + 1
                            continue 
                    else:
                        mem[64] = _3201 + (32 * _3189) + 96
                        mem[_3201 + (32 * _3189) + 32] = 0
                        mem[_3201 + (32 * _3189) + 64] = 0
                        mem[var100001] = _3201 + (32 * _3189) + 32
                        s = var100001
                        t = var100002
                        while _1326 + _1332 + _2593 + (96 * _2613) + 31:
                            mem[64] = mem[64] + 64
                            mem[_3201 + (32 * _3189) + 32] = 0
                            mem[_3201 + (32 * _3189) + 64] = 0
                            mem[s + 32] = _3201 + (32 * _3189) + 32
                            s = s + 32
                            t = _1326 + _1332 + _2593 + (96 * _2613) + 31
                            continue 
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128] + 32] = _3201
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                        _4570 = mem[_2636]
                        s = 0
                        while s < _4570:
                            if s >= mem[_2636]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _2636 + 32] + 44 len 20]
                            if idx >= ('cd', 36).length:
                                revert with 0, 50
                            mem[0] = cd[((32 * idx) + cd[36] + 36)]
                            mem[32] = sha3(address(cd[4]), 7)
                            if s >= mem[_2636]:
                                revert with 0, 50
                            mem[0] = mem[mem[(32 * s) + _2636 + 32] + 44 len 20]
                            mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                            if s == -1:
                                revert with 0, 17
                            _4570 = mem[_2636]
                            s = s + 1
                            continue 
                else:
                    mem[_1354 + _1326 + ceil32(return_data.size) + 128] = 0
                    mem[_1326 + ceil32(return_data.size)] = _1326 + ceil32(return_data.size) + 96
                    _1970 = mem[_1326 + _1332 + 32]
                    require mem[_1326 + _1332 + 32] <= test266151307()
                    require _1326 + _1332 + mem[_1326 + _1332 + 32] + 31 < _1326 + return_data.size
                    _1987 = mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]
                    if mem[_1326 + _1332 + mem[_1326 + _1332 + 32]] > test266151307():
                        revert with 0, 65
                    _2003 = mem[64]
                    if mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 32]]) + 1
                    mem[_2003] = _1987
                    require _1332 + _1970 + (64 * _1987) + 32 <= return_data.size
                    s = 0
                    t = _1326 + _1332 + _1970 + 32
                    u = _2003 + 32
                    while s < _1987:
                        require _1326 + return_data.size - t >= 64
                        _2601 = mem[64]
                        if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                            revert with 0, 65
                        mem[64] = mem[64] + 64
                        require mem[t] == mem[t + 12 len 20]
                        mem[_2601] = mem[t]
                        require mem[t + 32] == mem[t + 60 len 4]
                        mem[_2601 + 32] = mem[t + 32]
                        mem[u] = _2601
                        s = s + 1
                        t = t + 64
                        u = u + 32
                        continue 
                    mem[_1326 + ceil32(return_data.size) + 32] = _2003
                    _2594 = mem[_1326 + _1332 + 64]
                    require mem[_1326 + _1332 + 64] <= test266151307()
                    require _1326 + _1332 + mem[_1326 + _1332 + 64] + 31 < _1326 + return_data.size
                    _2615 = mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]
                    if mem[_1326 + _1332 + mem[_1326 + _1332 + 64]] > test266151307():
                        revert with 0, 65
                    _2638 = mem[64]
                    if mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + ceil32(32 * mem[_1326 + _1332 + mem[_1326 + _1332 + 64]]) + 1
                    mem[_2638] = _2615
                    require return_data.size >= _1332 + _2594 + (96 * _2615) + 32
                    s = 0
                    t = _1326 + _1332 + _2594 + 32
                    u = _2638 + 32
                    while s < _2615:
                        require _1326 + return_data.size - t >= 96
                        _3193 = mem[64]
                        if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                            revert with 0, 65
                        mem[64] = mem[64] + 96
                        mem[_3193] = mem[t]
                        require mem[t + 32] == mem[t + 44 len 20]
                        mem[_3193 + 32] = mem[t + 32]
                        require mem[t + 64] == mem[t + 92 len 4]
                        mem[_3193 + 64] = mem[t + 64]
                        mem[u] = _3193
                        s = s + 1
                        t = t + 96
                        u = u + 32
                        continue 
                    mem[_1326 + ceil32(return_data.size) + 64] = _2638
                    _3192 = mem[_2638]
                    if mem[_2638] > test266151307():
                        revert with 0, 65
                    _3202 = mem[64]
                    mem[mem[64]] = mem[_2638]
                    mem[64] = mem[64] + (32 * _3192) + 32
                    if not _3192:
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128] + 32] = _3202
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                        _3712 = mem[_2638]
                        s = 0
                        while s < _3712:
                            if s >= mem[_2638]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _2638 + 32] + 44 len 20]
                            if idx >= ('cd', 36).length:
                                revert with 0, 50
                            mem[0] = cd[((32 * idx) + cd[36] + 36)]
                            mem[32] = sha3(address(cd[4]), 7)
                            if s >= mem[_2638]:
                                revert with 0, 50
                            mem[0] = mem[mem[(32 * s) + _2638 + 32] + 44 len 20]
                            mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                            if s == -1:
                                revert with 0, 17
                            _3712 = mem[_2638]
                            s = s + 1
                            continue 
                    else:
                        mem[64] = _3202 + (32 * _3192) + 96
                        mem[_3202 + (32 * _3192) + 32] = 0
                        mem[_3202 + (32 * _3192) + 64] = 0
                        mem[var100001] = _3202 + (32 * _3192) + 32
                        s = var100001
                        t = var100002
                        while _1326 + _1332 + _2594 + (96 * _2615) + 31:
                            mem[64] = mem[64] + 64
                            mem[_3202 + (32 * _3192) + 32] = 0
                            mem[_3202 + (32 * _3192) + 64] = 0
                            mem[s + 32] = _3202 + (32 * _3192) + 32
                            s = s + 32
                            t = _1326 + _1332 + _2594 + (96 * _2615) + 31
                            continue 
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128] + 32] = _3202
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                        _4571 = mem[_2638]
                        s = 0
                        while s < _4571:
                            if s >= mem[_2638]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _2638 + 32] + 44 len 20]
                            if idx >= ('cd', 36).length:
                                revert with 0, 50
                            mem[0] = cd[((32 * idx) + cd[36] + 36)]
                            mem[32] = sha3(address(cd[4]), 7)
                            if s >= mem[_2638]:
                                revert with 0, 50
                            mem[0] = mem[mem[(32 * s) + _2638 + 32] + 44 len 20]
                            mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                            if idx >= mem[96]:
                                revert with 0, 50
                            if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                                revert with 0, 50
                            mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                            if s == -1:
                                revert with 0, 17
                            _4571 = mem[_2638]
                            s = s + 1
                            continue 
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
            _1318 = mem[64]
            mem[mem[64]] = 64
            _1320 = mem[96]
            mem[mem[64] + 64] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 96
            u = mem[64] + (32 * mem[96]) + 96
            while idx < _1320:
                mem[t] = u + -_1318 - 96
                _1960 = mem[s]
                mem[u] = mem[mem[s]]
                _1962 = mem[_1960 + 32]
                mem[u + 32] = 64
                _1966 = mem[_1962]
                mem[u + 64] = mem[_1962]
                v = 0
                w = _1962 + 32
                x = u + 96
                while v < _1966:
                    _2585 = mem[w]
                    mem[x] = mem[mem[w] + 12 len 20]
                    mem[x + 32] = mem[_2585 + 32]
                    v = v + 1
                    w = w + 32
                    x = x + 64
                    continue 
                v = _1966 + 1
                w = _1962 + (32 * _1966) + 64
                t = t + 32
                u = u + (64 * _1966) + 96
                continue 
            mem[_1318 + 32] = u - _1318
            _1965 = mem[(32 * ('cd', 36).length) + 128]
            mem[u] = mem[(32 * ('cd', 36).length) + 128]
            t = 0
            v = (32 * ('cd', 36).length) + 160
            w = u + 32
            while t < _1965:
                _2582 = mem[v]
                mem[w] = mem[mem[v] + 12 len 20]
                mem[w + 32] = mem[_2582 + 32]
                t = t + 1
                v = v + 32
                w = w + 64
                continue 
            return memory
              from mem[64]
               len u + (64 * _1965) + -mem[64] + 32
        mem[64] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 224
        mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160] = 0
        mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = 0
        mem[var28001] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160
        s = var28001
        idx = var28002
        while idx - 1:
            mem[64] = mem[64] + 64
            mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160] = 0
            mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = 0
            mem[s + 32] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160
            s = s + 32
            idx = idx - 1
            continue 
        idx = 0
        while idx < ('cd', 68).length:
            require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
            if idx >= mem[(32 * ('cd', 36).length) + 128]:
                revert with 0, 50
            mem[mem[(32 * idx) + (32 * ('cd', 36).length) + 160]] = address(cd[((32 * idx) + cd[68] + 36)])
            if idx >= ('cd', 68).length:
                revert with 0, 50
            require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
            mem[0] = address(cd[4])
            mem[32] = sha3(address(cd[((32 * idx) + cd[68] + 36)]), 5)
            if idx >= mem[(32 * ('cd', 36).length) + 128]:
                revert with 0, 50
            mem[mem[(32 * idx) + (32 * ('cd', 36).length) + 160] + 32] = stor5[address(cd[((32 * idx) + cd[68] + 36)])][address(cd[4])]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64] + 4] = 8
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 8
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1988 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1992 = mem[_1988]
        require mem[_1988] == mem[_1988 + 12 len 20]
        idx = 0
        while idx < ('cd', 36).length:
            mem[mem[64]] = 0xcfc0cc3400000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = cd[((32 * idx) + cd[36] + 36)]
            require ext_code.size(address(_1992))
            staticcall address(_1992).getStrategy(uint256 arg1) with:
                    gas gas_remaining wei
                   args cd[((32 * idx) + cd[36] + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2620 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2627 = mem[_2620]
            require mem[_2620] <= test266151307()
            require return_data.size - mem[_2620] >= 96
            if not bool(_2620 + ceil32(return_data.size) + 96 <= test266151307()):
                revert with 0, 65
            mem[64] = _2620 + ceil32(return_data.size) + 96
            _2645 = mem[_2620 + _2627]
            require mem[_2620 + _2627] <= test266151307()
            require _2620 + return_data.size > _2620 + _2627 + mem[_2620 + _2627] + 31
            _2646 = mem[_2620 + _2627 + mem[_2620 + _2627]]
            if mem[_2620 + _2627 + mem[_2620 + _2627]] > test266151307():
                revert with 0, 65
            if ceil32(ceil32(mem[_2620 + _2627 + mem[_2620 + _2627]])) + 97 < 96 or _2620 + ceil32(return_data.size) + ceil32(ceil32(mem[_2620 + _2627 + mem[_2620 + _2627]])) + 97 > test266151307():
                revert with 0, 65
            mem[64] = _2620 + ceil32(return_data.size) + ceil32(ceil32(mem[_2620 + _2627 + mem[_2620 + _2627]])) + 97
            mem[_2620 + ceil32(return_data.size) + 96] = _2646
            require _2627 + _2645 + _2646 + 32 <= return_data.size
            s = 0
            while s < _2646:
                mem[s + _2620 + ceil32(return_data.size) + 128] = mem[s + _2620 + _2627 + _2645 + 32]
                s = s + 32
                continue 
            if ceil32(_2646) <= _2646:
                mem[_2620 + ceil32(return_data.size)] = _2620 + ceil32(return_data.size) + 96
                _3194 = mem[_2620 + _2627 + 32]
                require mem[_2620 + _2627 + 32] <= test266151307()
                require _2620 + _2627 + mem[_2620 + _2627 + 32] + 31 < _2620 + return_data.size
                _3226 = mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]
                if mem[_2620 + _2627 + mem[_2620 + _2627 + 32]] > test266151307():
                    revert with 0, 65
                _3255 = mem[64]
                if mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1
                mem[_3255] = _3226
                require _2627 + _3194 + (64 * _3226) + 32 <= return_data.size
                s = 0
                t = _2620 + _2627 + _3194 + 32
                u = _3255 + 32
                while s < _3226:
                    require _2620 + return_data.size - t >= 64
                    _3744 = mem[64]
                    if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 64
                    require mem[t] == mem[t + 12 len 20]
                    mem[_3744] = mem[t]
                    require mem[t + 32] == mem[t + 60 len 4]
                    mem[_3744 + 32] = mem[t + 32]
                    mem[u] = _3744
                    s = s + 1
                    t = t + 64
                    u = u + 32
                    continue 
                mem[_2620 + ceil32(return_data.size) + 32] = _3255
                _3733 = mem[_2620 + _2627 + 64]
                require mem[_2620 + _2627 + 64] <= test266151307()
                require _2620 + _2627 + mem[_2620 + _2627 + 64] + 31 < _2620 + return_data.size
                _3774 = mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]
                if mem[_2620 + _2627 + mem[_2620 + _2627 + 64]] > test266151307():
                    revert with 0, 65
                _3819 = mem[64]
                if mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1
                mem[_3819] = _3774
                require return_data.size >= _2627 + _3733 + (96 * _3774) + 32
                s = 0
                t = _2620 + _2627 + _3733 + 32
                u = _3819 + 32
                while s < _3774:
                    require _2620 + return_data.size - t >= 96
                    _4213 = mem[64]
                    if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 96
                    mem[_4213] = mem[t]
                    require mem[t + 32] == mem[t + 44 len 20]
                    mem[_4213 + 32] = mem[t + 32]
                    require mem[t + 64] == mem[t + 92 len 4]
                    mem[_4213 + 64] = mem[t + 64]
                    mem[u] = _4213
                    s = s + 1
                    t = t + 96
                    u = u + 32
                    continue 
                mem[_2620 + ceil32(return_data.size) + 64] = _3819
                _4212 = mem[_3819]
                if mem[_3819] > test266151307():
                    revert with 0, 65
                _4228 = mem[64]
                mem[mem[64]] = mem[_3819]
                mem[64] = mem[64] + (32 * _4212) + 32
                if not _4212:
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _4228
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4572 = mem[_3819]
                    s = 0
                    while s < _4572:
                        if s >= mem[_3819]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3819 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3819]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3819 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4572 = mem[_3819]
                        s = s + 1
                        continue 
                else:
                    mem[64] = _4228 + (32 * _4212) + 96
                    mem[_4228 + (32 * _4212) + 32] = 0
                    mem[_4228 + (32 * _4212) + 64] = 0
                    mem[var107001] = _4228 + (32 * _4212) + 32
                    s = var107001
                    t = var107002
                    while _2620 + _2627 + _3733 + (96 * _3774) + 31:
                        mem[64] = mem[64] + 64
                        mem[_4228 + (32 * _4212) + 32] = 0
                        mem[_4228 + (32 * _4212) + 64] = 0
                        mem[s + 32] = _4228 + (32 * _4212) + 32
                        s = s + 32
                        t = _2620 + _2627 + _3733 + (96 * _3774) + 31
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _4228
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _5042 = mem[_3819]
                    s = 0
                    while s < _5042:
                        if s >= mem[_3819]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3819 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3819]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3819 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _5042 = mem[_3819]
                        s = s + 1
                        continue 
            else:
                mem[_2646 + _2620 + ceil32(return_data.size) + 128] = 0
                mem[_2620 + ceil32(return_data.size)] = _2620 + ceil32(return_data.size) + 96
                _3195 = mem[_2620 + _2627 + 32]
                require mem[_2620 + _2627 + 32] <= test266151307()
                require _2620 + _2627 + mem[_2620 + _2627 + 32] + 31 < _2620 + return_data.size
                _3227 = mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]
                if mem[_2620 + _2627 + mem[_2620 + _2627 + 32]] > test266151307():
                    revert with 0, 65
                _3256 = mem[64]
                if mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 32]]) + 1
                mem[_3256] = _3227
                require _2627 + _3195 + (64 * _3227) + 32 <= return_data.size
                s = 0
                t = _2620 + _2627 + _3195 + 32
                u = _3256 + 32
                while s < _3227:
                    require _2620 + return_data.size - t >= 64
                    _3745 = mem[64]
                    if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 64
                    require mem[t] == mem[t + 12 len 20]
                    mem[_3745] = mem[t]
                    require mem[t + 32] == mem[t + 60 len 4]
                    mem[_3745 + 32] = mem[t + 32]
                    mem[u] = _3745
                    s = s + 1
                    t = t + 64
                    u = u + 32
                    continue 
                mem[_2620 + ceil32(return_data.size) + 32] = _3256
                _3734 = mem[_2620 + _2627 + 64]
                require mem[_2620 + _2627 + 64] <= test266151307()
                require _2620 + _2627 + mem[_2620 + _2627 + 64] + 31 < _2620 + return_data.size
                _3776 = mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]
                if mem[_2620 + _2627 + mem[_2620 + _2627 + 64]] > test266151307():
                    revert with 0, 65
                _3821 = mem[64]
                if mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_2620 + _2627 + mem[_2620 + _2627 + 64]]) + 1
                mem[_3821] = _3776
                require return_data.size >= _2627 + _3734 + (96 * _3776) + 32
                s = 0
                t = _2620 + _2627 + _3734 + 32
                u = _3821 + 32
                while s < _3776:
                    require _2620 + return_data.size - t >= 96
                    _4216 = mem[64]
                    if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 96
                    mem[_4216] = mem[t]
                    require mem[t + 32] == mem[t + 44 len 20]
                    mem[_4216 + 32] = mem[t + 32]
                    require mem[t + 64] == mem[t + 92 len 4]
                    mem[_4216 + 64] = mem[t + 64]
                    mem[u] = _4216
                    s = s + 1
                    t = t + 96
                    u = u + 32
                    continue 
                mem[_2620 + ceil32(return_data.size) + 64] = _3821
                _4215 = mem[_3821]
                if mem[_3821] > test266151307():
                    revert with 0, 65
                _4229 = mem[64]
                mem[mem[64]] = mem[_3821]
                mem[64] = mem[64] + (32 * _4215) + 32
                if not _4215:
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _4229
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4573 = mem[_3821]
                    s = 0
                    while s < _4573:
                        if s >= mem[_3821]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3821 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3821]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3821 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4573 = mem[_3821]
                        s = s + 1
                        continue 
                else:
                    mem[64] = _4229 + (32 * _4215) + 96
                    mem[_4229 + (32 * _4215) + 32] = 0
                    mem[_4229 + (32 * _4215) + 64] = 0
                    mem[var107001] = _4229 + (32 * _4215) + 32
                    s = var107001
                    t = var107002
                    while _2620 + _2627 + _3734 + (96 * _3776) + 31:
                        mem[64] = mem[64] + 64
                        mem[_4229 + (32 * _4215) + 32] = 0
                        mem[_4229 + (32 * _4215) + 64] = 0
                        mem[s + 32] = _4229 + (32 * _4215) + 32
                        s = s + 32
                        t = _2620 + _2627 + _3734 + (96 * _3776) + 31
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _4229
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _5043 = mem[_3821]
                    s = 0
                    while s < _5043:
                        if s >= mem[_3821]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3821 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3821]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3821 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _5043 = mem[_3821]
                        s = s + 1
                        continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _2595 = mem[64]
        mem[mem[64]] = 64
        _2602 = mem[96]
        mem[mem[64] + 64] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 96
        u = mem[64] + (32 * mem[96]) + 96
        while idx < _2602:
            mem[t] = u + -_2595 - 96
            _3172 = mem[s]
            mem[u] = mem[mem[s]]
            _3174 = mem[_3172 + 32]
            mem[u + 32] = 64
            _3183 = mem[_3174]
            mem[u + 64] = mem[_3174]
            v = 0
            w = _3174 + 32
            x = u + 96
            while v < _3183:
                _3720 = mem[w]
                mem[x] = mem[mem[w] + 12 len 20]
                mem[x + 32] = mem[_3720 + 32]
                v = v + 1
                w = w + 32
                x = x + 64
                continue 
            v = _3183 + 1
            w = _3174 + (32 * _3183) + 64
            t = t + 32
            u = u + (64 * _3183) + 96
            continue 
        mem[_2595 + 32] = u - _2595
        _3182 = mem[(32 * ('cd', 36).length) + 128]
        mem[u] = mem[(32 * ('cd', 36).length) + 128]
        t = 0
        v = (32 * ('cd', 36).length) + 160
        w = u + 32
        while t < _3182:
            _3717 = mem[v]
            mem[w] = mem[mem[v] + 12 len 20]
            mem[w + 32] = mem[_3717 + 32]
            t = t + 1
            v = v + 32
            w = w + 64
            continue 
        return memory
          from mem[64]
           len u + (64 * _3182) + -mem[64] + 32
    mem[64] = (32 * ('cd', 36).length) + 192
    mem[(32 * ('cd', 36).length) + 128] = 0
    mem[(32 * ('cd', 36).length) + 160] = 96
    mem[128] = (32 * ('cd', 36).length) + 128
    s = 128
    idx = ('cd', 36).length
    while idx - 1:
        mem[64] = mem[64] + 64
        mem[(32 * ('cd', 36).length) + 128] = 0
        mem[(32 * ('cd', 36).length) + 160] = 96
        mem[s + 32] = (32 * ('cd', 36).length) + 128
        s = s + 32
        idx = idx - 1
        continue 
    if ('cd', 68).length > test266151307():
        revert with 0, 65
    _662 = mem[64]
    mem[mem[64]] = ('cd', 68).length
    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
    if not ('cd', 68).length:
        idx = 0
        while idx < ('cd', 68).length:
            require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
            if idx >= mem[_662]:
                revert with 0, 50
            mem[mem[(32 * idx) + _662 + 32]] = address(cd[((32 * idx) + cd[68] + 36)])
            if idx >= ('cd', 68).length:
                revert with 0, 50
            require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
            mem[0] = address(cd[4])
            mem[32] = sha3(address(cd[((32 * idx) + cd[68] + 36)]), 5)
            if idx >= mem[_662]:
                revert with 0, 50
            mem[mem[(32 * idx) + _662 + 32] + 32] = stor5[address(cd[((32 * idx) + cd[68] + 36)])][address(cd[4])]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64] + 4] = 8
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 8
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1330 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1340 = mem[_1330]
        require mem[_1330] == mem[_1330 + 12 len 20]
        idx = 0
        while idx < ('cd', 36).length:
            mem[mem[64]] = 0xcfc0cc3400000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = cd[((32 * idx) + cd[36] + 36)]
            require ext_code.size(address(_1340))
            staticcall address(_1340).getStrategy(uint256 arg1) with:
                    gas gas_remaining wei
                   args cd[((32 * idx) + cd[36] + 36)]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1983 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1991 = mem[_1983]
            require mem[_1983] <= test266151307()
            require return_data.size - mem[_1983] >= 96
            if not bool(_1983 + ceil32(return_data.size) + 96 <= test266151307()):
                revert with 0, 65
            mem[64] = _1983 + ceil32(return_data.size) + 96
            _2007 = mem[_1983 + _1991]
            require mem[_1983 + _1991] <= test266151307()
            require _1983 + return_data.size > _1983 + _1991 + mem[_1983 + _1991] + 31
            _2011 = mem[_1983 + _1991 + mem[_1983 + _1991]]
            if mem[_1983 + _1991 + mem[_1983 + _1991]] > test266151307():
                revert with 0, 65
            if ceil32(ceil32(mem[_1983 + _1991 + mem[_1983 + _1991]])) + 97 < 96 or _1983 + ceil32(return_data.size) + ceil32(ceil32(mem[_1983 + _1991 + mem[_1983 + _1991]])) + 97 > test266151307():
                revert with 0, 65
            mem[64] = _1983 + ceil32(return_data.size) + ceil32(ceil32(mem[_1983 + _1991 + mem[_1983 + _1991]])) + 97
            mem[_1983 + ceil32(return_data.size) + 96] = _2011
            require _1991 + _2007 + _2011 + 32 <= return_data.size
            s = 0
            while s < _2011:
                mem[s + _1983 + ceil32(return_data.size) + 128] = mem[s + _1983 + _1991 + _2007 + 32]
                s = s + 32
                continue 
            if ceil32(_2011) <= _2011:
                mem[_1983 + ceil32(return_data.size)] = _1983 + ceil32(return_data.size) + 96
                _2604 = mem[_1983 + _1991 + 32]
                require mem[_1983 + _1991 + 32] <= test266151307()
                require _1983 + _1991 + mem[_1983 + _1991 + 32] + 31 < _1983 + return_data.size
                _2624 = mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]
                if mem[_1983 + _1991 + mem[_1983 + _1991 + 32]] > test266151307():
                    revert with 0, 65
                _2643 = mem[64]
                if mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1
                mem[_2643] = _2624
                require _1991 + _2604 + (64 * _2624) + 32 <= return_data.size
                s = 0
                t = _1983 + _1991 + _2604 + 32
                u = _2643 + 32
                while s < _2624:
                    require _1983 + return_data.size - t >= 64
                    _3197 = mem[64]
                    if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 64
                    require mem[t] == mem[t + 12 len 20]
                    mem[_3197] = mem[t]
                    require mem[t + 32] == mem[t + 60 len 4]
                    mem[_3197 + 32] = mem[t + 32]
                    mem[u] = _3197
                    s = s + 1
                    t = t + 64
                    u = u + 32
                    continue 
                mem[_1983 + ceil32(return_data.size) + 32] = _2643
                _3184 = mem[_1983 + _1991 + 64]
                require mem[_1983 + _1991 + 64] <= test266151307()
                require _1983 + _1991 + mem[_1983 + _1991 + 64] + 31 < _1983 + return_data.size
                _3215 = mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]
                if mem[_1983 + _1991 + mem[_1983 + _1991 + 64]] > test266151307():
                    revert with 0, 65
                _3247 = mem[64]
                if mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1
                mem[_3247] = _3215
                require return_data.size >= _1991 + _3184 + (96 * _3215) + 32
                s = 0
                t = _1983 + _1991 + _3184 + 32
                u = _3247 + 32
                while s < _3215:
                    require _1983 + return_data.size - t >= 96
                    _3748 = mem[64]
                    if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 96
                    mem[_3748] = mem[t]
                    require mem[t + 32] == mem[t + 44 len 20]
                    mem[_3748 + 32] = mem[t + 32]
                    require mem[t + 64] == mem[t + 92 len 4]
                    mem[_3748 + 64] = mem[t + 64]
                    mem[u] = _3748
                    s = s + 1
                    t = t + 96
                    u = u + 32
                    continue 
                mem[_1983 + ceil32(return_data.size) + 64] = _3247
                _3747 = mem[_3247]
                if mem[_3247] > test266151307():
                    revert with 0, 65
                _3760 = mem[64]
                mem[mem[64]] = mem[_3247]
                mem[64] = mem[64] + (32 * _3747) + 32
                if not _3747:
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _3760
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4189 = mem[_3247]
                    s = 0
                    while s < _4189:
                        if s >= mem[_3247]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3247 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3247]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3247 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4189 = mem[_3247]
                        s = s + 1
                        continue 
                else:
                    mem[64] = _3760 + (32 * _3747) + 96
                    mem[_3760 + (32 * _3747) + 32] = 0
                    mem[_3760 + (32 * _3747) + 64] = 0
                    mem[var104001] = _3760 + (32 * _3747) + 32
                    s = var104001
                    t = var104002
                    while _1983 + _1991 + _3184 + (96 * _3215) + 31:
                        mem[64] = mem[64] + 64
                        mem[_3760 + (32 * _3747) + 32] = 0
                        mem[_3760 + (32 * _3747) + 64] = 0
                        mem[s + 32] = _3760 + (32 * _3747) + 32
                        s = s + 32
                        t = _1983 + _1991 + _3184 + (96 * _3215) + 31
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _3760
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4864 = mem[_3247]
                    s = 0
                    while s < _4864:
                        if s >= mem[_3247]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3247 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3247]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3247 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4864 = mem[_3247]
                        s = s + 1
                        continue 
            else:
                mem[_2011 + _1983 + ceil32(return_data.size) + 128] = 0
                mem[_1983 + ceil32(return_data.size)] = _1983 + ceil32(return_data.size) + 96
                _2605 = mem[_1983 + _1991 + 32]
                require mem[_1983 + _1991 + 32] <= test266151307()
                require _1983 + _1991 + mem[_1983 + _1991 + 32] + 31 < _1983 + return_data.size
                _2625 = mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]
                if mem[_1983 + _1991 + mem[_1983 + _1991 + 32]] > test266151307():
                    revert with 0, 65
                _2644 = mem[64]
                if mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 32]]) + 1
                mem[_2644] = _2625
                require _1991 + _2605 + (64 * _2625) + 32 <= return_data.size
                s = 0
                t = _1983 + _1991 + _2605 + 32
                u = _2644 + 32
                while s < _2625:
                    require _1983 + return_data.size - t >= 64
                    _3198 = mem[64]
                    if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 64
                    require mem[t] == mem[t + 12 len 20]
                    mem[_3198] = mem[t]
                    require mem[t + 32] == mem[t + 60 len 4]
                    mem[_3198 + 32] = mem[t + 32]
                    mem[u] = _3198
                    s = s + 1
                    t = t + 64
                    u = u + 32
                    continue 
                mem[_1983 + ceil32(return_data.size) + 32] = _2644
                _3185 = mem[_1983 + _1991 + 64]
                require mem[_1983 + _1991 + 64] <= test266151307()
                require _1983 + _1991 + mem[_1983 + _1991 + 64] + 31 < _1983 + return_data.size
                _3217 = mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]
                if mem[_1983 + _1991 + mem[_1983 + _1991 + 64]] > test266151307():
                    revert with 0, 65
                _3249 = mem[64]
                if mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + ceil32(32 * mem[_1983 + _1991 + mem[_1983 + _1991 + 64]]) + 1
                mem[_3249] = _3217
                require return_data.size >= _1991 + _3185 + (96 * _3217) + 32
                s = 0
                t = _1983 + _1991 + _3185 + 32
                u = _3249 + 32
                while s < _3217:
                    require _1983 + return_data.size - t >= 96
                    _3751 = mem[64]
                    if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                        revert with 0, 65
                    mem[64] = mem[64] + 96
                    mem[_3751] = mem[t]
                    require mem[t + 32] == mem[t + 44 len 20]
                    mem[_3751 + 32] = mem[t + 32]
                    require mem[t + 64] == mem[t + 92 len 4]
                    mem[_3751 + 64] = mem[t + 64]
                    mem[u] = _3751
                    s = s + 1
                    t = t + 96
                    u = u + 32
                    continue 
                mem[_1983 + ceil32(return_data.size) + 64] = _3249
                _3750 = mem[_3249]
                if mem[_3249] > test266151307():
                    revert with 0, 65
                _3761 = mem[64]
                mem[mem[64]] = mem[_3249]
                mem[64] = mem[64] + (32 * _3750) + 32
                if not _3750:
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _3761
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4190 = mem[_3249]
                    s = 0
                    while s < _4190:
                        if s >= mem[_3249]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3249 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3249]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3249 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4190 = mem[_3249]
                        s = s + 1
                        continue 
                else:
                    mem[64] = _3761 + (32 * _3750) + 96
                    mem[_3761 + (32 * _3750) + 32] = 0
                    mem[_3761 + (32 * _3750) + 64] = 0
                    mem[var104001] = _3761 + (32 * _3750) + 32
                    s = var104001
                    t = var104002
                    while _1983 + _1991 + _3185 + (96 * _3217) + 31:
                        mem[64] = mem[64] + 64
                        mem[_3761 + (32 * _3750) + 32] = 0
                        mem[_3761 + (32 * _3750) + 64] = 0
                        mem[s + 32] = _3761 + (32 * _3750) + 32
                        s = s + 32
                        t = _1983 + _1991 + _3185 + (96 * _3217) + 31
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128] + 32] = _3761
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                    _4865 = mem[_3249]
                    s = 0
                    while s < _4865:
                        if s >= mem[_3249]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _3249 + 32] + 44 len 20]
                        if idx >= ('cd', 36).length:
                            revert with 0, 50
                        mem[0] = cd[((32 * idx) + cd[36] + 36)]
                        mem[32] = sha3(address(cd[4]), 7)
                        if s >= mem[_3249]:
                            revert with 0, 50
                        mem[0] = mem[mem[(32 * s) + _3249 + 32] + 44 len 20]
                        mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                        if idx >= mem[96]:
                            revert with 0, 50
                        if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                            revert with 0, 50
                        mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                        if s == -1:
                            revert with 0, 17
                        _4865 = mem[_3249]
                        s = s + 1
                        continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _1967 = mem[64]
        mem[mem[64]] = 64
        _1971 = mem[96]
        mem[mem[64] + 64] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 96
        u = mem[64] + (32 * mem[96]) + 96
        while idx < _1971:
            mem[t] = u + -_1967 - 96
            _2588 = mem[s]
            mem[u] = mem[mem[s]]
            _2590 = mem[_2588 + 32]
            mem[u + 32] = 64
            _2598 = mem[_2590]
            mem[u + 64] = mem[_2590]
            v = 0
            w = _2590 + 32
            x = u + 96
            while v < _2598:
                _3179 = mem[w]
                mem[x] = mem[mem[w] + 12 len 20]
                mem[x + 32] = mem[_3179 + 32]
                v = v + 1
                w = w + 32
                x = x + 64
                continue 
            v = _2598 + 1
            w = _2590 + (32 * _2598) + 64
            t = t + 32
            u = u + (64 * _2598) + 96
            continue 
        mem[_1967 + 32] = u - _1967
        _2597 = mem[_662]
        mem[u] = mem[_662]
        t = 0
        v = _662 + 32
        w = u + 32
        while t < _2597:
            _3176 = mem[v]
            mem[w] = mem[mem[v] + 12 len 20]
            mem[w + 32] = mem[_3176 + 32]
            t = t + 1
            v = v + 32
            w = w + 64
            continue 
        return memory
          from mem[64]
           len u + (64 * _2597) + -mem[64] + 32
    mem[64] = _662 + (32 * ('cd', 68).length) + 96
    mem[_662 + (32 * ('cd', 68).length) + 32] = 0
    mem[_662 + (32 * ('cd', 68).length) + 64] = 0
    mem[var32001] = _662 + (32 * ('cd', 68).length) + 32
    s = var32001
    idx = var32002
    while idx - 1:
        mem[64] = mem[64] + 64
        mem[_662 + (32 * ('cd', 68).length) + 32] = 0
        mem[_662 + (32 * ('cd', 68).length) + 64] = 0
        mem[s + 32] = _662 + (32 * ('cd', 68).length) + 32
        s = s + 32
        idx = idx - 1
        continue 
    idx = 0
    while idx < ('cd', 68).length:
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        if idx >= mem[_662]:
            revert with 0, 50
        mem[mem[(32 * idx) + _662 + 32]] = address(cd[((32 * idx) + cd[68] + 36)])
        if idx >= ('cd', 68).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[68] + 36)] == address(cd[((32 * idx) + cd[68] + 36)])
        mem[0] = address(cd[4])
        mem[32] = sha3(address(cd[((32 * idx) + cd[68] + 36)]), 5)
        if idx >= mem[_662]:
            revert with 0, 50
        mem[mem[(32 * idx) + _662 + 32] + 32] = stor5[address(cd[((32 * idx) + cd[68] + 36)])][address(cd[4])]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    mem[mem[64] + 4] = 8
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 8
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _2626 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _2634 = mem[_2626]
    require mem[_2626] == mem[_2626 + 12 len 20]
    idx = 0
    while idx < ('cd', 36).length:
        mem[mem[64]] = 0xcfc0cc3400000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = cd[((32 * idx) + cd[36] + 36)]
        require ext_code.size(address(_2634))
        staticcall address(_2634).getStrategy(uint256 arg1) with:
                gas gas_remaining wei
               args cd[((32 * idx) + cd[36] + 36)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3222 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3234 = mem[_3222]
        require mem[_3222] <= test266151307()
        require return_data.size - mem[_3222] >= 96
        if not bool(_3222 + ceil32(return_data.size) + 96 <= test266151307()):
            revert with 0, 65
        mem[64] = _3222 + ceil32(return_data.size) + 96
        _3275 = mem[_3222 + _3234]
        require mem[_3222 + _3234] <= test266151307()
        require _3222 + return_data.size > _3222 + _3234 + mem[_3222 + _3234] + 31
        _3288 = mem[_3222 + _3234 + mem[_3222 + _3234]]
        if mem[_3222 + _3234 + mem[_3222 + _3234]] > test266151307():
            revert with 0, 65
        if ceil32(ceil32(mem[_3222 + _3234 + mem[_3222 + _3234]])) + 97 < 96 or _3222 + ceil32(return_data.size) + ceil32(ceil32(mem[_3222 + _3234 + mem[_3222 + _3234]])) + 97 > test266151307():
            revert with 0, 65
        mem[64] = _3222 + ceil32(return_data.size) + ceil32(ceil32(mem[_3222 + _3234 + mem[_3222 + _3234]])) + 97
        mem[_3222 + ceil32(return_data.size) + 96] = _3288
        require _3234 + _3275 + _3288 + 32 <= return_data.size
        s = 0
        while s < _3288:
            mem[s + _3222 + ceil32(return_data.size) + 128] = mem[s + _3222 + _3234 + _3275 + 32]
            s = s + 32
            continue 
        if ceil32(_3288) <= _3288:
            mem[_3222 + ceil32(return_data.size)] = _3222 + ceil32(return_data.size) + 96
            _3752 = mem[_3222 + _3234 + 32]
            require mem[_3222 + _3234 + 32] <= test266151307()
            require _3222 + _3234 + mem[_3222 + _3234 + 32] + 31 < _3222 + return_data.size
            _3797 = mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]
            if mem[_3222 + _3234 + mem[_3222 + _3234 + 32]] > test266151307():
                revert with 0, 65
            _3837 = mem[64]
            if mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1
            mem[_3837] = _3797
            require _3234 + _3752 + (64 * _3797) + 32 <= return_data.size
            s = 0
            t = _3222 + _3234 + _3752 + 32
            u = _3837 + 32
            while s < _3797:
                require _3222 + return_data.size - t >= 64
                _4224 = mem[64]
                if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + 64
                require mem[t] == mem[t + 12 len 20]
                mem[_4224] = mem[t]
                require mem[t + 32] == mem[t + 60 len 4]
                mem[_4224 + 32] = mem[t + 32]
                mem[u] = _4224
                s = s + 1
                t = t + 64
                u = u + 32
                continue 
            mem[_3222 + ceil32(return_data.size) + 32] = _3837
            _4207 = mem[_3222 + _3234 + 64]
            require mem[_3222 + _3234 + 64] <= test266151307()
            require _3222 + _3234 + mem[_3222 + _3234 + 64] + 31 < _3222 + return_data.size
            _4250 = mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]
            if mem[_3222 + _3234 + mem[_3222 + _3234 + 64]] > test266151307():
                revert with 0, 65
            _4302 = mem[64]
            if mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1
            mem[_4302] = _4250
            require return_data.size >= _3234 + _4207 + (96 * _4250) + 32
            s = 0
            t = _3222 + _3234 + _4207 + 32
            u = _4302 + 32
            while s < _4250:
                require _3222 + return_data.size - t >= 96
                _4610 = mem[64]
                if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + 96
                mem[_4610] = mem[t]
                require mem[t + 32] == mem[t + 44 len 20]
                mem[_4610 + 32] = mem[t + 32]
                require mem[t + 64] == mem[t + 92 len 4]
                mem[_4610 + 64] = mem[t + 64]
                mem[u] = _4610
                s = s + 1
                t = t + 96
                u = u + 32
                continue 
            mem[_3222 + ceil32(return_data.size) + 64] = _4302
            _4609 = mem[_4302]
            if mem[_4302] > test266151307():
                revert with 0, 65
            _4626 = mem[64]
            mem[mem[64]] = mem[_4302]
            mem[64] = mem[64] + (32 * _4609) + 32
            if not _4609:
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128] + 32] = _4626
                if idx >= ('cd', 36).length:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                _4866 = mem[_4302]
                s = 0
                while s < _4866:
                    if s >= mem[_4302]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _4302 + 32] + 44 len 20]
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    mem[0] = cd[((32 * idx) + cd[36] + 36)]
                    mem[32] = sha3(address(cd[4]), 7)
                    if s >= mem[_4302]:
                        revert with 0, 50
                    mem[0] = mem[mem[(32 * s) + _4302 + 32] + 44 len 20]
                    mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                    if s == -1:
                        revert with 0, 17
                    _4866 = mem[_4302]
                    s = s + 1
                    continue 
            else:
                mem[64] = _4626 + (32 * _4609) + 96
                mem[_4626 + (32 * _4609) + 32] = 0
                mem[_4626 + (32 * _4609) + 64] = 0
                mem[var111001] = _4626 + (32 * _4609) + 32
                s = var111001
                t = var111002
                while _3222 + _3234 + _4207 + (96 * _4250) + 31:
                    mem[64] = mem[64] + 64
                    mem[_4626 + (32 * _4609) + 32] = 0
                    mem[_4626 + (32 * _4609) + 64] = 0
                    mem[s + 32] = _4626 + (32 * _4609) + 32
                    s = s + 32
                    t = _3222 + _3234 + _4207 + (96 * _4250) + 31
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128] + 32] = _4626
                if idx >= ('cd', 36).length:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                _5132 = mem[_4302]
                s = 0
                while s < _5132:
                    if s >= mem[_4302]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _4302 + 32] + 44 len 20]
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    mem[0] = cd[((32 * idx) + cd[36] + 36)]
                    mem[32] = sha3(address(cd[4]), 7)
                    if s >= mem[_4302]:
                        revert with 0, 50
                    mem[0] = mem[mem[(32 * s) + _4302 + 32] + 44 len 20]
                    mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                    if s == -1:
                        revert with 0, 17
                    _5132 = mem[_4302]
                    s = s + 1
                    continue 
        else:
            mem[_3288 + _3222 + ceil32(return_data.size) + 128] = 0
            mem[_3222 + ceil32(return_data.size)] = _3222 + ceil32(return_data.size) + 96
            _3753 = mem[_3222 + _3234 + 32]
            require mem[_3222 + _3234 + 32] <= test266151307()
            require _3222 + _3234 + mem[_3222 + _3234 + 32] + 31 < _3222 + return_data.size
            _3798 = mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]
            if mem[_3222 + _3234 + mem[_3222 + _3234 + 32]] > test266151307():
                revert with 0, 65
            _3838 = mem[64]
            if mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 32]]) + 1
            mem[_3838] = _3798
            require _3234 + _3753 + (64 * _3798) + 32 <= return_data.size
            s = 0
            t = _3222 + _3234 + _3753 + 32
            u = _3838 + 32
            while s < _3798:
                require _3222 + return_data.size - t >= 64
                _4225 = mem[64]
                if mem[64] + 64 < mem[64] or mem[64] + 64 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + 64
                require mem[t] == mem[t + 12 len 20]
                mem[_4225] = mem[t]
                require mem[t + 32] == mem[t + 60 len 4]
                mem[_4225 + 32] = mem[t + 32]
                mem[u] = _4225
                s = s + 1
                t = t + 64
                u = u + 32
                continue 
            mem[_3222 + ceil32(return_data.size) + 32] = _3838
            _4208 = mem[_3222 + _3234 + 64]
            require mem[_3222 + _3234 + 64] <= test266151307()
            require _3222 + _3234 + mem[_3222 + _3234 + 64] + 31 < _3222 + return_data.size
            _4252 = mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]
            if mem[_3222 + _3234 + mem[_3222 + _3234 + 64]] > test266151307():
                revert with 0, 65
            _4304 = mem[64]
            if mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1 < mem[64] or mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = mem[64] + ceil32(32 * mem[_3222 + _3234 + mem[_3222 + _3234 + 64]]) + 1
            mem[_4304] = _4252
            require return_data.size >= _3234 + _4208 + (96 * _4252) + 32
            s = 0
            t = _3222 + _3234 + _4208 + 32
            u = _4304 + 32
            while s < _4252:
                require _3222 + return_data.size - t >= 96
                _4613 = mem[64]
                if mem[64] + 96 < mem[64] or mem[64] + 96 > test266151307():
                    revert with 0, 65
                mem[64] = mem[64] + 96
                mem[_4613] = mem[t]
                require mem[t + 32] == mem[t + 44 len 20]
                mem[_4613 + 32] = mem[t + 32]
                require mem[t + 64] == mem[t + 92 len 4]
                mem[_4613 + 64] = mem[t + 64]
                mem[u] = _4613
                s = s + 1
                t = t + 96
                u = u + 32
                continue 
            mem[_3222 + ceil32(return_data.size) + 64] = _4304
            _4612 = mem[_4304]
            if mem[_4304] > test266151307():
                revert with 0, 65
            _4627 = mem[64]
            mem[mem[64]] = mem[_4304]
            mem[64] = mem[64] + (32 * _4612) + 32
            if not _4612:
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128] + 32] = _4627
                if idx >= ('cd', 36).length:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                _4867 = mem[_4304]
                s = 0
                while s < _4867:
                    if s >= mem[_4304]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _4304 + 32] + 44 len 20]
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    mem[0] = cd[((32 * idx) + cd[36] + 36)]
                    mem[32] = sha3(address(cd[4]), 7)
                    if s >= mem[_4304]:
                        revert with 0, 50
                    mem[0] = mem[mem[(32 * s) + _4304 + 32] + 44 len 20]
                    mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                    if s == -1:
                        revert with 0, 17
                    _4867 = mem[_4304]
                    s = s + 1
                    continue 
            else:
                mem[64] = _4627 + (32 * _4612) + 96
                mem[_4627 + (32 * _4612) + 32] = 0
                mem[_4627 + (32 * _4612) + 64] = 0
                mem[var111001] = _4627 + (32 * _4612) + 32
                s = var111001
                t = var111002
                while _3222 + _3234 + _4208 + (96 * _4252) + 31:
                    mem[64] = mem[64] + 64
                    mem[_4627 + (32 * _4612) + 32] = 0
                    mem[_4627 + (32 * _4612) + 64] = 0
                    mem[s + 32] = _4627 + (32 * _4612) + 32
                    s = s + 32
                    t = _3222 + _3234 + _4208 + (96 * _4252) + 31
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128] + 32] = _4627
                if idx >= ('cd', 36).length:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[(32 * idx) + 128]] = cd[((32 * idx) + cd[36] + 36)]
                _5133 = mem[_4304]
                s = 0
                while s < _5133:
                    if s >= mem[_4304]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32]] = mem[mem[(32 * s) + _4304 + 32] + 44 len 20]
                    if idx >= ('cd', 36).length:
                        revert with 0, 50
                    mem[0] = cd[((32 * idx) + cd[36] + 36)]
                    mem[32] = sha3(address(cd[4]), 7)
                    if s >= mem[_4304]:
                        revert with 0, 50
                    mem[0] = mem[mem[(32 * s) + _4304 + 32] + 44 len 20]
                    mem[32] = sha3(cd[((32 * idx) + cd[36] + 36)], sha3(address(cd[4]), 7))
                    if idx >= mem[96]:
                        revert with 0, 50
                    if s >= mem[mem[mem[(32 * idx) + 128] + 32]]:
                        revert with 0, 50
                    mem[mem[(32 * s) + mem[mem[(32 * idx) + 128] + 32] + 32] + 32] = userStrategyBalanceByToken[address(cd[4])][cd[((32 * idx) + cd[36] + 36)]][mem[0]]
                    if s == -1:
                        revert with 0, 17
                    _5133 = mem[_4304]
                    s = s + 1
                    continue 
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    _3186 = mem[64]
    mem[mem[64]] = 64
    _3199 = mem[96]
    mem[mem[64] + 64] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 96
    u = mem[64] + (32 * mem[96]) + 96
    while idx < _3199:
        mem[t] = u + -_3186 - 96
        _3723 = mem[s]
        mem[u] = mem[mem[s]]
        _3725 = mem[_3723 + 32]
        mem[u + 32] = 64
        _3736 = mem[_3725]
        mem[u + 64] = mem[_3725]
        v = 0
        w = _3725 + 32
        x = u + 96
        while v < _3736:
            _4198 = mem[w]
            mem[x] = mem[mem[w] + 12 len 20]
            mem[x + 32] = mem[_4198 + 32]
            v = v + 1
            w = w + 32
            x = x + 64
            continue 
        v = _3736 + 1
        w = _3725 + (32 * _3736) + 64
        t = t + 32
        u = u + (64 * _3736) + 96
        continue 
    mem[_3186 + 32] = u - _3186
    _3735 = mem[_662]
    mem[u] = mem[_662]
    t = 0
    v = _662 + 32
    w = u + 32
    while t < _3735:
        _4195 = mem[v]
        mem[w] = mem[mem[v] + 12 len 20]
        mem[w + 32] = mem[_4195 + 32]
        t = t + 1
        v = v + 32
        w = w + 64
        continue 
    return memory
      from mem[64]
       len u + (64 * _3735) + -mem[64] + 32
}

function sub_776f5a8d(?) payable {
    require calldata.size - 4 >= 160
    require cd[4] == address(cd[4])
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 36).length) + 97 < 96 or ceil32(32 * ('cd', 36).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 36).length
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    if ('cd', 68).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 68).length) + 98 < 97 or ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 36).length) + 97] = ('cd', 68).length
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    idx = 0
    s = cd[68] + 36
    t = ceil32(32 * ('cd', 36).length) + 129
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[132] == bool(cd[132])
    mem[0] = msg.sender
    mem[32] = 1
    if not stor1[msg.sender]:
        revert with 0, 'Controlled::onlyController: Caller is not controller'
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 102] = 3
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 3
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 98] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98] = ('cd', 36).length
    mem[64] = ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + (32 * ('cd', 36).length) + 130
    if not ('cd', 36).length:
        idx = 0
        while idx < ('cd', 36).length:
            if idx >= mem[96]:
                revert with 0, 50
            _2360 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getTokenAcceptingDeposits(address arg1) with:
                    gas gas_remaining wei
                   args address(_2360)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2377 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2377] == bool(mem[_2377])
            if not mem[_2377]:
                revert with 0, 'UserPositions::deposit: This token is not accepting deposits'
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] <= 0:
                revert with 0, 'UserPositions::deposit: Deposit amount must be greater than zero'
            if cd[132]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _2412 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130] = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[96]:
                    revert with 0, 50
                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] > !_2412:
                    revert with 0, 17
                totalTokenBalance[mem[(32 * idx) + 140 len 20]] += _2412
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] > !_2412:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] += _2412
            else:
                if idx >= mem[96]:
                    revert with 0, 50
                _2410 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2429 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2435 = mem[_2429]
                require mem[_2429] == mem[_2429 + 12 len 20]
                mem[mem[64] + 4] = mem[_2429 + 12 len 20]
                require ext_code.size(address(_2410))
                staticcall address(_2410).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_2435)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2454 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2457 = mem[_2454]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2468 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2471 = mem[_2468]
                require mem[_2468] == mem[_2468 + 12 len 20]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _2480 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                _2484 = mem[64]
                mem[mem[64] + 36] = address(cd[4])
                mem[mem[64] + 68] = address(_2471)
                mem[mem[64] + 100] = _2480
                _2488 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2488 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_2488 + 36 len 28]
                mem[64] = _2484 + 196
                mem[_2484 + 132] = 32
                mem[_2484 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_2410)):
                    revert with 0, 'Address: call to non-contract'
                _2503 = mem[_2488]
                s = 0
                while s < _2503:
                    mem[s + _2484 + 196] = mem[s + _2488 + 32]
                    s = s + 32
                    continue 
                if ceil32(_2503) <= _2503:
                    call address(_2410).mem[_2484 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_2484 + 200 len _2503 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_2484 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2484 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2484 + 264] = mem[idx + _2484 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2484 + 264]
                        if not mem[96]:
                            mem[_2484 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2484 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3561 = mem[(32 * idx) + 128]
                            mem[_2484 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + (6 * ceil32(return_data.size)) + 200] = address(_3561)
                            mem[_2484 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3561), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2484 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2484 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3627 = mem[(32 * idx) + 128]
                            mem[_2484 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + (6 * ceil32(return_data.size)) + 200] = address(_3627)
                            mem[_2484 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3627), address(cd[4])
                    else:
                        mem[_2484 + 196] = return_data.size
                        mem[_2484 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2484 + ceil32(return_data.size) + 265] = mem[idx + _2484 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2484 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_2484 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3564 = mem[(32 * idx) + 128]
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3564)
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3564), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_2484 + 228] == bool(mem[_2484 + 228])
                            if not mem[_2484 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2484 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3631 = mem[(32 * idx) + 128]
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3631)
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3631), address(cd[4])
                else:
                    mem[_2503 + _2484 + 196] = 0
                    call address(_2410).mem[_2484 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_2484 + 200 len _2503 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_2484 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2484 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2484 + 264] = mem[idx + _2484 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2484 + 264]
                        if not mem[96]:
                            mem[_2484 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2484 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3567 = mem[(32 * idx) + 128]
                            mem[_2484 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + (6 * ceil32(return_data.size)) + 200] = address(_3567)
                            mem[_2484 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3567), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2484 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2484 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3635 = mem[(32 * idx) + 128]
                            mem[_2484 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + (6 * ceil32(return_data.size)) + 200] = address(_3635)
                            mem[_2484 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3635), address(cd[4])
                    else:
                        mem[_2484 + 196] = return_data.size
                        mem[_2484 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2484 + ceil32(return_data.size) + 265] = mem[idx + _2484 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2484 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_2484 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3570 = mem[(32 * idx) + 128]
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3570)
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3570), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_2484 + 228] == bool(mem[_2484 + 228])
                            if not mem[_2484 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2484 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2484 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2410))
                            staticcall address(_2410).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2484 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2457:
                                revert with 0, 17
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2484 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2457
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2457
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2484 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3639 = mem[(32 * idx) + 128]
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3639)
                            mem[_2484 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3639), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130] = ext_call.return_data[0] - _2457
                if idx >= mem[96]:
                    revert with 0, 50
                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] > !(ext_call.return_data[0] - _2457):
                    revert with 0, 17
                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = totalTokenBalance[mem[(32 * idx) + 140 len 20]] + ext_call.return_data[0] - _2457
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] > !(ext_call.return_data[0] - _2457):
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] = stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] + ext_call.return_data[0] - _2457
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if not cd[100]:
            _2357 = mem[64]
            mem[mem[64]] = 96
            _2367 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _2367:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_2357 + 32] = (32 * _2367) + 128
            _3133 = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2357 + (32 * _2367) + 128] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2357 + (32 * _2367) + 160 len 32 * _3133] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130 len 32 * _3133]
            mem[_2357 + 64] = cd[100]
            emit Deposit(address arg1, address[] arg2, uint256[] arg3, uint256 arg4):
                         mem[mem[64] len _2357 + (32 * _2367) + (32 * _3133) + -mem[64] + 160],
                         address(cd[4]),
        else:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getWethTokenAddress() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2369 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2376 = mem[_2369]
            require mem[_2369] == mem[_2369 + 12 len 20]
            mem[mem[64] + 4] = 4
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2399 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2409 = mem[_2399]
            require mem[_2399] == mem[_2399 + 12 len 20]
            mem[mem[64] + 36] = address(cd[4])
            mem[mem[64] + 68] = cd[100]
            require ext_code.size(address(_2409))
            call address(_2409).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2376), address(cd[4]), cd[100]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = 5
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 5
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2449 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2453 = mem[_2449]
            require mem[_2449] == mem[_2449 + 12 len 20]
            mem[mem[64] + 4] = address(_2376)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(address(_2453))
            call address(_2453).updateUserRewards(address arg1, address arg2) with:
                 gas gas_remaining wei
                args address(_2376), address(cd[4])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if totalTokenBalance[address(_2376)] > !cd[100]:
                revert with 0, 17
            totalTokenBalance[address(_2376)] += cd[100]
            mem[32] = sha3(address(_2376), 5)
            if stor5[address(_2376)][address(cd[4])] > !cd[100]:
                revert with 0, 17
            stor5[address(_2376)][address(cd[4])] += cd[100]
            _2479 = mem[64]
            mem[mem[64]] = 96
            _2483 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _2483:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_2479 + 32] = (32 * _2483) + 128
            _3134 = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2479 + (32 * _2483) + 128] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2479 + (32 * _2483) + 160 len 32 * _3134] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130 len 32 * _3134]
            mem[_2479 + 64] = cd[100]
            emit Deposit(address arg1, address[] arg2, uint256[] arg3, uint256 arg4):
                         mem[mem[64] len _2479 + (32 * _2483) + (32 * _3134) + -mem[64] + 160],
                         address(cd[4]),
    else:
        mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
        idx = 0
        while idx < ('cd', 36).length:
            if idx >= mem[96]:
                revert with 0, 50
            _2365 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getTokenAcceptingDeposits(address arg1) with:
                    gas gas_remaining wei
                   args address(_2365)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2380 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2380] == bool(mem[_2380])
            if not mem[_2380]:
                revert with 0, 'UserPositions::deposit: This token is not accepting deposits'
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] <= 0:
                revert with 0, 'UserPositions::deposit: Deposit amount must be greater than zero'
            if cd[132]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _2416 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130] = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[96]:
                    revert with 0, 50
                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] > !_2416:
                    revert with 0, 17
                totalTokenBalance[mem[(32 * idx) + 140 len 20]] += _2416
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] > !_2416:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] += _2416
            else:
                if idx >= mem[96]:
                    revert with 0, 50
                _2414 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2430 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2439 = mem[_2430]
                require mem[_2430] == mem[_2430 + 12 len 20]
                mem[mem[64] + 4] = mem[_2430 + 12 len 20]
                require ext_code.size(address(_2414))
                staticcall address(_2414).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_2439)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2456 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2458 = mem[_2456]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2470 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2472 = mem[_2470]
                require mem[_2470] == mem[_2470 + 12 len 20]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _2482 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                _2486 = mem[64]
                mem[mem[64] + 36] = address(cd[4])
                mem[mem[64] + 68] = address(_2472)
                mem[mem[64] + 100] = _2482
                _2491 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_2491 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_2491 + 36 len 28]
                mem[64] = _2486 + 196
                mem[_2486 + 132] = 32
                mem[_2486 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_2414)):
                    revert with 0, 'Address: call to non-contract'
                _2505 = mem[_2491]
                s = 0
                while s < _2505:
                    mem[s + _2486 + 196] = mem[s + _2491 + 32]
                    s = s + 32
                    continue 
                if ceil32(_2505) <= _2505:
                    call address(_2414).mem[_2486 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_2486 + 200 len _2505 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_2486 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2486 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2486 + 264] = mem[idx + _2486 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2486 + 264]
                        if not mem[96]:
                            mem[_2486 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2486 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3573 = mem[(32 * idx) + 128]
                            mem[_2486 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + (6 * ceil32(return_data.size)) + 200] = address(_3573)
                            mem[_2486 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3573), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2486 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2486 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3643 = mem[(32 * idx) + 128]
                            mem[_2486 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + (6 * ceil32(return_data.size)) + 200] = address(_3643)
                            mem[_2486 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3643), address(cd[4])
                    else:
                        mem[_2486 + 196] = return_data.size
                        mem[_2486 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2486 + ceil32(return_data.size) + 265] = mem[idx + _2486 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2486 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_2486 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3576 = mem[(32 * idx) + 128]
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3576)
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3576), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_2486 + 228] == bool(mem[_2486 + 228])
                            if not mem[_2486 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2486 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3647 = mem[(32 * idx) + 128]
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3647)
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3647), address(cd[4])
                else:
                    mem[_2505 + _2486 + 196] = 0
                    call address(_2414).mem[_2486 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_2486 + 200 len _2505 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_2486 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2486 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2486 + 264] = mem[idx + _2486 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2486 + 264]
                        if not mem[96]:
                            mem[_2486 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2486 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3579 = mem[(32 * idx) + 128]
                            mem[_2486 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + (6 * ceil32(return_data.size)) + 200] = address(_3579)
                            mem[_2486 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3579), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2486 + 200] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + 200] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + (2 * ceil32(return_data.size)) + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + (2 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 232] = address(cd[4])
                            mem[_2486 + (4 * ceil32(return_data.size)) + 264] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + (4 * ceil32(return_data.size)) + 200], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + (4 * ceil32(return_data.size)) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + (4 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + (6 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3651 = mem[(32 * idx) + 128]
                            mem[_2486 + (6 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + (6 * ceil32(return_data.size)) + 200] = address(_3651)
                            mem[_2486 + (6 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3651), address(cd[4])
                    else:
                        mem[_2486 + 196] = return_data.size
                        mem[_2486 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _2486 + ceil32(return_data.size) + 265] = mem[idx + _2486 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_2486 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_2486 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3582 = mem[(32 * idx) + 128]
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3582)
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3582), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_2486 + 228] == bool(mem[_2486 + 228])
                            if not mem[_2486 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_2486 + ceil32(return_data.size) + 201] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[_2486 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = ext_call.return_data[12 len 20]
                            require ext_code.size(address(_2414))
                            staticcall address(_2414).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(ext_call.return_data[0])
                            mem[_2486 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0] < _2458:
                                revert with 0, 17
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_2486 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 233] = address(cd[4])
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 265] = ext_call.return_data[0] - _2458
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201], address(cd[4]), ext_call.return_data[0] - _2458
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_2486 + ceil32(return_data.size) + (4 * ceil32(return_data.size)) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _3655 = mem[(32 * idx) + 128]
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 201] = address(_3655)
                            mem[_2486 + ceil32(return_data.size) + (6 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_3655), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130] = ext_call.return_data[0] - _2458
                if idx >= mem[96]:
                    revert with 0, 50
                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] > !(ext_call.return_data[0] - _2458):
                    revert with 0, 17
                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = totalTokenBalance[mem[(32 * idx) + 140 len 20]] + ext_call.return_data[0] - _2458
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] > !(ext_call.return_data[0] - _2458):
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] = stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] + ext_call.return_data[0] - _2458
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if not cd[100]:
            _2362 = mem[64]
            mem[mem[64]] = 96
            _2368 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _2368:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_2362 + 32] = (32 * _2368) + 128
            _3135 = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2362 + (32 * _2368) + 128] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2362 + (32 * _2368) + 160 len 32 * _3135] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130 len 32 * _3135]
            mem[_2362 + 64] = cd[100]
            emit Deposit(address arg1, address[] arg2, uint256[] arg3, uint256 arg4):
                         mem[mem[64] len _2362 + (32 * _2368) + (32 * _3135) + -mem[64] + 160],
                         address(cd[4]),
        else:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getWethTokenAddress() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2371 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2379 = mem[_2371]
            require mem[_2371] == mem[_2371 + 12 len 20]
            mem[mem[64] + 4] = 4
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2401 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2413 = mem[_2401]
            require mem[_2401] == mem[_2401 + 12 len 20]
            mem[mem[64] + 36] = address(cd[4])
            mem[mem[64] + 68] = cd[100]
            require ext_code.size(address(_2413))
            call address(_2413).increaseRewards(address arg1, address arg2, uint256 arg3) with:
                 gas gas_remaining wei
                args address(_2379), address(cd[4]), cd[100]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = 5
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 5
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2451 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2455 = mem[_2451]
            require mem[_2451] == mem[_2451 + 12 len 20]
            mem[mem[64] + 4] = address(_2379)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(address(_2455))
            call address(_2455).updateUserRewards(address arg1, address arg2) with:
                 gas gas_remaining wei
                args address(_2379), address(cd[4])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if totalTokenBalance[address(_2379)] > !cd[100]:
                revert with 0, 17
            totalTokenBalance[address(_2379)] += cd[100]
            mem[32] = sha3(address(_2379), 5)
            if stor5[address(_2379)][address(cd[4])] > !cd[100]:
                revert with 0, 17
            stor5[address(_2379)][address(cd[4])] += cd[100]
            _2481 = mem[64]
            mem[mem[64]] = 96
            _2485 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _2485:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_2481 + 32] = (32 * _2485) + 128
            _3136 = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2481 + (32 * _2485) + 128] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98]
            mem[_2481 + (32 * _2485) + 160 len 32 * _3136] = mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 130 len 32 * _3136]
            mem[_2481 + 64] = cd[100]
            emit Deposit(address arg1, address[] arg2, uint256[] arg3, uint256 arg4):
                         mem[mem[64] len _2481 + (32 * _2485) + (32 * _3136) + -mem[64] + 160],
                         address(cd[4]),
}

function sub_558c811e(?) payable {
    require calldata.size - 4 >= 128
    require cd[4] == address(cd[4])
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 36).length) + 97 < 96 or ceil32(32 * ('cd', 36).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 36).length
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    if ('cd', 68).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 68).length) + 98 < 97 or ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 98 > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 36).length) + 97] = ('cd', 68).length
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    idx = 0
    s = cd[68] + 36
    t = ceil32(32 * ('cd', 36).length) + 129
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] == bool(cd[100])
    mem[0] = msg.sender
    mem[32] = 1
    if not stor1[msg.sender]:
        revert with 0, 'Controlled::onlyController: Caller is not controller'
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 102] = 3
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 3
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + 98] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].getWethTokenAddress() with:
            gas gas_remaining wei
    mem[ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + ceil32(return_data.size) + 98] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(32 * ('cd', 36).length) + ceil32(32 * ('cd', 68).length) + (2 * ceil32(return_data.size)) + 98
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ('cd', 36).length != ('cd', 68).length:
        revert with 0, 'UserPositions::_withdraw: Tokens array length does not match amounts array length'
    idx = 0
    s = 0
    while idx < ('cd', 36).length:
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if 0 == mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
            return s
        if idx >= mem[96]:
            revert with 0, 50
        _12910 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getTokenAcceptingWithdrawals(address arg1) with:
                gas gas_remaining wei
               args address(_12910)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12915 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_12915] == bool(mem[_12915])
        if not mem[_12915]:
            revert with 0, 'UserPositions::_withdraw: This token is not accepting withdrawals'
        if idx >= mem[96]:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = sha3(address(cd[4]), 6)
        if userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])] >= stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])]:
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > 0:
                revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
            if idx >= mem[96]:
                revert with 0, 50
            _12935 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12945 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _12947 = mem[_12945]
            require mem[_12945] == mem[_12945 + 12 len 20]
            mem[mem[64] + 4] = mem[_12945 + 12 len 20]
            require ext_code.size(address(_12935))
            staticcall address(_12935).0x70a08231 with:
                    gas gas_remaining wei
                   args address(_12947)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12953 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[_12953] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                if idx >= mem[96]:
                    revert with 0, 50
                if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                    if idx >= mem[96]:
                        revert with 0, 50
                    _12969 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12998 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13003 = mem[_12998]
                    require mem[_12998] == mem[_12998 + 12 len 20]
                    mem[mem[64] + 4] = mem[_12998 + 12 len 20]
                    require ext_code.size(address(_12969))
                    staticcall address(_12969).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_13003)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13036 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13047 = mem[_13036]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_13036] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13123] == mem[_13123 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _13170 = mem[(32 * idx) + 128]
                        _13179 = mem[64]
                        mem[mem[64] + 36] = mem[_13123 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _13047
                        _13201 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_13201 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13201 + 36 len 28]
                        mem[64] = _13179 + 196
                        mem[_13179 + 132] = 32
                        mem[_13179 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_13170)):
                            revert with 0, 'Address: call to non-contract'
                        _13273 = mem[_13201]
                        t = 0
                        while t < _13273:
                            mem[t + _13179 + 196] = mem[t + _13201 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13273) <= _13273:
                            call address(_13170).mem[_13179 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13179 + 200 len _13273 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13179 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13179 + 264] = mem[idx + _13179 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13179 + 264]
                                if not mem[96]:
                                    mem[_13179 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + 264] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + 200], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20973 = mem[(32 * idx) + 128]
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 200] = address(_20973)
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20973), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13179 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + 264] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + 200], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21789 = mem[(32 * idx) + 128]
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 200] = address(_21789)
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21789), address(cd[4])
                            else:
                                mem[_13179 + 196] = return_data.size
                                mem[_13179 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13179 + ceil32(return_data.size) + 265] = mem[idx + _13179 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13179 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13179 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20976 = mem[(32 * idx) + 128]
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20976)
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20976), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13179 + 228] == bool(mem[_13179 + 228])
                                    if not mem[_13179 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13179 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21795 = mem[(32 * idx) + 128]
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21795)
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21795), address(cd[4])
                        else:
                            mem[_13273 + _13179 + 196] = 0
                            call address(_13170).mem[_13179 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13179 + 200 len _13273 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13179 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13179 + 264] = mem[idx + _13179 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13179 + 264]
                                if not mem[96]:
                                    mem[_13179 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + 264] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + 200], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20979 = mem[(32 * idx) + 128]
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 200] = address(_20979)
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20979), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13179 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + 264] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + 200], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21801 = mem[(32 * idx) + 128]
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 200] = address(_21801)
                                    mem[_13179 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21801), address(cd[4])
                            else:
                                mem[_13179 + 196] = return_data.size
                                mem[_13179 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13179 + ceil32(return_data.size) + 265] = mem[idx + _13179 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13179 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13179 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20982 = mem[(32 * idx) + 128]
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20982)
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20982), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13179 + 228] == bool(mem[_13179 + 228])
                                    if not mem[_13179 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13179 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13179 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13047
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13047
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13179 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21807 = mem[(32 * idx) + 128]
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21807)
                                    mem[_13179 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21807), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _13047 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13047:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13047
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13047:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13047
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _13085 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13130 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13130] == mem[_13130 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _13178 = mem[(32 * idx) + 128]
                        _13189 = mem[64]
                        mem[mem[64] + 36] = mem[_13130 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _13085
                        _13215 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_13215 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13215 + 36 len 28]
                        mem[64] = _13189 + 196
                        mem[_13189 + 132] = 32
                        mem[_13189 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_13178)):
                            revert with 0, 'Address: call to non-contract'
                        _13289 = mem[_13215]
                        t = 0
                        while t < _13289:
                            mem[t + _13189 + 196] = mem[t + _13215 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13289) <= _13289:
                            call address(_13178).mem[_13189 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13189 + 200 len _13289 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13189 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13189 + 264] = mem[idx + _13189 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13189 + 264]
                                if not mem[96]:
                                    mem[_13189 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + 264] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + 200], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20961 = mem[(32 * idx) + 128]
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 200] = address(_20961)
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20961), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13189 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + 264] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + 200], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21765 = mem[(32 * idx) + 128]
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 200] = address(_21765)
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21765), address(cd[4])
                            else:
                                mem[_13189 + 196] = return_data.size
                                mem[_13189 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13189 + ceil32(return_data.size) + 265] = mem[idx + _13189 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13189 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13189 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20964 = mem[(32 * idx) + 128]
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20964)
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20964), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13189 + 228] == bool(mem[_13189 + 228])
                                    if not mem[_13189 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13189 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21771 = mem[(32 * idx) + 128]
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21771)
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21771), address(cd[4])
                        else:
                            mem[_13289 + _13189 + 196] = 0
                            call address(_13178).mem[_13189 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13189 + 200 len _13289 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13189 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13189 + 264] = mem[idx + _13189 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13189 + 264]
                                if not mem[96]:
                                    mem[_13189 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + 264] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + 200], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20967 = mem[(32 * idx) + 128]
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 200] = address(_20967)
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20967), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13189 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + 264] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + 200], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21777 = mem[(32 * idx) + 128]
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 200] = address(_21777)
                                    mem[_13189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21777), address(cd[4])
                            else:
                                mem[_13189 + 196] = return_data.size
                                mem[_13189 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13189 + ceil32(return_data.size) + 265] = mem[idx + _13189 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13189 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13189 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20970 = mem[(32 * idx) + 128]
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20970)
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20970), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13189 + 228] == bool(mem[_13189 + 228])
                                    if not mem[_13189 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13189 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13085
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13085
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21783 = mem[(32 * idx) + 128]
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21783)
                                    mem[_13189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21783), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _13085 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13085:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13085
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13085:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13085
                else:
                    if cd[100]:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _12977 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _12984 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13008 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13019 = mem[_13008]
                        require mem[_13008] == mem[_13008 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        mem[mem[64] + 36] = address(cd[4])
                        mem[mem[64] + 68] = _12984
                        require ext_code.size(address(_13019))
                        call address(_13019).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(cd[4]), _12984
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13111 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _13125 = mem[_13111]
                        require mem[_13111] == mem[_13111 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _13154 = mem[(32 * idx) + 128]
                        mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = address(_13154)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(address(_13125))
                        call address(_13125).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_13154), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _12984 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _12984:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _12984
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _12984:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _12984
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = _12977
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    _12975 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13000 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13007 = mem[_13000]
                    require mem[_13000] == mem[_13000 + 12 len 20]
                    mem[mem[64] + 4] = mem[_13000 + 12 len 20]
                    require ext_code.size(address(_12975))
                    staticcall address(_12975).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_13007)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13056 = mem[_13042]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_13042] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13131] == mem[_13131 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _13181 = mem[(32 * idx) + 128]
                        _13191 = mem[64]
                        mem[mem[64] + 36] = mem[_13131 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _13056
                        _13218 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_13218 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13218 + 36 len 28]
                        mem[64] = _13191 + 196
                        mem[_13191 + 132] = 32
                        mem[_13191 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_13181)):
                            revert with 0, 'Address: call to non-contract'
                        _13293 = mem[_13218]
                        t = 0
                        while t < _13293:
                            mem[t + _13191 + 196] = mem[t + _13218 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13293) <= _13293:
                            call address(_13181).mem[_13191 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13191 + 200 len _13293 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13191 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13191 + 264] = mem[idx + _13191 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13191 + 264]
                                if not mem[96]:
                                    mem[_13191 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + 264] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + 200], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20997 = mem[(32 * idx) + 128]
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 200] = address(_20997)
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20997), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13191 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + 264] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + 200], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21837 = mem[(32 * idx) + 128]
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 200] = address(_21837)
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21837), address(cd[4])
                            else:
                                mem[_13191 + 196] = return_data.size
                                mem[_13191 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13191 + ceil32(return_data.size) + 265] = mem[idx + _13191 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13191 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13191 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21000 = mem[(32 * idx) + 128]
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21000)
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21000), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13191 + 228] == bool(mem[_13191 + 228])
                                    if not mem[_13191 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13191 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21843 = mem[(32 * idx) + 128]
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21843)
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21843), address(cd[4])
                        else:
                            mem[_13293 + _13191 + 196] = 0
                            call address(_13181).mem[_13191 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13191 + 200 len _13293 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13191 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13191 + 264] = mem[idx + _13191 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13191 + 264]
                                if not mem[96]:
                                    mem[_13191 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + 264] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + 200], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21003 = mem[(32 * idx) + 128]
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 200] = address(_21003)
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21003), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13191 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + 264] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + 200], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21849 = mem[(32 * idx) + 128]
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 200] = address(_21849)
                                    mem[_13191 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21849), address(cd[4])
                            else:
                                mem[_13191 + 196] = return_data.size
                                mem[_13191 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13191 + ceil32(return_data.size) + 265] = mem[idx + _13191 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13191 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13191 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21006 = mem[(32 * idx) + 128]
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21006)
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21006), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13191 + 228] == bool(mem[_13191 + 228])
                                    if not mem[_13191 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13191 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13191 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13056
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13056
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13191 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21855 = mem[(32 * idx) + 128]
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21855)
                                    mem[_13191 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21855), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _13056 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13056:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13056
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13056:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13056
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _13094 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13137 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_13137] == mem[_13137 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _13190 = mem[(32 * idx) + 128]
                        _13203 = mem[64]
                        mem[mem[64] + 36] = mem[_13137 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _13094
                        _13233 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_13233 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13233 + 36 len 28]
                        mem[64] = _13203 + 196
                        mem[_13203 + 132] = 32
                        mem[_13203 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_13190)):
                            revert with 0, 'Address: call to non-contract'
                        _13307 = mem[_13233]
                        t = 0
                        while t < _13307:
                            mem[t + _13203 + 196] = mem[t + _13233 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13307) <= _13307:
                            call address(_13190).mem[_13203 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13203 + 200 len _13307 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13203 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13203 + 264] = mem[idx + _13203 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13203 + 264]
                                if not mem[96]:
                                    mem[_13203 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + 264] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + 200], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20985 = mem[(32 * idx) + 128]
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 200] = address(_20985)
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20985), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13203 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + 264] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + 200], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21813 = mem[(32 * idx) + 128]
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 200] = address(_21813)
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21813), address(cd[4])
                            else:
                                mem[_13203 + 196] = return_data.size
                                mem[_13203 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13203 + ceil32(return_data.size) + 265] = mem[idx + _13203 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13203 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13203 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20988 = mem[(32 * idx) + 128]
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20988)
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20988), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13203 + 228] == bool(mem[_13203 + 228])
                                    if not mem[_13203 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13203 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21819 = mem[(32 * idx) + 128]
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21819)
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21819), address(cd[4])
                        else:
                            mem[_13307 + _13203 + 196] = 0
                            call address(_13190).mem[_13203 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_13203 + 200 len _13307 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_13203 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13203 + 264] = mem[idx + _13203 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13203 + 264]
                                if not mem[96]:
                                    mem[_13203 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + 264] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + 200], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20991 = mem[(32 * idx) + 128]
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 200] = address(_20991)
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20991), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13203 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + 264] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + 200], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21825 = mem[(32 * idx) + 128]
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 200] = address(_21825)
                                    mem[_13203 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21825), address(cd[4])
                            else:
                                mem[_13203 + 196] = return_data.size
                                mem[_13203 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _13203 + ceil32(return_data.size) + 265] = mem[idx + _13203 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_13203 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_13203 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _20994 = mem[(32 * idx) + 128]
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20994)
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_20994), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_13203 + 228] == bool(mem[_13203 + 228])
                                    if not mem[_13203 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_13203 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_13203 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13094
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13094
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_13203 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _21831 = mem[(32 * idx) + 128]
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21831)
                                    mem[_13203 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_21831), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _13094 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13094:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13094
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13094:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13094
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[mem[64] + 4] = 8
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 8
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12979 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _12992 = mem[_12979]
            require mem[_12979] == mem[_12979 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _13009 = mem[(32 * idx) + 128]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _13013 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = address(_13009)
            mem[mem[64] + 36] = _13013
            require ext_code.size(address(_12992))
            call address(_12992).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(_13009), _13013
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _13049 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13097 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13112 = mem[_13097]
                require mem[_13097] == mem[_13097 + 12 len 20]
                mem[mem[64] + 4] = mem[_13097 + 12 len 20]
                require ext_code.size(address(_13049))
                staticcall address(_13049).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_13112)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13162 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13182 = mem[_13162]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_13162] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13324 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13324] == mem[_13324 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13401 = mem[(32 * idx) + 128]
                    _13424 = mem[64]
                    mem[mem[64] + 36] = mem[_13324 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13182
                    _13499 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13499 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13499 + 36 len 28]
                    mem[64] = _13424 + 196
                    mem[_13424 + 132] = 32
                    mem[_13424 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13401)):
                        revert with 0, 'Address: call to non-contract'
                    _13669 = mem[_13499]
                    t = 0
                    while t < _13669:
                        mem[t + _13424 + 196] = mem[t + _13499 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13669) <= _13669:
                        call address(_13401).mem[_13424 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13424 + 200 len _13669 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13424 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13424 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13424 + 264] = mem[idx + _13424 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13424 + 264]
                            if not mem[96]:
                                mem[_13424 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + 264] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + 200], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21021 = mem[(32 * idx) + 128]
                                mem[_13424 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + (2 * ceil32(return_data.size)) + 200] = address(_21021)
                                mem[_13424 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21021), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13424 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + 264] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + 200], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21885 = mem[(32 * idx) + 128]
                                mem[_13424 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + (2 * ceil32(return_data.size)) + 200] = address(_21885)
                                mem[_13424 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21885), address(cd[4])
                        else:
                            mem[_13424 + 196] = return_data.size
                            mem[_13424 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13424 + ceil32(return_data.size) + 265] = mem[idx + _13424 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13424 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13424 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21024 = mem[(32 * idx) + 128]
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21024)
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21024), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13424 + 228] == bool(mem[_13424 + 228])
                                if not mem[_13424 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13424 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21891 = mem[(32 * idx) + 128]
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21891)
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21891), address(cd[4])
                    else:
                        mem[_13669 + _13424 + 196] = 0
                        call address(_13401).mem[_13424 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13424 + 200 len _13669 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13424 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13424 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13424 + 264] = mem[idx + _13424 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13424 + 264]
                            if not mem[96]:
                                mem[_13424 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + 264] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + 200], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21027 = mem[(32 * idx) + 128]
                                mem[_13424 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + (2 * ceil32(return_data.size)) + 200] = address(_21027)
                                mem[_13424 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21027), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13424 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + 264] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + 200], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21897 = mem[(32 * idx) + 128]
                                mem[_13424 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + (2 * ceil32(return_data.size)) + 200] = address(_21897)
                                mem[_13424 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21897), address(cd[4])
                        else:
                            mem[_13424 + 196] = return_data.size
                            mem[_13424 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13424 + ceil32(return_data.size) + 265] = mem[idx + _13424 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13424 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13424 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21030 = mem[(32 * idx) + 128]
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21030)
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21030), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13424 + 228] == bool(mem[_13424 + 228])
                                if not mem[_13424 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13424 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13424 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13182
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13182
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13424 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21903 = mem[(32 * idx) + 128]
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21903)
                                mem[_13424 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21903), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13182 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13182:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13182
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13182:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13182
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13240 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13334 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13334] == mem[_13334 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13423 = mem[(32 * idx) + 128]
                    _13459 = mem[64]
                    mem[mem[64] + 36] = mem[_13334 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13240
                    _13540 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13540 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13540 + 36 len 28]
                    mem[64] = _13459 + 196
                    mem[_13459 + 132] = 32
                    mem[_13459 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13423)):
                        revert with 0, 'Address: call to non-contract'
                    _13720 = mem[_13540]
                    t = 0
                    while t < _13720:
                        mem[t + _13459 + 196] = mem[t + _13540 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13720) <= _13720:
                        call address(_13423).mem[_13459 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13459 + 200 len _13720 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13459 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13459 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13459 + 264] = mem[idx + _13459 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13459 + 264]
                            if not mem[96]:
                                mem[_13459 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + 264] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + 200], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21009 = mem[(32 * idx) + 128]
                                mem[_13459 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + (2 * ceil32(return_data.size)) + 200] = address(_21009)
                                mem[_13459 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21009), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13459 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + 264] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + 200], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21861 = mem[(32 * idx) + 128]
                                mem[_13459 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + (2 * ceil32(return_data.size)) + 200] = address(_21861)
                                mem[_13459 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21861), address(cd[4])
                        else:
                            mem[_13459 + 196] = return_data.size
                            mem[_13459 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13459 + ceil32(return_data.size) + 265] = mem[idx + _13459 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13459 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13459 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21012 = mem[(32 * idx) + 128]
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21012)
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21012), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13459 + 228] == bool(mem[_13459 + 228])
                                if not mem[_13459 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13459 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21867 = mem[(32 * idx) + 128]
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21867)
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21867), address(cd[4])
                    else:
                        mem[_13720 + _13459 + 196] = 0
                        call address(_13423).mem[_13459 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13459 + 200 len _13720 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13459 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13459 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13459 + 264] = mem[idx + _13459 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13459 + 264]
                            if not mem[96]:
                                mem[_13459 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + 264] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + 200], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21015 = mem[(32 * idx) + 128]
                                mem[_13459 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + (2 * ceil32(return_data.size)) + 200] = address(_21015)
                                mem[_13459 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21015), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13459 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + 264] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + 200], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21873 = mem[(32 * idx) + 128]
                                mem[_13459 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + (2 * ceil32(return_data.size)) + 200] = address(_21873)
                                mem[_13459 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21873), address(cd[4])
                        else:
                            mem[_13459 + 196] = return_data.size
                            mem[_13459 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13459 + ceil32(return_data.size) + 265] = mem[idx + _13459 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13459 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13459 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21018 = mem[(32 * idx) + 128]
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21018)
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21018), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13459 + 228] == bool(mem[_13459 + 228])
                                if not mem[_13459 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13459 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13459 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13240
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13240
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13459 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21879 = mem[(32 * idx) + 128]
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21879)
                                mem[_13459 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21879), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13240 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13240:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13240
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13240:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13240
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            if cd[100]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _13059 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _13070 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64] + 4] = 4
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13119 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13132 = mem[_13119]
                require mem[_13119] == mem[_13119 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(cd[4])
                mem[mem[64] + 68] = _13070
                require ext_code.size(address(_13132))
                call address(_13132).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], address(cd[4]), _13070
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = 5
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 5
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13296 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13326 = mem[_13296]
                require mem[_13296] == mem[_13296 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _13375 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = address(_13375)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(address(_13326))
                call address(_13326).updateUserRewards(address arg1, address arg2) with:
                     gas gas_remaining wei
                    args address(_13375), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _13070 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13070:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13070
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13070:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13070
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _13059
                continue 
            if idx >= mem[96]:
                revert with 0, 50
            _13057 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13103 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13118 = mem[_13103]
            require mem[_13103] == mem[_13103 + 12 len 20]
            mem[mem[64] + 4] = mem[_13103 + 12 len 20]
            require ext_code.size(address(_13057))
            staticcall address(_13057).0x70a08231 with:
                    gas gas_remaining wei
                   args address(_13118)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13173 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _13194 = mem[_13173]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[_13173] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13335 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13335] == mem[_13335 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _13426 = mem[(32 * idx) + 128]
                _13461 = mem[64]
                mem[mem[64] + 36] = mem[_13335 + 12 len 20]
                mem[mem[64] + 68] = address(cd[4])
                mem[mem[64] + 100] = _13194
                _13543 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_13543 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13543 + 36 len 28]
                mem[64] = _13461 + 196
                mem[_13461 + 132] = 32
                mem[_13461 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_13426)):
                    revert with 0, 'Address: call to non-contract'
                _13724 = mem[_13543]
                t = 0
                while t < _13724:
                    mem[t + _13461 + 196] = mem[t + _13543 + 32]
                    t = t + 32
                    continue 
                if ceil32(_13724) <= _13724:
                    call address(_13426).mem[_13461 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_13461 + 200 len _13724 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_13461 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13461 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13461 + 264] = mem[idx + _13461 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13461 + 264]
                        if not mem[96]:
                            mem[_13461 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + 264] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + 200], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21045 = mem[(32 * idx) + 128]
                            mem[_13461 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + (2 * ceil32(return_data.size)) + 200] = address(_21045)
                            mem[_13461 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21045), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13461 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + 264] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + 200], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21933 = mem[(32 * idx) + 128]
                            mem[_13461 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + (2 * ceil32(return_data.size)) + 200] = address(_21933)
                            mem[_13461 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21933), address(cd[4])
                    else:
                        mem[_13461 + 196] = return_data.size
                        mem[_13461 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13461 + ceil32(return_data.size) + 265] = mem[idx + _13461 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13461 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_13461 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21048 = mem[(32 * idx) + 128]
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21048)
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21048), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_13461 + 228] == bool(mem[_13461 + 228])
                            if not mem[_13461 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13461 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21939 = mem[(32 * idx) + 128]
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21939)
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21939), address(cd[4])
                else:
                    mem[_13724 + _13461 + 196] = 0
                    call address(_13426).mem[_13461 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_13461 + 200 len _13724 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_13461 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13461 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13461 + 264] = mem[idx + _13461 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13461 + 264]
                        if not mem[96]:
                            mem[_13461 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + 264] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + 200], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21051 = mem[(32 * idx) + 128]
                            mem[_13461 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + (2 * ceil32(return_data.size)) + 200] = address(_21051)
                            mem[_13461 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21051), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13461 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + 264] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + 200], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21945 = mem[(32 * idx) + 128]
                            mem[_13461 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + (2 * ceil32(return_data.size)) + 200] = address(_21945)
                            mem[_13461 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21945), address(cd[4])
                    else:
                        mem[_13461 + 196] = return_data.size
                        mem[_13461 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13461 + ceil32(return_data.size) + 265] = mem[idx + _13461 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13461 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_13461 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21054 = mem[(32 * idx) + 128]
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21054)
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21054), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_13461 + 228] == bool(mem[_13461 + 228])
                            if not mem[_13461 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13461 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13461 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13194
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13194
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13461 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21951 = mem[(32 * idx) + 128]
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21951)
                            mem[_13461 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21951), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _13194 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13194:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13194
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13194:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13194
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _13257 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13345 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_13345] == mem[_13345 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _13460 = mem[(32 * idx) + 128]
            _13501 = mem[64]
            mem[mem[64] + 36] = mem[_13345 + 12 len 20]
            mem[mem[64] + 68] = address(cd[4])
            mem[mem[64] + 100] = _13257
            _13585 = mem[64]
            mem[mem[64]] = 100
            mem[64] = mem[64] + 132
            mem[_13585 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13585 + 36 len 28]
            mem[64] = _13501 + 196
            mem[_13501 + 132] = 32
            mem[_13501 + 164] = 'SafeERC20: low-level call failed'
            if not ext_code.size(address(_13460)):
                revert with 0, 'Address: call to non-contract'
            _13775 = mem[_13585]
            t = 0
            while t < _13775:
                mem[t + _13501 + 196] = mem[t + _13585 + 32]
                t = t + 32
                continue 
            if ceil32(_13775) <= _13775:
                call address(_13460).mem[_13501 + 196 len 4] with:
                     gas gas_remaining wei
                    args mem[_13501 + 200 len _13775 - 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_13501 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_13501 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _13501 + 264] = mem[idx + _13501 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_13501 + 264]
                    if not mem[96]:
                        mem[_13501 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + 264] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + 200], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21033 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + (2 * ceil32(return_data.size)) + 200] = address(_21033)
                        mem[_13501 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21033), address(cd[4])
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_13501 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + 264] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + 200], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21909 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + (2 * ceil32(return_data.size)) + 200] = address(_21909)
                        mem[_13501 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21909), address(cd[4])
                else:
                    mem[_13501 + 196] = return_data.size
                    mem[_13501 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + 201] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _13501 + ceil32(return_data.size) + 265] = mem[idx + _13501 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_13501 + ceil32(return_data.size) + 265]
                    if not return_data.size:
                        mem[_13501 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21036 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21036)
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21036), address(cd[4])
                    else:
                        require return_data.size >= 32
                        require mem[_13501 + 228] == bool(mem[_13501 + 228])
                        if not mem[_13501 + 228]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_13501 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21915 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21915)
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21915), address(cd[4])
            else:
                mem[_13775 + _13501 + 196] = 0
                call address(_13460).mem[_13501 + 196 len 4] with:
                     gas gas_remaining wei
                    args mem[_13501 + 200 len _13775 - 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_13501 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_13501 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _13501 + 264] = mem[idx + _13501 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_13501 + 264]
                    if not mem[96]:
                        mem[_13501 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + 264] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + 200], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21039 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + (2 * ceil32(return_data.size)) + 200] = address(_21039)
                        mem[_13501 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21039), address(cd[4])
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_13501 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + 264] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + 200], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21921 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + (2 * ceil32(return_data.size)) + 200] = address(_21921)
                        mem[_13501 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21921), address(cd[4])
                else:
                    mem[_13501 + 196] = return_data.size
                    mem[_13501 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + 201] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _13501 + ceil32(return_data.size) + 265] = mem[idx + _13501 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_13501 + ceil32(return_data.size) + 265]
                    if not return_data.size:
                        mem[_13501 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21042 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21042)
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21042), address(cd[4])
                    else:
                        require return_data.size >= 32
                        require mem[_13501 + 228] == bool(mem[_13501 + 228])
                        if not mem[_13501 + 228]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_13501 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_13501 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13257
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13257
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_13501 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_13775) >= mem[96]:
                            revert with 0, 50
                        _21927 = mem[(Mask(251, 0, _13775 + 31) * 32) + 128]
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21927)
                        mem[_13501 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_21927), address(cd[4])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if ceil32(_13775) >= mem[96]:
                revert with 0, 50
            if ceil32(_13775) >= mem[96]:
                revert with 0, 50
            if _13257 > totalTokenBalance[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]]:
                totalTokenBalance[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]] = 0
            else:
                if totalTokenBalance[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]] < _13257:
                    revert with 0, 17
                totalTokenBalance[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]] -= _13257
            if ceil32(_13775) >= mem[96]:
                revert with 0, 50
            mem[0] = address(cd[4])
            mem[32] = sha3(mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20], 5)
            if stor5[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]][address(cd[4])] < _13257:
                revert with 0, 17
            stor5[mem[(Mask(251, 0, _13775 + 31) * 32) + 140 len 20]][address(cd[4])] -= _13257
            if ceil32(_13775) == -1:
                revert with 0, 17
            t = ceil32(_13775) + 1
            s = s
            continue 
        mem[0] = address(cd[4])
        mem[32] = sha3(address(mem[(32 * idx) + 128]), 5)
        if stor5[address(mem[(32 * idx) + 128])][address(cd[4])] < userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
            revert with 0, 17
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > stor5[address(mem[(32 * idx) + 128])][address(cd[4])] - userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
            revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
        if idx >= mem[96]:
            revert with 0, 50
        _12940 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = 0
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12946 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _12948 = mem[_12946]
        require mem[_12946] == mem[_12946 + 12 len 20]
        mem[mem[64] + 4] = mem[_12946 + 12 len 20]
        require ext_code.size(address(_12940))
        staticcall address(_12940).0x70a08231 with:
                gas gas_remaining wei
               args address(_12948)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12954 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if mem[_12954] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _12980 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13002 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13011 = mem[_13002]
                require mem[_13002] == mem[_13002 + 12 len 20]
                mem[mem[64] + 4] = mem[_13002 + 12 len 20]
                require ext_code.size(address(_12980))
                staticcall address(_12980).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_13011)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13044 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13061 = mem[_13044]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_13044] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13133 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13133] == mem[_13133 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13185 = mem[(32 * idx) + 128]
                    _13196 = mem[64]
                    mem[mem[64] + 36] = mem[_13133 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13061
                    _13224 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13224 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13224 + 36 len 28]
                    mem[64] = _13196 + 196
                    mem[_13196 + 132] = 32
                    mem[_13196 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13185)):
                        revert with 0, 'Address: call to non-contract'
                    _13299 = mem[_13224]
                    t = 0
                    while t < _13299:
                        mem[t + _13196 + 196] = mem[t + _13224 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13299) <= _13299:
                        call address(_13185).mem[_13196 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13196 + 200 len _13299 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13196 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13196 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13196 + 264] = mem[idx + _13196 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13196 + 264]
                            if not mem[96]:
                                mem[_13196 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + 264] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + 200], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20877 = mem[(32 * idx) + 128]
                                mem[_13196 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + (2 * ceil32(return_data.size)) + 200] = address(_20877)
                                mem[_13196 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20877), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13196 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + 264] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + 200], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21597 = mem[(32 * idx) + 128]
                                mem[_13196 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + (2 * ceil32(return_data.size)) + 200] = address(_21597)
                                mem[_13196 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21597), address(cd[4])
                        else:
                            mem[_13196 + 196] = return_data.size
                            mem[_13196 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13196 + ceil32(return_data.size) + 265] = mem[idx + _13196 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13196 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13196 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20880 = mem[(32 * idx) + 128]
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20880)
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20880), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13196 + 228] == bool(mem[_13196 + 228])
                                if not mem[_13196 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13196 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21603 = mem[(32 * idx) + 128]
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21603)
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21603), address(cd[4])
                    else:
                        mem[_13299 + _13196 + 196] = 0
                        call address(_13185).mem[_13196 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13196 + 200 len _13299 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13196 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13196 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13196 + 264] = mem[idx + _13196 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13196 + 264]
                            if not mem[96]:
                                mem[_13196 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + 264] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + 200], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20883 = mem[(32 * idx) + 128]
                                mem[_13196 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + (2 * ceil32(return_data.size)) + 200] = address(_20883)
                                mem[_13196 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20883), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13196 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + 264] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + 200], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21609 = mem[(32 * idx) + 128]
                                mem[_13196 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + (2 * ceil32(return_data.size)) + 200] = address(_21609)
                                mem[_13196 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21609), address(cd[4])
                        else:
                            mem[_13196 + 196] = return_data.size
                            mem[_13196 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13196 + ceil32(return_data.size) + 265] = mem[idx + _13196 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13196 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13196 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20886 = mem[(32 * idx) + 128]
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20886)
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20886), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13196 + 228] == bool(mem[_13196 + 228])
                                if not mem[_13196 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13196 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13196 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13061
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13061
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13196 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21615 = mem[(32 * idx) + 128]
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21615)
                                mem[_13196 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21615), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13061 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13061:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13061
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13061:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13061
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13098 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13139 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13139] == mem[_13139 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13195 = mem[(32 * idx) + 128]
                    _13209 = mem[64]
                    mem[mem[64] + 36] = mem[_13139 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13098
                    _13243 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13243 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13243 + 36 len 28]
                    mem[64] = _13209 + 196
                    mem[_13209 + 132] = 32
                    mem[_13209 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13195)):
                        revert with 0, 'Address: call to non-contract'
                    _13312 = mem[_13243]
                    t = 0
                    while t < _13312:
                        mem[t + _13209 + 196] = mem[t + _13243 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13312) <= _13312:
                        call address(_13195).mem[_13209 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13209 + 200 len _13312 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13209 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13209 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13209 + 264] = mem[idx + _13209 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13209 + 264]
                            if not mem[96]:
                                mem[_13209 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + 264] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + 200], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20865 = mem[(32 * idx) + 128]
                                mem[_13209 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + (2 * ceil32(return_data.size)) + 200] = address(_20865)
                                mem[_13209 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20865), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13209 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + 264] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + 200], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21573 = mem[(32 * idx) + 128]
                                mem[_13209 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + (2 * ceil32(return_data.size)) + 200] = address(_21573)
                                mem[_13209 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21573), address(cd[4])
                        else:
                            mem[_13209 + 196] = return_data.size
                            mem[_13209 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13209 + ceil32(return_data.size) + 265] = mem[idx + _13209 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13209 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13209 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20868 = mem[(32 * idx) + 128]
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20868)
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20868), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13209 + 228] == bool(mem[_13209 + 228])
                                if not mem[_13209 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13209 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21579 = mem[(32 * idx) + 128]
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21579)
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21579), address(cd[4])
                    else:
                        mem[_13312 + _13209 + 196] = 0
                        call address(_13195).mem[_13209 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13209 + 200 len _13312 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13209 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13209 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13209 + 264] = mem[idx + _13209 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13209 + 264]
                            if not mem[96]:
                                mem[_13209 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + 264] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + 200], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20871 = mem[(32 * idx) + 128]
                                mem[_13209 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + (2 * ceil32(return_data.size)) + 200] = address(_20871)
                                mem[_13209 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20871), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13209 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + 264] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + 200], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21585 = mem[(32 * idx) + 128]
                                mem[_13209 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + (2 * ceil32(return_data.size)) + 200] = address(_21585)
                                mem[_13209 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21585), address(cd[4])
                        else:
                            mem[_13209 + 196] = return_data.size
                            mem[_13209 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13209 + ceil32(return_data.size) + 265] = mem[idx + _13209 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13209 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13209 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20874 = mem[(32 * idx) + 128]
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20874)
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20874), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13209 + 228] == bool(mem[_13209 + 228])
                                if not mem[_13209 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13209 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13209 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13098
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13098
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13209 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21591 = mem[(32 * idx) + 128]
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21591)
                                mem[_13209 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21591), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13098 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13098:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13098
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13098:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13098
            else:
                if cd[100]:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _12987 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _12993 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 4
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13016 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13024 = mem[_13016]
                    require mem[_13016] == mem[_13016 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(cd[4])
                    mem[mem[64] + 68] = _12993
                    require ext_code.size(address(_13024))
                    call address(_13024).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(cd[4]), _12993
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = 5
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 5
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13121 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13135 = mem[_13121]
                    require mem[_13121] == mem[_13121 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13165 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = address(_13165)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(address(_13135))
                    call address(_13135).updateUserRewards(address arg1, address arg2) with:
                         gas gas_remaining wei
                        args address(_13165), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _12993 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _12993:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _12993
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _12993:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _12993
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _12987
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                _12985 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13005 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13015 = mem[_13005]
                require mem[_13005] == mem[_13005 + 12 len 20]
                mem[mem[64] + 4] = mem[_13005 + 12 len 20]
                require ext_code.size(address(_12985))
                staticcall address(_12985).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_13015)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13053 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13072 = mem[_13053]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_13053] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13140 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13140] == mem[_13140 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13198 = mem[(32 * idx) + 128]
                    _13211 = mem[64]
                    mem[mem[64] + 36] = mem[_13140 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13072
                    _13246 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13246 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13246 + 36 len 28]
                    mem[64] = _13211 + 196
                    mem[_13211 + 132] = 32
                    mem[_13211 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13198)):
                        revert with 0, 'Address: call to non-contract'
                    _13316 = mem[_13246]
                    t = 0
                    while t < _13316:
                        mem[t + _13211 + 196] = mem[t + _13246 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13316) <= _13316:
                        call address(_13198).mem[_13211 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13211 + 200 len _13316 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13211 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13211 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13211 + 264] = mem[idx + _13211 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13211 + 264]
                            if not mem[96]:
                                mem[_13211 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + 264] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + 200], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20901 = mem[(32 * idx) + 128]
                                mem[_13211 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + (2 * ceil32(return_data.size)) + 200] = address(_20901)
                                mem[_13211 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20901), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13211 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + 264] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + 200], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21645 = mem[(32 * idx) + 128]
                                mem[_13211 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + (2 * ceil32(return_data.size)) + 200] = address(_21645)
                                mem[_13211 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21645), address(cd[4])
                        else:
                            mem[_13211 + 196] = return_data.size
                            mem[_13211 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13211 + ceil32(return_data.size) + 265] = mem[idx + _13211 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13211 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13211 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20904 = mem[(32 * idx) + 128]
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20904)
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20904), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13211 + 228] == bool(mem[_13211 + 228])
                                if not mem[_13211 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13211 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21651 = mem[(32 * idx) + 128]
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21651)
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21651), address(cd[4])
                    else:
                        mem[_13316 + _13211 + 196] = 0
                        call address(_13198).mem[_13211 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13211 + 200 len _13316 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13211 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13211 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13211 + 264] = mem[idx + _13211 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13211 + 264]
                            if not mem[96]:
                                mem[_13211 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + 264] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + 200], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20907 = mem[(32 * idx) + 128]
                                mem[_13211 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + (2 * ceil32(return_data.size)) + 200] = address(_20907)
                                mem[_13211 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20907), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13211 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + 264] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + 200], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21657 = mem[(32 * idx) + 128]
                                mem[_13211 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + (2 * ceil32(return_data.size)) + 200] = address(_21657)
                                mem[_13211 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21657), address(cd[4])
                        else:
                            mem[_13211 + 196] = return_data.size
                            mem[_13211 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13211 + ceil32(return_data.size) + 265] = mem[idx + _13211 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13211 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13211 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20910 = mem[(32 * idx) + 128]
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20910)
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20910), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13211 + 228] == bool(mem[_13211 + 228])
                                if not mem[_13211 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13211 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13211 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13072
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13072
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13211 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21663 = mem[(32 * idx) + 128]
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21663)
                                mem[_13211 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21663), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13072 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13072:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13072
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13072:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13072
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13106 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13146 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13146] == mem[_13146 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13210 = mem[(32 * idx) + 128]
                    _13226 = mem[64]
                    mem[mem[64] + 36] = mem[_13146 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13106
                    _13261 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13261 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13261 + 36 len 28]
                    mem[64] = _13226 + 196
                    mem[_13226 + 132] = 32
                    mem[_13226 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13210)):
                        revert with 0, 'Address: call to non-contract'
                    _13327 = mem[_13261]
                    t = 0
                    while t < _13327:
                        mem[t + _13226 + 196] = mem[t + _13261 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13327) <= _13327:
                        call address(_13210).mem[_13226 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13226 + 200 len _13327 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13226 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13226 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13226 + 264] = mem[idx + _13226 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13226 + 264]
                            if not mem[96]:
                                mem[_13226 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + 264] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + 200], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20889 = mem[(32 * idx) + 128]
                                mem[_13226 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + (2 * ceil32(return_data.size)) + 200] = address(_20889)
                                mem[_13226 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20889), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13226 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + 264] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + 200], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21621 = mem[(32 * idx) + 128]
                                mem[_13226 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + (2 * ceil32(return_data.size)) + 200] = address(_21621)
                                mem[_13226 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21621), address(cd[4])
                        else:
                            mem[_13226 + 196] = return_data.size
                            mem[_13226 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13226 + ceil32(return_data.size) + 265] = mem[idx + _13226 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13226 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13226 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20892 = mem[(32 * idx) + 128]
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20892)
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20892), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13226 + 228] == bool(mem[_13226 + 228])
                                if not mem[_13226 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13226 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21627 = mem[(32 * idx) + 128]
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21627)
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21627), address(cd[4])
                    else:
                        mem[_13327 + _13226 + 196] = 0
                        call address(_13210).mem[_13226 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13226 + 200 len _13327 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13226 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13226 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13226 + 264] = mem[idx + _13226 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13226 + 264]
                            if not mem[96]:
                                mem[_13226 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + 264] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + 200], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20895 = mem[(32 * idx) + 128]
                                mem[_13226 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + (2 * ceil32(return_data.size)) + 200] = address(_20895)
                                mem[_13226 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20895), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13226 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + 264] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + 200], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21633 = mem[(32 * idx) + 128]
                                mem[_13226 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + (2 * ceil32(return_data.size)) + 200] = address(_21633)
                                mem[_13226 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21633), address(cd[4])
                        else:
                            mem[_13226 + 196] = return_data.size
                            mem[_13226 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13226 + ceil32(return_data.size) + 265] = mem[idx + _13226 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13226 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13226 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20898 = mem[(32 * idx) + 128]
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20898)
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20898), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13226 + 228] == bool(mem[_13226 + 228])
                                if not mem[_13226 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13226 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13226 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13106
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13106
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13226 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21639 = mem[(32 * idx) + 128]
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21639)
                                mem[_13226 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21639), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13106 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13106:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13106
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13106:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13106
        else:
            mem[mem[64] + 4] = 8
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 8
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12989 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _12997 = mem[_12989]
            require mem[_12989] == mem[_12989 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _13017 = mem[(32 * idx) + 128]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _13021 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = address(_13017)
            mem[mem[64] + 36] = _13021
            require ext_code.size(address(_12997))
            call address(_12997).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(_13017), _13021
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _13063 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13109 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13122 = mem[_13109]
                require mem[_13109] == mem[_13109 + 12 len 20]
                mem[mem[64] + 4] = mem[_13109 + 12 len 20]
                require ext_code.size(address(_13063))
                staticcall address(_13063).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_13122)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13175 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13199 = mem[_13175]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_13175] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13340 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13340] == mem[_13340 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13432 = mem[(32 * idx) + 128]
                    _13480 = mem[64]
                    mem[mem[64] + 36] = mem[_13340 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13199
                    _13563 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13563 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13563 + 36 len 28]
                    mem[64] = _13480 + 196
                    mem[_13480 + 132] = 32
                    mem[_13480 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13432)):
                        revert with 0, 'Address: call to non-contract'
                    _13740 = mem[_13563]
                    t = 0
                    while t < _13740:
                        mem[t + _13480 + 196] = mem[t + _13563 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13740) <= _13740:
                        call address(_13432).mem[_13480 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13480 + 200 len _13740 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13480 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13480 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13480 + 264] = mem[idx + _13480 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13480 + 264]
                            if not mem[96]:
                                mem[_13480 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + 264] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + 200], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _20925 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + (2 * ceil32(return_data.size)) + 200] = address(_20925)
                                mem[_13480 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20925), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13480 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + 264] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + 200], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _21693 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + (2 * ceil32(return_data.size)) + 200] = address(_21693)
                                mem[_13480 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21693), address(cd[4])
                        else:
                            mem[_13480 + 196] = return_data.size
                            mem[_13480 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13480 + ceil32(return_data.size) + 265] = mem[idx + _13480 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13480 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13480 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _20928 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20928)
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20928), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13480 + 228] == bool(mem[_13480 + 228])
                                if not mem[_13480 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13480 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _21699 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21699)
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21699), address(cd[4])
                    else:
                        mem[_13740 + _13480 + 196] = 0
                        call address(_13432).mem[_13480 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13480 + 200 len _13740 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13480 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13480 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13480 + 264] = mem[idx + _13480 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13480 + 264]
                            if not mem[96]:
                                mem[_13480 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + 264] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + 200], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _20931 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + (2 * ceil32(return_data.size)) + 200] = address(_20931)
                                mem[_13480 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20931), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13480 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + 264] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + 200], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _21705 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + (2 * ceil32(return_data.size)) + 200] = address(_21705)
                                mem[_13480 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21705), address(cd[4])
                        else:
                            mem[_13480 + 196] = return_data.size
                            mem[_13480 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13480 + ceil32(return_data.size) + 265] = mem[idx + _13480 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13480 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13480 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _20934 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20934)
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20934), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13480 + 228] == bool(mem[_13480 + 228])
                                if not mem[_13480 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13480 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13480 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13199
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13199
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13480 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_13740) >= mem[96]:
                                    revert with 0, 50
                                _21711 = mem[(Mask(251, 0, _13740 + 31) * 32) + 128]
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21711)
                                mem[_13480 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21711), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if ceil32(_13740) >= mem[96]:
                        revert with 0, 50
                    if ceil32(_13740) >= mem[96]:
                        revert with 0, 50
                    if _13199 > totalTokenBalance[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]]:
                        totalTokenBalance[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]] < _13199:
                            revert with 0, 17
                        totalTokenBalance[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]] -= _13199
                    if ceil32(_13740) >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20], 5)
                    if stor5[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]][address(cd[4])] < _13199:
                        revert with 0, 17
                    stor5[mem[(Mask(251, 0, _13740 + 31) * 32) + 140 len 20]][address(cd[4])] -= _13199
                    if ceil32(_13740) == -1:
                        revert with 0, 17
                    t = ceil32(_13740) + 1
                    s = s
                    continue 
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _13268 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13348 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_13348] == mem[_13348 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _13479 = mem[(32 * idx) + 128]
                _13528 = mem[64]
                mem[mem[64] + 36] = mem[_13348 + 12 len 20]
                mem[mem[64] + 68] = address(cd[4])
                mem[mem[64] + 100] = _13268
                _13600 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_13600 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13600 + 36 len 28]
                mem[64] = _13528 + 196
                mem[_13528 + 132] = 32
                mem[_13528 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_13479)):
                    revert with 0, 'Address: call to non-contract'
                _13798 = mem[_13600]
                t = 0
                while t < _13798:
                    mem[t + _13528 + 196] = mem[t + _13600 + 32]
                    t = t + 32
                    continue 
                if ceil32(_13798) <= _13798:
                    call address(_13479).mem[_13528 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_13528 + 200 len _13798 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_13528 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13528 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13528 + 264] = mem[idx + _13528 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13528 + 264]
                        if not mem[96]:
                            mem[_13528 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + 264] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + 200], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _20913 = mem[(32 * idx) + 128]
                            mem[_13528 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + (2 * ceil32(return_data.size)) + 200] = address(_20913)
                            mem[_13528 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_20913), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13528 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + 264] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + 200], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21669 = mem[(32 * idx) + 128]
                            mem[_13528 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + (2 * ceil32(return_data.size)) + 200] = address(_21669)
                            mem[_13528 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21669), address(cd[4])
                    else:
                        mem[_13528 + 196] = return_data.size
                        mem[_13528 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13528 + ceil32(return_data.size) + 265] = mem[idx + _13528 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13528 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_13528 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _20916 = mem[(32 * idx) + 128]
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20916)
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_20916), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_13528 + 228] == bool(mem[_13528 + 228])
                            if not mem[_13528 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13528 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21675 = mem[(32 * idx) + 128]
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21675)
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21675), address(cd[4])
                else:
                    mem[_13798 + _13528 + 196] = 0
                    call address(_13479).mem[_13528 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_13528 + 200 len _13798 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_13528 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13528 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13528 + 264] = mem[idx + _13528 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13528 + 264]
                        if not mem[96]:
                            mem[_13528 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + 264] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + 200], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _20919 = mem[(32 * idx) + 128]
                            mem[_13528 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + (2 * ceil32(return_data.size)) + 200] = address(_20919)
                            mem[_13528 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_20919), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13528 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + 264] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + 200], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21681 = mem[(32 * idx) + 128]
                            mem[_13528 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + (2 * ceil32(return_data.size)) + 200] = address(_21681)
                            mem[_13528 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21681), address(cd[4])
                    else:
                        mem[_13528 + 196] = return_data.size
                        mem[_13528 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _13528 + ceil32(return_data.size) + 265] = mem[idx + _13528 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_13528 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_13528 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _20922 = mem[(32 * idx) + 128]
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20922)
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_20922), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_13528 + 228] == bool(mem[_13528 + 228])
                            if not mem[_13528 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_13528 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_13528 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13268
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13268
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_13528 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _21687 = mem[(32 * idx) + 128]
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21687)
                            mem[_13528 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_21687), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _13268 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13268:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13268
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13268:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13268
            else:
                if cd[100]:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13075 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13084 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 4
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13129 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13141 = mem[_13129]
                    require mem[_13129] == mem[_13129 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(cd[4])
                    mem[mem[64] + 68] = _13084
                    require ext_code.size(address(_13141))
                    call address(_13141).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(cd[4]), _13084
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = 5
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 5
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13319 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _13342 = mem[_13319]
                    require mem[_13319] == mem[_13319 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13394 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = address(_13394)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(address(_13342))
                    call address(_13342).updateUserRewards(address arg1, address arg2) with:
                         gas gas_remaining wei
                        args address(_13394), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13084 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13084:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13084
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13084:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13084
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _13075
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                _13073 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13114 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13128 = mem[_13114]
                require mem[_13114] == mem[_13114 + 12 len 20]
                mem[mem[64] + 4] = mem[_13114 + 12 len 20]
                require ext_code.size(address(_13073))
                staticcall address(_13073).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_13128)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13188 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13214 = mem[_13188]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_13188] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13349 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13349] == mem[_13349 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13482 = mem[(32 * idx) + 128]
                    _13530 = mem[64]
                    mem[mem[64] + 36] = mem[_13349 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13214
                    _13603 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13603 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13603 + 36 len 28]
                    mem[64] = _13530 + 196
                    mem[_13530 + 132] = 32
                    mem[_13530 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13482)):
                        revert with 0, 'Address: call to non-contract'
                    _13802 = mem[_13603]
                    t = 0
                    while t < _13802:
                        mem[t + _13530 + 196] = mem[t + _13603 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13802) <= _13802:
                        call address(_13482).mem[_13530 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13530 + 200 len _13802 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13530 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13530 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13530 + 264] = mem[idx + _13530 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13530 + 264]
                            if not mem[96]:
                                mem[_13530 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + 264] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + 200], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20949 = mem[(32 * idx) + 128]
                                mem[_13530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + (2 * ceil32(return_data.size)) + 200] = address(_20949)
                                mem[_13530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20949), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13530 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + 264] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + 200], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21741 = mem[(32 * idx) + 128]
                                mem[_13530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + (2 * ceil32(return_data.size)) + 200] = address(_21741)
                                mem[_13530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21741), address(cd[4])
                        else:
                            mem[_13530 + 196] = return_data.size
                            mem[_13530 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13530 + ceil32(return_data.size) + 265] = mem[idx + _13530 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13530 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13530 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20952 = mem[(32 * idx) + 128]
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20952)
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20952), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13530 + 228] == bool(mem[_13530 + 228])
                                if not mem[_13530 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13530 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21747 = mem[(32 * idx) + 128]
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21747)
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21747), address(cd[4])
                    else:
                        mem[_13802 + _13530 + 196] = 0
                        call address(_13482).mem[_13530 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13530 + 200 len _13802 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13530 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13530 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13530 + 264] = mem[idx + _13530 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13530 + 264]
                            if not mem[96]:
                                mem[_13530 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + 264] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + 200], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20955 = mem[(32 * idx) + 128]
                                mem[_13530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + (2 * ceil32(return_data.size)) + 200] = address(_20955)
                                mem[_13530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20955), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13530 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + 264] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + 200], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21753 = mem[(32 * idx) + 128]
                                mem[_13530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + (2 * ceil32(return_data.size)) + 200] = address(_21753)
                                mem[_13530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21753), address(cd[4])
                        else:
                            mem[_13530 + 196] = return_data.size
                            mem[_13530 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13530 + ceil32(return_data.size) + 265] = mem[idx + _13530 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13530 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13530 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20958 = mem[(32 * idx) + 128]
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20958)
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20958), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13530 + 228] == bool(mem[_13530 + 228])
                                if not mem[_13530 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13530 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13214
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13214
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21759 = mem[(32 * idx) + 128]
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21759)
                                mem[_13530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21759), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13214 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13214:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13214
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13214:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13214
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _13286 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13356 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_13356] == mem[_13356 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _13529 = mem[(32 * idx) + 128]
                    _13565 = mem[64]
                    mem[mem[64] + 36] = mem[_13356 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _13286
                    _13648 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_13648 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_13648 + 36 len 28]
                    mem[64] = _13565 + 196
                    mem[_13565 + 132] = 32
                    mem[_13565 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_13529)):
                        revert with 0, 'Address: call to non-contract'
                    _13848 = mem[_13648]
                    t = 0
                    while t < _13848:
                        mem[t + _13565 + 196] = mem[t + _13648 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13848) <= _13848:
                        call address(_13529).mem[_13565 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13565 + 200 len _13848 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13565 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13565 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13565 + 264] = mem[idx + _13565 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13565 + 264]
                            if not mem[96]:
                                mem[_13565 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + 264] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + 200], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20937 = mem[(32 * idx) + 128]
                                mem[_13565 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + (2 * ceil32(return_data.size)) + 200] = address(_20937)
                                mem[_13565 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20937), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13565 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + 264] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + 200], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21717 = mem[(32 * idx) + 128]
                                mem[_13565 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + (2 * ceil32(return_data.size)) + 200] = address(_21717)
                                mem[_13565 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21717), address(cd[4])
                        else:
                            mem[_13565 + 196] = return_data.size
                            mem[_13565 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13565 + ceil32(return_data.size) + 265] = mem[idx + _13565 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13565 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13565 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20940 = mem[(32 * idx) + 128]
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20940)
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20940), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13565 + 228] == bool(mem[_13565 + 228])
                                if not mem[_13565 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13565 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21723 = mem[(32 * idx) + 128]
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21723)
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21723), address(cd[4])
                    else:
                        mem[_13848 + _13565 + 196] = 0
                        call address(_13529).mem[_13565 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_13565 + 200 len _13848 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_13565 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13565 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13565 + 264] = mem[idx + _13565 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13565 + 264]
                            if not mem[96]:
                                mem[_13565 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + 264] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + 200], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20943 = mem[(32 * idx) + 128]
                                mem[_13565 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + (2 * ceil32(return_data.size)) + 200] = address(_20943)
                                mem[_13565 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20943), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13565 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + 264] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + 200], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21729 = mem[(32 * idx) + 128]
                                mem[_13565 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + (2 * ceil32(return_data.size)) + 200] = address(_21729)
                                mem[_13565 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21729), address(cd[4])
                        else:
                            mem[_13565 + 196] = return_data.size
                            mem[_13565 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _13565 + ceil32(return_data.size) + 265] = mem[idx + _13565 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_13565 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_13565 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _20946 = mem[(32 * idx) + 128]
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_20946)
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_20946), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_13565 + 228] == bool(mem[_13565 + 228])
                                if not mem[_13565 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_13565 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_13565 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _13286
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _13286
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_13565 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _21735 = mem[(32 * idx) + 128]
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_21735)
                                mem[_13565 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_21735), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _13286 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _13286:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _13286
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _13286:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _13286
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        continue 
    return s
}

function sub_317b1050(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] == address(cd[4])
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 36).length) + 97 < 96 or ceil32(32 * ('cd', 36).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 36).length
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] == bool(cd[68])
    mem[0] = msg.sender
    mem[32] = 1
    if not stor1[msg.sender]:
        revert with 0, 'Controlled::onlyController: Caller is not controller'
    if ('cd', 36).length > test266151307():
        revert with 0, 65
    if not ('cd', 36).length:
        mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + 133] = 4
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 4
        mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + 129] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        idx = 0
        while idx < ('cd', 36).length:
            if idx >= ('cd', 36).length:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + 140 len 20]
            mem[32] = sha3(address(cd[4]), 6)
            if userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])] >= stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] = 0
            else:
                mem[0] = address(cd[4])
                mem[32] = sha3(address(mem[(32 * idx) + 128]), 5)
                if stor5[address(mem[(32 * idx) + 128])][address(cd[4])] < userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
                    revert with 0, 17
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] = stor5[address(mem[(32 * idx) + 128])][address(cd[4])] - userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + ceil32(return_data.size) + 133] = 3
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 3
        mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + ceil32(return_data.size) + 129] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(ext_call.return_data[12 len 20])
        staticcall ext_call.return_data[12 len 20].getWethTokenAddress() with:
                gas gas_remaining wei
        mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + (2 * ceil32(return_data.size)) + 129] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + (4 * ceil32(return_data.size)) + 129
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ('cd', 36).length != mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 'UserPositions::_withdraw: Tokens array length does not match amounts array length'
        idx = 0
        s = 0
        while idx < ('cd', 36).length:
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if 0 == mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                mem[mem[64] + 4] = 5
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 5
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25829 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25832 = mem[_25829]
                require mem[_25829] == mem[_25829 + 12 len 20]
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_25832))
                staticcall address(_25832).getUserEthRewards(address arg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25871 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_25871] <= 0:
                    mem[mem[64] + 4] = address(cd[4])
                    require ext_code.size(address(ext_call.return_data[0]))
                    call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
                         gas gas_remaining wei
                        args address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25926 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25938 = mem[_25926]
                    _25947 = mem[64]
                    mem[mem[64]] = 128
                    _25957 = mem[ceil32(32 * ('cd', 36).length) + 97]
                    mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
                    idx = 0
                    t = ceil32(32 * ('cd', 36).length) + 129
                    u = mem[64] + 160
                    while idx < _25957:
                        mem[u] = mem[t]
                        idx = idx + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_25947 + 32] = s
                    mem[_25947 + 64] = 0
                    mem[_25947 + 96] = _25938
                    return memory
                      from mem[64]
                       len _25947 + (32 * _25957) + -mem[64] + 160
                mem[mem[64] + 4] = 5
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 5
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25939 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25948 = mem[_25939]
                require mem[_25939] == mem[_25939 + 12 len 20]
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_25948))
                call address(_25948).0xc115b22c with:
                     gas gas_remaining wei
                    args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25986 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25995 = mem[_25986]
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
                     gas gas_remaining wei
                    args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26057 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26084 = mem[_26057]
                _26101 = mem[64]
                mem[mem[64]] = 128
                _26120 = mem[ceil32(32 * ('cd', 36).length) + 97]
                mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
                idx = 0
                t = ceil32(32 * ('cd', 36).length) + 129
                u = mem[64] + 160
                while idx < _26120:
                    mem[u] = mem[t]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_26101 + 32] = s
                mem[_26101 + 64] = _25995
                mem[_26101 + 96] = _26084
                return memory
                  from mem[64]
                   len _26101 + (32 * _26120) + -mem[64] + 160
            if idx >= mem[96]:
                revert with 0, 50
            _25810 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getTokenAcceptingWithdrawals(address arg1) with:
                    gas gas_remaining wei
                   args address(_25810)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25822 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25822] == bool(mem[_25822])
            if not mem[_25822]:
                revert with 0, 'UserPositions::_withdraw: This token is not accepting withdrawals'
            if idx >= mem[96]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + 140 len 20]
            mem[32] = sha3(address(cd[4]), 6)
            if userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])] >= stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > 0:
                    revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
                if idx >= mem[96]:
                    revert with 0, 50
                _25890 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25925 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25937 = mem[_25925]
                require mem[_25925] == mem[_25925 + 12 len 20]
                mem[mem[64] + 4] = mem[_25925 + 12 len 20]
                require ext_code.size(address(_25890))
                staticcall address(_25890).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_25937)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25975 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_25975] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    if idx >= mem[96]:
                        revert with 0, 50
                    if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26026 = mem[(32 * idx) + 128]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26092 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26108 = mem[_26092]
                        require mem[_26092] == mem[_26092 + 12 len 20]
                        mem[mem[64] + 4] = mem[_26092 + 12 len 20]
                        require ext_code.size(address(_26026))
                        staticcall address(_26026).0x70a08231 with:
                                gas gas_remaining wei
                               args address(_26108)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26203 = mem[_26182]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        if mem[_26182] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                            mem[mem[64] + 4] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26355 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26355] == mem[_26355 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _26447 = mem[(32 * idx) + 128]
                            _26465 = mem[64]
                            mem[mem[64] + 36] = mem[_26355 + 12 len 20]
                            mem[mem[64] + 68] = address(cd[4])
                            mem[mem[64] + 100] = _26203
                            _26508 = mem[64]
                            mem[mem[64]] = 100
                            mem[64] = mem[64] + 132
                            mem[_26508 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26508 + 36 len 28]
                            mem[64] = _26465 + 196
                            mem[_26465 + 132] = 32
                            mem[_26465 + 164] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(_26447)):
                                revert with 0, 'Address: call to non-contract'
                            _26645 = mem[_26508]
                            t = 0
                            while t < _26645:
                                mem[t + _26465 + 196] = mem[t + _26508 + 32]
                                t = t + 32
                                continue 
                            if ceil32(_26645) <= _26645:
                                call address(_26447).mem[_26465 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26465 + 200 len _26645 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26465 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26465 + 264] = mem[idx + _26465 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26465 + 264]
                                    if not mem[96]:
                                        mem[_26465 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + 264] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + 200], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41966 = mem[(32 * idx) + 128]
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 200] = address(_41966)
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41966), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26465 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + 264] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + 200], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43486 = mem[(32 * idx) + 128]
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 200] = address(_43486)
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43486), address(cd[4])
                                else:
                                    mem[_26465 + 196] = return_data.size
                                    mem[_26465 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26465 + ceil32(return_data.size) + 265] = mem[idx + _26465 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26465 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26465 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41969 = mem[(32 * idx) + 128]
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41969)
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41969), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26465 + 228] == bool(mem[_26465 + 228])
                                        if not mem[_26465 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26465 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43492 = mem[(32 * idx) + 128]
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43492)
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43492), address(cd[4])
                            else:
                                mem[_26645 + _26465 + 196] = 0
                                call address(_26447).mem[_26465 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26465 + 200 len _26645 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26465 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26465 + 264] = mem[idx + _26465 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26465 + 264]
                                    if not mem[96]:
                                        mem[_26465 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + 264] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + 200], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41972 = mem[(32 * idx) + 128]
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 200] = address(_41972)
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41972), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26465 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + 264] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + 200], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43498 = mem[(32 * idx) + 128]
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 200] = address(_43498)
                                        mem[_26465 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43498), address(cd[4])
                                else:
                                    mem[_26465 + 196] = return_data.size
                                    mem[_26465 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26465 + ceil32(return_data.size) + 265] = mem[idx + _26465 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26465 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26465 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41975 = mem[(32 * idx) + 128]
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41975)
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41975), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26465 + 228] == bool(mem[_26465 + 228])
                                        if not mem[_26465 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26465 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26465 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26203
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26203
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26465 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43504 = mem[(32 * idx) + 128]
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43504)
                                        mem[_26465 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43504), address(cd[4])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if idx >= mem[96]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if _26203 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                            else:
                                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26203:
                                    revert with 0, 17
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26203
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[0] = address(cd[4])
                            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26203:
                                revert with 0, 17
                            stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26203
                        else:
                            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                                revert with 0, 50
                            _26278 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                            mem[mem[64] + 4] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26368 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26368] == mem[_26368 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _26464 = mem[(32 * idx) + 128]
                            _26485 = mem[64]
                            mem[mem[64] + 36] = mem[_26368 + 12 len 20]
                            mem[mem[64] + 68] = address(cd[4])
                            mem[mem[64] + 100] = _26278
                            _26536 = mem[64]
                            mem[mem[64]] = 100
                            mem[64] = mem[64] + 132
                            mem[_26536 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26536 + 36 len 28]
                            mem[64] = _26485 + 196
                            mem[_26485 + 132] = 32
                            mem[_26485 + 164] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(_26464)):
                                revert with 0, 'Address: call to non-contract'
                            _26682 = mem[_26536]
                            t = 0
                            while t < _26682:
                                mem[t + _26485 + 196] = mem[t + _26536 + 32]
                                t = t + 32
                                continue 
                            if ceil32(_26682) <= _26682:
                                call address(_26464).mem[_26485 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26485 + 200 len _26682 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26485 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26485 + 264] = mem[idx + _26485 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26485 + 264]
                                    if not mem[96]:
                                        mem[_26485 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + 264] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + 200], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41954 = mem[(32 * idx) + 128]
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 200] = address(_41954)
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41954), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26485 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + 264] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + 200], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43462 = mem[(32 * idx) + 128]
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 200] = address(_43462)
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43462), address(cd[4])
                                else:
                                    mem[_26485 + 196] = return_data.size
                                    mem[_26485 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26485 + ceil32(return_data.size) + 265] = mem[idx + _26485 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26485 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26485 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41957 = mem[(32 * idx) + 128]
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41957)
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41957), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26485 + 228] == bool(mem[_26485 + 228])
                                        if not mem[_26485 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26485 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43468 = mem[(32 * idx) + 128]
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43468)
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43468), address(cd[4])
                            else:
                                mem[_26682 + _26485 + 196] = 0
                                call address(_26464).mem[_26485 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26485 + 200 len _26682 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26485 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26485 + 264] = mem[idx + _26485 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26485 + 264]
                                    if not mem[96]:
                                        mem[_26485 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + 264] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + 200], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41960 = mem[(32 * idx) + 128]
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 200] = address(_41960)
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41960), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26485 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + 264] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + 200], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43474 = mem[(32 * idx) + 128]
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 200] = address(_43474)
                                        mem[_26485 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43474), address(cd[4])
                                else:
                                    mem[_26485 + 196] = return_data.size
                                    mem[_26485 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26485 + ceil32(return_data.size) + 265] = mem[idx + _26485 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26485 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26485 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41963 = mem[(32 * idx) + 128]
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41963)
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41963), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26485 + 228] == bool(mem[_26485 + 228])
                                        if not mem[_26485 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26485 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26485 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26278
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26278
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26485 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43480 = mem[(32 * idx) + 128]
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43480)
                                        mem[_26485 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43480), address(cd[4])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if idx >= mem[96]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if _26278 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                            else:
                                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26278:
                                    revert with 0, 17
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26278
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[0] = address(cd[4])
                            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26278:
                                revert with 0, 17
                            stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26278
                    else:
                        if cd[68]:
                            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                                revert with 0, 50
                            _26041 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                                revert with 0, 50
                            _26056 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                            mem[mem[64] + 4] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26117 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26142 = mem[_26117]
                            require mem[_26117] == mem[_26117 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                            mem[mem[64] + 36] = address(cd[4])
                            mem[mem[64] + 68] = _26056
                            require ext_code.size(address(_26142))
                            call address(_26142).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4], address(cd[4]), _26056
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64] + 4] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26357 = mem[_26328]
                            require mem[_26328] == mem[_26328 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _26417 = mem[(32 * idx) + 128]
                            mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = address(_26417)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(address(_26357))
                            call address(_26357).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_26417), address(cd[4])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if idx >= mem[96]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if _26056 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                            else:
                                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26056:
                                    revert with 0, 17
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26056
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[0] = address(cd[4])
                            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26056:
                                revert with 0, 17
                            stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26056
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = _26041
                            continue 
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26039 = mem[(32 * idx) + 128]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26099 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26116 = mem[_26099]
                        require mem[_26099] == mem[_26099 + 12 len 20]
                        mem[mem[64] + 4] = mem[_26099 + 12 len 20]
                        require ext_code.size(address(_26039))
                        staticcall address(_26039).0x70a08231 with:
                                gas gas_remaining wei
                               args address(_26116)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26221 = mem[_26193]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        if mem[_26193] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                            mem[mem[64] + 4] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26369 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26369] == mem[_26369 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _26467 = mem[(32 * idx) + 128]
                            _26487 = mem[64]
                            mem[mem[64] + 36] = mem[_26369 + 12 len 20]
                            mem[mem[64] + 68] = address(cd[4])
                            mem[mem[64] + 100] = _26221
                            _26539 = mem[64]
                            mem[mem[64]] = 100
                            mem[64] = mem[64] + 132
                            mem[_26539 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26539 + 36 len 28]
                            mem[64] = _26487 + 196
                            mem[_26487 + 132] = 32
                            mem[_26487 + 164] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(_26467)):
                                revert with 0, 'Address: call to non-contract'
                            _26686 = mem[_26539]
                            t = 0
                            while t < _26686:
                                mem[t + _26487 + 196] = mem[t + _26539 + 32]
                                t = t + 32
                                continue 
                            if ceil32(_26686) <= _26686:
                                call address(_26467).mem[_26487 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26487 + 200 len _26686 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26487 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26487 + 264] = mem[idx + _26487 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26487 + 264]
                                    if not mem[96]:
                                        mem[_26487 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + 264] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + 200], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41990 = mem[(32 * idx) + 128]
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 200] = address(_41990)
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41990), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26487 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + 264] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + 200], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43534 = mem[(32 * idx) + 128]
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 200] = address(_43534)
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43534), address(cd[4])
                                else:
                                    mem[_26487 + 196] = return_data.size
                                    mem[_26487 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26487 + ceil32(return_data.size) + 265] = mem[idx + _26487 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26487 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26487 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41993 = mem[(32 * idx) + 128]
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41993)
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41993), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26487 + 228] == bool(mem[_26487 + 228])
                                        if not mem[_26487 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26487 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43540 = mem[(32 * idx) + 128]
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43540)
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43540), address(cd[4])
                            else:
                                mem[_26686 + _26487 + 196] = 0
                                call address(_26467).mem[_26487 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26487 + 200 len _26686 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26487 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26487 + 264] = mem[idx + _26487 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26487 + 264]
                                    if not mem[96]:
                                        mem[_26487 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + 264] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + 200], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41996 = mem[(32 * idx) + 128]
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 200] = address(_41996)
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41996), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26487 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + 264] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + 200], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43546 = mem[(32 * idx) + 128]
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 200] = address(_43546)
                                        mem[_26487 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43546), address(cd[4])
                                else:
                                    mem[_26487 + 196] = return_data.size
                                    mem[_26487 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26487 + ceil32(return_data.size) + 265] = mem[idx + _26487 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26487 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26487 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41999 = mem[(32 * idx) + 128]
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41999)
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41999), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26487 + 228] == bool(mem[_26487 + 228])
                                        if not mem[_26487 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26487 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26487 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26221
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26221
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26487 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43552 = mem[(32 * idx) + 128]
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43552)
                                        mem[_26487 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43552), address(cd[4])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if idx >= mem[96]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if _26221 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                            else:
                                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26221:
                                    revert with 0, 17
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26221
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[0] = address(cd[4])
                            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26221:
                                revert with 0, 17
                            stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26221
                        else:
                            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                                revert with 0, 50
                            _26295 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                            mem[mem[64] + 4] = 0
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26382 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26382] == mem[_26382 + 12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _26486 = mem[(32 * idx) + 128]
                            _26510 = mem[64]
                            mem[mem[64] + 36] = mem[_26382 + 12 len 20]
                            mem[mem[64] + 68] = address(cd[4])
                            mem[mem[64] + 100] = _26295
                            _26569 = mem[64]
                            mem[mem[64]] = 100
                            mem[64] = mem[64] + 132
                            mem[_26569 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26569 + 36 len 28]
                            mem[64] = _26510 + 196
                            mem[_26510 + 132] = 32
                            mem[_26510 + 164] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(_26486)):
                                revert with 0, 'Address: call to non-contract'
                            _26716 = mem[_26569]
                            t = 0
                            while t < _26716:
                                mem[t + _26510 + 196] = mem[t + _26569 + 32]
                                t = t + 32
                                continue 
                            if ceil32(_26716) <= _26716:
                                call address(_26486).mem[_26510 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26510 + 200 len _26716 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26510 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26510 + 264] = mem[idx + _26510 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26510 + 264]
                                    if not mem[96]:
                                        mem[_26510 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + 264] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + 200], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41978 = mem[(32 * idx) + 128]
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 200] = address(_41978)
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41978), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26510 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + 264] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + 200], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43510 = mem[(32 * idx) + 128]
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 200] = address(_43510)
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43510), address(cd[4])
                                else:
                                    mem[_26510 + 196] = return_data.size
                                    mem[_26510 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26510 + ceil32(return_data.size) + 265] = mem[idx + _26510 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26510 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26510 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41981 = mem[(32 * idx) + 128]
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41981)
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41981), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26510 + 228] == bool(mem[_26510 + 228])
                                        if not mem[_26510 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26510 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43516 = mem[(32 * idx) + 128]
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43516)
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43516), address(cd[4])
                            else:
                                mem[_26716 + _26510 + 196] = 0
                                call address(_26486).mem[_26510 + 196 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_26510 + 200 len _26716 - 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_26510 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26510 + 264] = mem[idx + _26510 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26510 + 264]
                                    if not mem[96]:
                                        mem[_26510 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + 264] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + 200], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41984 = mem[(32 * idx) + 128]
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 200] = address(_41984)
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41984), address(cd[4])
                                    else:
                                        require mem[96] >= 32
                                        require mem[128] == bool(mem[128])
                                        if not mem[128]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26510 + 200] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + 232] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + 264] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + 200], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 200] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + (2 * ceil32(return_data.size)) + 196
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43522 = mem[(32 * idx) + 128]
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 200] = address(_43522)
                                        mem[_26510 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43522), address(cd[4])
                                else:
                                    mem[_26510 + 196] = return_data.size
                                    mem[_26510 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + 201] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _26510 + ceil32(return_data.size) + 265] = mem[idx + _26510 + 164]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_26510 + ceil32(return_data.size) + 265]
                                    if not return_data.size:
                                        mem[_26510 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _41987 = mem[(32 * idx) + 128]
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41987)
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_41987), address(cd[4])
                                    else:
                                        require return_data.size >= 32
                                        require mem[_26510 + 228] == bool(mem[_26510 + 228])
                                        if not mem[_26510 + 228]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[_26510 + ceil32(return_data.size) + 201] = 4
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 4
                                        mem[_26510 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26295
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                             gas gas_remaining wei
                                            args mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26295
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                        require ext_code.size(sub_0f0a1c6fAddress)
                                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                                gas gas_remaining wei
                                               args 5
                                        mem[_26510 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = _26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if idx >= mem[96]:
                                            revert with 0, 50
                                        _43528 = mem[(32 * idx) + 128]
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43528)
                                        mem[_26510 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                        require ext_code.size(address(ext_call.return_data[0]))
                                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args address(_43528), address(cd[4])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if idx >= mem[96]:
                                revert with 0, 50
                            if idx >= mem[96]:
                                revert with 0, 50
                            if _26295 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                            else:
                                if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26295:
                                    revert with 0, 17
                                totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26295
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[0] = address(cd[4])
                            mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                            if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26295:
                                revert with 0, 17
                            stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26295
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    continue 
                mem[mem[64] + 4] = 8
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 8
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26043 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26072 = mem[_26043]
                require mem[_26043] == mem[_26043 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _26118 = mem[(32 * idx) + 128]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26131 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = address(_26118)
                mem[mem[64] + 36] = _26131
                require ext_code.size(address(_26072))
                call address(_26072).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_26118), _26131
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26205 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26329 = mem[_26298]
                    require mem[_26298] == mem[_26298 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26298 + 12 len 20]
                    require ext_code.size(address(_26205))
                    staticcall address(_26205).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26329)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26432 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26468 = mem[_26432]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26432] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26748] == mem[_26748 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26901 = mem[(32 * idx) + 128]
                        _26940 = mem[64]
                        mem[mem[64] + 36] = mem[_26748 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26468
                        _27074 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_27074 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27074 + 36 len 28]
                        mem[64] = _26940 + 196
                        mem[_26940 + 132] = 32
                        mem[_26940 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26901)):
                            revert with 0, 'Address: call to non-contract'
                        _27412 = mem[_27074]
                        t = 0
                        while t < _27412:
                            mem[t + _26940 + 196] = mem[t + _27074 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_27412) <= _27412:
                            call address(_26901).mem[_26940 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26940 + 200 len _27412 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26940 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26940 + 264] = mem[idx + _26940 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26940 + 264]
                                if not mem[96]:
                                    mem[_26940 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + 264] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + 200], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42014 = mem[(32 * idx) + 128]
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 200] = address(_42014)
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42014), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26940 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + 264] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + 200], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43582 = mem[(32 * idx) + 128]
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 200] = address(_43582)
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43582), address(cd[4])
                            else:
                                mem[_26940 + 196] = return_data.size
                                mem[_26940 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26940 + ceil32(return_data.size) + 265] = mem[idx + _26940 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26940 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26940 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42017 = mem[(32 * idx) + 128]
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42017)
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42017), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26940 + 228] == bool(mem[_26940 + 228])
                                    if not mem[_26940 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26940 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43588 = mem[(32 * idx) + 128]
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43588)
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43588), address(cd[4])
                        else:
                            mem[_27412 + _26940 + 196] = 0
                            call address(_26901).mem[_26940 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26940 + 200 len _27412 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26940 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26940 + 264] = mem[idx + _26940 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26940 + 264]
                                if not mem[96]:
                                    mem[_26940 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + 264] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + 200], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42020 = mem[(32 * idx) + 128]
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 200] = address(_42020)
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42020), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26940 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + 264] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + 200], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43594 = mem[(32 * idx) + 128]
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 200] = address(_43594)
                                    mem[_26940 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43594), address(cd[4])
                            else:
                                mem[_26940 + 196] = return_data.size
                                mem[_26940 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26940 + ceil32(return_data.size) + 265] = mem[idx + _26940 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26940 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26940 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42023 = mem[(32 * idx) + 128]
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42023)
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42023), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26940 + 228] == bool(mem[_26940 + 228])
                                    if not mem[_26940 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26940 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26940 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26468
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26468
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26940 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43600 = mem[(32 * idx) + 128]
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43600)
                                    mem[_26940 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43600), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26468 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26468:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26468
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26468:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26468
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26576 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26773 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26773] == mem[_26773 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26939 = mem[(32 * idx) + 128]
                        _26998 = mem[64]
                        mem[mem[64] + 36] = mem[_26773 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26576
                        _27156 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_27156 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27156 + 36 len 28]
                        mem[64] = _26998 + 196
                        mem[_26998 + 132] = 32
                        mem[_26998 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26939)):
                            revert with 0, 'Address: call to non-contract'
                        _27508 = mem[_27156]
                        t = 0
                        while t < _27508:
                            mem[t + _26998 + 196] = mem[t + _27156 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_27508) <= _27508:
                            call address(_26939).mem[_26998 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26998 + 200 len _27508 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26998 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26998 + 264] = mem[idx + _26998 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26998 + 264]
                                if not mem[96]:
                                    mem[_26998 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + 264] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + 200], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42002 = mem[(32 * idx) + 128]
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 200] = address(_42002)
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42002), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26998 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + 264] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + 200], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43558 = mem[(32 * idx) + 128]
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 200] = address(_43558)
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43558), address(cd[4])
                            else:
                                mem[_26998 + 196] = return_data.size
                                mem[_26998 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26998 + ceil32(return_data.size) + 265] = mem[idx + _26998 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26998 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26998 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42005 = mem[(32 * idx) + 128]
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42005)
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42005), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26998 + 228] == bool(mem[_26998 + 228])
                                    if not mem[_26998 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26998 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43564 = mem[(32 * idx) + 128]
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43564)
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43564), address(cd[4])
                        else:
                            mem[_27508 + _26998 + 196] = 0
                            call address(_26939).mem[_26998 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26998 + 200 len _27508 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26998 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26998 + 264] = mem[idx + _26998 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26998 + 264]
                                if not mem[96]:
                                    mem[_26998 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + 264] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + 200], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42008 = mem[(32 * idx) + 128]
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 200] = address(_42008)
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42008), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26998 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + 264] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + 200], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43570 = mem[(32 * idx) + 128]
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 200] = address(_43570)
                                    mem[_26998 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43570), address(cd[4])
                            else:
                                mem[_26998 + 196] = return_data.size
                                mem[_26998 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26998 + ceil32(return_data.size) + 265] = mem[idx + _26998 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26998 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26998 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42011 = mem[(32 * idx) + 128]
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42011)
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42011), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26998 + 228] == bool(mem[_26998 + 228])
                                    if not mem[_26998 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26998 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26998 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26576
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26576
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26998 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43576 = mem[(32 * idx) + 128]
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43576)
                                    mem[_26998 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43576), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26576 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26576:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26576
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26576:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26576
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    continue 
                if cd[68]:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26224 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26243 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 4
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26344 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26370 = mem[_26344]
                    require mem[_26344] == mem[_26344 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(cd[4])
                    mem[mem[64] + 68] = _26243
                    require ext_code.size(address(_26370))
                    call address(_26370).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(cd[4]), _26243
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = 5
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 5
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26689 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26750 = mem[_26689]
                    require mem[_26689] == mem[_26689 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26852 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = address(_26852)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(address(_26750))
                    call address(_26750).updateUserRewards(address arg1, address arg2) with:
                         gas gas_remaining wei
                        args address(_26852), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26243 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26243:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26243
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26243:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26243
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _26224
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                _26222 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26343 = mem[_26313]
                require mem[_26313] == mem[_26313 + 12 len 20]
                mem[mem[64] + 4] = mem[_26313 + 12 len 20]
                require ext_code.size(address(_26222))
                staticcall address(_26222).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26343)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26450 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26490 = mem[_26450]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26450] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26774 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26774] == mem[_26774 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26942 = mem[(32 * idx) + 128]
                    _27000 = mem[64]
                    mem[mem[64] + 36] = mem[_26774 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26490
                    _27159 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27159 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27159 + 36 len 28]
                    mem[64] = _27000 + 196
                    mem[_27000 + 132] = 32
                    mem[_27000 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26942)):
                        revert with 0, 'Address: call to non-contract'
                    _27512 = mem[_27159]
                    t = 0
                    while t < _27512:
                        mem[t + _27000 + 196] = mem[t + _27159 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27512) <= _27512:
                        call address(_26942).mem[_27000 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27000 + 200 len _27512 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27000 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27000 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27000 + 264] = mem[idx + _27000 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27000 + 264]
                            if not mem[96]:
                                mem[_27000 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + 264] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + 200], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42038 = mem[(32 * idx) + 128]
                                mem[_27000 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + (2 * ceil32(return_data.size)) + 200] = address(_42038)
                                mem[_27000 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42038), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27000 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + 264] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + 200], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43630 = mem[(32 * idx) + 128]
                                mem[_27000 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + (2 * ceil32(return_data.size)) + 200] = address(_43630)
                                mem[_27000 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43630), address(cd[4])
                        else:
                            mem[_27000 + 196] = return_data.size
                            mem[_27000 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27000 + ceil32(return_data.size) + 265] = mem[idx + _27000 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27000 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27000 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42041 = mem[(32 * idx) + 128]
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42041)
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42041), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27000 + 228] == bool(mem[_27000 + 228])
                                if not mem[_27000 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27000 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43636 = mem[(32 * idx) + 128]
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43636)
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43636), address(cd[4])
                    else:
                        mem[_27512 + _27000 + 196] = 0
                        call address(_26942).mem[_27000 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27000 + 200 len _27512 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27000 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27000 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27000 + 264] = mem[idx + _27000 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27000 + 264]
                            if not mem[96]:
                                mem[_27000 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + 264] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + 200], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42044 = mem[(32 * idx) + 128]
                                mem[_27000 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + (2 * ceil32(return_data.size)) + 200] = address(_42044)
                                mem[_27000 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42044), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27000 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + 264] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + 200], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43642 = mem[(32 * idx) + 128]
                                mem[_27000 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + (2 * ceil32(return_data.size)) + 200] = address(_43642)
                                mem[_27000 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43642), address(cd[4])
                        else:
                            mem[_27000 + 196] = return_data.size
                            mem[_27000 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27000 + ceil32(return_data.size) + 265] = mem[idx + _27000 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27000 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27000 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42047 = mem[(32 * idx) + 128]
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42047)
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42047), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27000 + 228] == bool(mem[_27000 + 228])
                                if not mem[_27000 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27000 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27000 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26490
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26490
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27000 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43648 = mem[(32 * idx) + 128]
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43648)
                                mem[_27000 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43648), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26490 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26490:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26490
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26490:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26490
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    continue 
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26612 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26793 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26793] == mem[_26793 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _26999 = mem[(32 * idx) + 128]
                _27076 = mem[64]
                mem[mem[64] + 36] = mem[_26793 + 12 len 20]
                mem[mem[64] + 68] = address(cd[4])
                mem[mem[64] + 100] = _26612
                _27244 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_27244 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27244 + 36 len 28]
                mem[64] = _27076 + 196
                mem[_27076 + 132] = 32
                mem[_27076 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_26999)):
                    revert with 0, 'Address: call to non-contract'
                _27613 = mem[_27244]
                t = 0
                while t < _27613:
                    mem[t + _27076 + 196] = mem[t + _27244 + 32]
                    t = t + 32
                    continue 
                if ceil32(_27613) <= _27613:
                    call address(_26999).mem[_27076 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27076 + 200 len _27613 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27076 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27076 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27076 + 264] = mem[idx + _27076 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27076 + 264]
                        if not mem[96]:
                            mem[_27076 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + 264] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + 200], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _42026 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + (2 * ceil32(return_data.size)) + 200] = address(_42026)
                            mem[_27076 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42026), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27076 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + 264] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + 200], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _43606 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + (2 * ceil32(return_data.size)) + 200] = address(_43606)
                            mem[_27076 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43606), address(cd[4])
                    else:
                        mem[_27076 + 196] = return_data.size
                        mem[_27076 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27076 + ceil32(return_data.size) + 265] = mem[idx + _27076 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27076 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27076 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _42029 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42029)
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42029), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27076 + 228] == bool(mem[_27076 + 228])
                            if not mem[_27076 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27076 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _43612 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43612)
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43612), address(cd[4])
                else:
                    mem[_27613 + _27076 + 196] = 0
                    call address(_26999).mem[_27076 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27076 + 200 len _27613 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27076 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27076 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27076 + 264] = mem[idx + _27076 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27076 + 264]
                        if not mem[96]:
                            mem[_27076 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + 264] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + 200], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _42032 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + (2 * ceil32(return_data.size)) + 200] = address(_42032)
                            mem[_27076 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42032), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27076 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + 264] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + 200], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _43618 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + (2 * ceil32(return_data.size)) + 200] = address(_43618)
                            mem[_27076 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43618), address(cd[4])
                    else:
                        mem[_27076 + 196] = return_data.size
                        mem[_27076 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27076 + ceil32(return_data.size) + 265] = mem[idx + _27076 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27076 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27076 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _42035 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42035)
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42035), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27076 + 228] == bool(mem[_27076 + 228])
                            if not mem[_27076 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27076 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27076 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26612
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26612
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27076 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ceil32(_27613) >= mem[96]:
                                revert with 0, 50
                            _43624 = mem[(Mask(251, 0, _27613 + 31) * 32) + 128]
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43624)
                            mem[_27076 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43624), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if ceil32(_27613) >= mem[96]:
                    revert with 0, 50
                if ceil32(_27613) >= mem[96]:
                    revert with 0, 50
                if _26612 > totalTokenBalance[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]]:
                    totalTokenBalance[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]] < _26612:
                        revert with 0, 17
                    totalTokenBalance[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]] -= _26612
                if ceil32(_27613) >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20], 5)
                if stor5[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]][address(cd[4])] < _26612:
                    revert with 0, 17
                stor5[mem[(Mask(251, 0, _27613 + 31) * 32) + 140 len 20]][address(cd[4])] -= _26612
                if ceil32(_27613) == -1:
                    revert with 0, 17
                t = ceil32(_27613) + 1
                s = s
                continue 
            mem[0] = address(cd[4])
            mem[32] = sha3(address(mem[(32 * idx) + 128]), 5)
            if stor5[address(mem[(32 * idx) + 128])][address(cd[4])] < userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
                revert with 0, 17
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > stor5[address(mem[(32 * idx) + 128])][address(cd[4])] - userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
                revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
            if idx >= mem[96]:
                revert with 0, 50
            _25906 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25936 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25946 = mem[_25936]
            require mem[_25936] == mem[_25936 + 12 len 20]
            mem[mem[64] + 4] = mem[_25936 + 12 len 20]
            require ext_code.size(address(_25906))
            staticcall address(_25906).0x70a08231 with:
                    gas gas_remaining wei
                   args address(_25946)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25984 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[_25984] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                if idx >= mem[96]:
                    revert with 0, 50
                if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26052 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26107 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26129 = mem[_26107]
                    require mem[_26107] == mem[_26107 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26107 + 12 len 20]
                    require ext_code.size(address(_26052))
                    staticcall address(_26052).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26129)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26200 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26234 = mem[_26200]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26200] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26378] == mem[_26378 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26481 = mem[(32 * idx) + 128]
                        _26503 = mem[64]
                        mem[mem[64] + 36] = mem[_26378 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26234
                        _26560 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26560 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26560 + 36 len 28]
                        mem[64] = _26503 + 196
                        mem[_26503 + 132] = 32
                        mem[_26503 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26481)):
                            revert with 0, 'Address: call to non-contract'
                        _26708 = mem[_26560]
                        t = 0
                        while t < _26708:
                            mem[t + _26503 + 196] = mem[t + _26560 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26708) <= _26708:
                            call address(_26481).mem[_26503 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26503 + 200 len _26708 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26503 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26503 + 264] = mem[idx + _26503 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26503 + 264]
                                if not mem[96]:
                                    mem[_26503 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + 264] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + 200], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41870 = mem[(32 * idx) + 128]
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 200] = address(_41870)
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41870), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26503 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + 264] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + 200], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43294 = mem[(32 * idx) + 128]
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 200] = address(_43294)
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43294), address(cd[4])
                            else:
                                mem[_26503 + 196] = return_data.size
                                mem[_26503 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26503 + ceil32(return_data.size) + 265] = mem[idx + _26503 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26503 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26503 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41873 = mem[(32 * idx) + 128]
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41873)
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41873), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26503 + 228] == bool(mem[_26503 + 228])
                                    if not mem[_26503 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26503 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43300 = mem[(32 * idx) + 128]
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43300)
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43300), address(cd[4])
                        else:
                            mem[_26708 + _26503 + 196] = 0
                            call address(_26481).mem[_26503 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26503 + 200 len _26708 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26503 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26503 + 264] = mem[idx + _26503 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26503 + 264]
                                if not mem[96]:
                                    mem[_26503 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + 264] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + 200], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41876 = mem[(32 * idx) + 128]
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 200] = address(_41876)
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41876), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26503 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + 264] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + 200], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43306 = mem[(32 * idx) + 128]
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 200] = address(_43306)
                                    mem[_26503 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43306), address(cd[4])
                            else:
                                mem[_26503 + 196] = return_data.size
                                mem[_26503 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26503 + ceil32(return_data.size) + 265] = mem[idx + _26503 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26503 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26503 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41879 = mem[(32 * idx) + 128]
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41879)
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41879), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26503 + 228] == bool(mem[_26503 + 228])
                                    if not mem[_26503 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26503 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26503 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26234
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26234
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26503 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43312 = mem[(32 * idx) + 128]
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43312)
                                    mem[_26503 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43312), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26234 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26234:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26234
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26234:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26234
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26308 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26390] == mem[_26390 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26502 = mem[(32 * idx) + 128]
                        _26530 = mem[64]
                        mem[mem[64] + 36] = mem[_26390 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26308
                        _26598 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26598 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26598 + 36 len 28]
                        mem[64] = _26530 + 196
                        mem[_26530 + 132] = 32
                        mem[_26530 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26502)):
                            revert with 0, 'Address: call to non-contract'
                        _26736 = mem[_26598]
                        t = 0
                        while t < _26736:
                            mem[t + _26530 + 196] = mem[t + _26598 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26736) <= _26736:
                            call address(_26502).mem[_26530 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26530 + 200 len _26736 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26530 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26530 + 264] = mem[idx + _26530 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26530 + 264]
                                if not mem[96]:
                                    mem[_26530 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + 264] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + 200], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41858 = mem[(32 * idx) + 128]
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 200] = address(_41858)
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41858), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26530 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + 264] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + 200], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43270 = mem[(32 * idx) + 128]
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 200] = address(_43270)
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43270), address(cd[4])
                            else:
                                mem[_26530 + 196] = return_data.size
                                mem[_26530 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26530 + ceil32(return_data.size) + 265] = mem[idx + _26530 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26530 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26530 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41861 = mem[(32 * idx) + 128]
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41861)
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41861), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26530 + 228] == bool(mem[_26530 + 228])
                                    if not mem[_26530 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26530 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43276 = mem[(32 * idx) + 128]
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43276)
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43276), address(cd[4])
                        else:
                            mem[_26736 + _26530 + 196] = 0
                            call address(_26502).mem[_26530 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26530 + 200 len _26736 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26530 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26530 + 264] = mem[idx + _26530 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26530 + 264]
                                if not mem[96]:
                                    mem[_26530 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + 264] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + 200], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41864 = mem[(32 * idx) + 128]
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 200] = address(_41864)
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41864), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26530 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + 264] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + 200], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43282 = mem[(32 * idx) + 128]
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 200] = address(_43282)
                                    mem[_26530 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43282), address(cd[4])
                            else:
                                mem[_26530 + 196] = return_data.size
                                mem[_26530 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26530 + ceil32(return_data.size) + 265] = mem[idx + _26530 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26530 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26530 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41867 = mem[(32 * idx) + 128]
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41867)
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41867), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26530 + 228] == bool(mem[_26530 + 228])
                                    if not mem[_26530 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26530 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26530 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26308
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26308
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26530 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43288 = mem[(32 * idx) + 128]
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43288)
                                    mem[_26530 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43288), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26308 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26308:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26308
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26308:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26308
                else:
                    if cd[68]:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26067 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26082 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26139 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26158 = mem[_26139]
                        require mem[_26139] == mem[_26139 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        mem[mem[64] + 36] = address(cd[4])
                        mem[mem[64] + 68] = _26082
                        require ext_code.size(address(_26158))
                        call address(_26158).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(cd[4]), _26082
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26353 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26380 = mem[_26353]
                        require mem[_26353] == mem[_26353 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26442 = mem[(32 * idx) + 128]
                        mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = address(_26442)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(address(_26380))
                        call address(_26380).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_26442), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26082 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26082:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26082
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26082:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26082
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = _26067
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26065 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26114 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26138 = mem[_26114]
                    require mem[_26114] == mem[_26114 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26114 + 12 len 20]
                    require ext_code.size(address(_26065))
                    staticcall address(_26065).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26138)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26218 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26255 = mem[_26218]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26218] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26391 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26391] == mem[_26391 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26505 = mem[(32 * idx) + 128]
                        _26532 = mem[64]
                        mem[mem[64] + 36] = mem[_26391 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26255
                        _26601 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26601 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26601 + 36 len 28]
                        mem[64] = _26532 + 196
                        mem[_26532 + 132] = 32
                        mem[_26532 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26505)):
                            revert with 0, 'Address: call to non-contract'
                        _26740 = mem[_26601]
                        t = 0
                        while t < _26740:
                            mem[t + _26532 + 196] = mem[t + _26601 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26740) <= _26740:
                            call address(_26505).mem[_26532 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26532 + 200 len _26740 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26532 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26532 + 264] = mem[idx + _26532 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26532 + 264]
                                if not mem[96]:
                                    mem[_26532 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + 264] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + 200], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41894 = mem[(32 * idx) + 128]
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 200] = address(_41894)
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41894), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26532 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + 264] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + 200], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43342 = mem[(32 * idx) + 128]
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 200] = address(_43342)
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43342), address(cd[4])
                            else:
                                mem[_26532 + 196] = return_data.size
                                mem[_26532 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26532 + ceil32(return_data.size) + 265] = mem[idx + _26532 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26532 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26532 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41897 = mem[(32 * idx) + 128]
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41897)
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41897), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26532 + 228] == bool(mem[_26532 + 228])
                                    if not mem[_26532 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26532 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43348 = mem[(32 * idx) + 128]
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43348)
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43348), address(cd[4])
                        else:
                            mem[_26740 + _26532 + 196] = 0
                            call address(_26505).mem[_26532 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26532 + 200 len _26740 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26532 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26532 + 264] = mem[idx + _26532 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26532 + 264]
                                if not mem[96]:
                                    mem[_26532 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + 264] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + 200], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41900 = mem[(32 * idx) + 128]
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 200] = address(_41900)
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41900), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26532 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + 264] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + 200], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43354 = mem[(32 * idx) + 128]
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 200] = address(_43354)
                                    mem[_26532 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43354), address(cd[4])
                            else:
                                mem[_26532 + 196] = return_data.size
                                mem[_26532 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26532 + ceil32(return_data.size) + 265] = mem[idx + _26532 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26532 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26532 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41903 = mem[(32 * idx) + 128]
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41903)
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41903), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26532 + 228] == bool(mem[_26532 + 228])
                                    if not mem[_26532 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26532 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26532 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26255
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26255
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26532 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43360 = mem[(32 * idx) + 128]
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43360)
                                    mem[_26532 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43360), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26255 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26255:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26255
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26255:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26255
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26323 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26403 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26403] == mem[_26403 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26531 = mem[(32 * idx) + 128]
                        _26562 = mem[64]
                        mem[mem[64] + 36] = mem[_26403 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26323
                        _26633 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26633 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26633 + 36 len 28]
                        mem[64] = _26562 + 196
                        mem[_26562 + 132] = 32
                        mem[_26562 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26531)):
                            revert with 0, 'Address: call to non-contract'
                        _26766 = mem[_26633]
                        t = 0
                        while t < _26766:
                            mem[t + _26562 + 196] = mem[t + _26633 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26766) <= _26766:
                            call address(_26531).mem[_26562 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26562 + 200 len _26766 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26562 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26562 + 264] = mem[idx + _26562 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26562 + 264]
                                if not mem[96]:
                                    mem[_26562 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + 264] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + 200], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41882 = mem[(32 * idx) + 128]
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 200] = address(_41882)
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41882), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26562 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + 264] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + 200], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43318 = mem[(32 * idx) + 128]
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 200] = address(_43318)
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43318), address(cd[4])
                            else:
                                mem[_26562 + 196] = return_data.size
                                mem[_26562 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26562 + ceil32(return_data.size) + 265] = mem[idx + _26562 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26562 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26562 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41885 = mem[(32 * idx) + 128]
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41885)
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41885), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26562 + 228] == bool(mem[_26562 + 228])
                                    if not mem[_26562 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26562 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43324 = mem[(32 * idx) + 128]
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43324)
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43324), address(cd[4])
                        else:
                            mem[_26766 + _26562 + 196] = 0
                            call address(_26531).mem[_26562 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26562 + 200 len _26766 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26562 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26562 + 264] = mem[idx + _26562 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26562 + 264]
                                if not mem[96]:
                                    mem[_26562 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + 264] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + 200], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41888 = mem[(32 * idx) + 128]
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 200] = address(_41888)
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41888), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26562 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + 264] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + 200], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43330 = mem[(32 * idx) + 128]
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 200] = address(_43330)
                                    mem[_26562 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43330), address(cd[4])
                            else:
                                mem[_26562 + 196] = return_data.size
                                mem[_26562 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26562 + ceil32(return_data.size) + 265] = mem[idx + _26562 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26562 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26562 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41891 = mem[(32 * idx) + 128]
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41891)
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41891), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26562 + 228] == bool(mem[_26562 + 228])
                                    if not mem[_26562 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26562 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26562 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26323
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26323
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26562 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43336 = mem[(32 * idx) + 128]
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43336)
                                    mem[_26562 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43336), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26323 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26323:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26323
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26323:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26323
            else:
                mem[mem[64] + 4] = 8
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 8
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26069 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26091 = mem[_26069]
                require mem[_26069] == mem[_26069 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _26140 = mem[(32 * idx) + 128]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26152 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = address(_26140)
                mem[mem[64] + 36] = _26152
                require ext_code.size(address(_26091))
                call address(_26091).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_26140), _26152
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26236 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26326 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26354 = mem[_26326]
                    require mem[_26326] == mem[_26326 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26326 + 12 len 20]
                    require ext_code.size(address(_26236))
                    staticcall address(_26236).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26354)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26461 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26506 = mem[_26461]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26461] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26788] == mem[_26788 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26971 = mem[(32 * idx) + 128]
                        _27055 = mem[64]
                        mem[mem[64] + 36] = mem[_26788 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26506
                        _27222 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_27222 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27222 + 36 len 28]
                        mem[64] = _27055 + 196
                        mem[_27055 + 132] = 32
                        mem[_27055 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26971)):
                            revert with 0, 'Address: call to non-contract'
                        _27578 = mem[_27222]
                        t = 0
                        while t < _27578:
                            mem[t + _27055 + 196] = mem[t + _27222 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_27578) <= _27578:
                            call address(_26971).mem[_27055 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27055 + 200 len _27578 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27055 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27055 + 264] = mem[idx + _27055 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27055 + 264]
                                if not mem[96]:
                                    mem[_27055 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + 264] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + 200], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _41918 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 200] = address(_41918)
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41918), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27055 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + 264] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + 200], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _43390 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 200] = address(_43390)
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43390), address(cd[4])
                            else:
                                mem[_27055 + 196] = return_data.size
                                mem[_27055 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27055 + ceil32(return_data.size) + 265] = mem[idx + _27055 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27055 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27055 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _41921 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41921)
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41921), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27055 + 228] == bool(mem[_27055 + 228])
                                    if not mem[_27055 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27055 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _43396 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43396)
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43396), address(cd[4])
                        else:
                            mem[_27578 + _27055 + 196] = 0
                            call address(_26971).mem[_27055 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27055 + 200 len _27578 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27055 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27055 + 264] = mem[idx + _27055 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27055 + 264]
                                if not mem[96]:
                                    mem[_27055 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + 264] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + 200], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _41924 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 200] = address(_41924)
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41924), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27055 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + 264] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + 200], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _43402 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 200] = address(_43402)
                                    mem[_27055 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43402), address(cd[4])
                            else:
                                mem[_27055 + 196] = return_data.size
                                mem[_27055 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27055 + ceil32(return_data.size) + 265] = mem[idx + _27055 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27055 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27055 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _41927 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41927)
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41927), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27055 + 228] == bool(mem[_27055 + 228])
                                    if not mem[_27055 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27055 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27055 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26506
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26506
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27055 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ceil32(_27578) >= mem[96]:
                                        revert with 0, 50
                                    _43408 = mem[(Mask(251, 0, _27578 + 31) * 32) + 128]
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43408)
                                    mem[_27055 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43408), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if ceil32(_27578) >= mem[96]:
                            revert with 0, 50
                        if ceil32(_27578) >= mem[96]:
                            revert with 0, 50
                        if _26506 > totalTokenBalance[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]]:
                            totalTokenBalance[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]] < _26506:
                                revert with 0, 17
                            totalTokenBalance[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]] -= _26506
                        if ceil32(_27578) >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20], 5)
                        if stor5[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]][address(cd[4])] < _26506:
                            revert with 0, 17
                        stor5[mem[(Mask(251, 0, _27578 + 31) * 32) + 140 len 20]][address(cd[4])] -= _26506
                        if ceil32(_27578) == -1:
                            revert with 0, 17
                        t = ceil32(_27578) + 1
                        s = s
                        continue 
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26640 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26806 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26806] == mem[_26806 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _27054 = mem[(32 * idx) + 128]
                    _27144 = mem[64]
                    mem[mem[64] + 36] = mem[_26806 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26640
                    _27304 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27304 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27304 + 36 len 28]
                    mem[64] = _27144 + 196
                    mem[_27144 + 132] = 32
                    mem[_27144 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_27054)):
                        revert with 0, 'Address: call to non-contract'
                    _27688 = mem[_27304]
                    t = 0
                    while t < _27688:
                        mem[t + _27144 + 196] = mem[t + _27304 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27688) <= _27688:
                        call address(_27054).mem[_27144 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27144 + 200 len _27688 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27144 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27144 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27144 + 264] = mem[idx + _27144 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27144 + 264]
                            if not mem[96]:
                                mem[_27144 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + 264] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + 200], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _41906 = mem[(32 * idx) + 128]
                                mem[_27144 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + (2 * ceil32(return_data.size)) + 200] = address(_41906)
                                mem[_27144 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_41906), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27144 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + 264] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + 200], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43366 = mem[(32 * idx) + 128]
                                mem[_27144 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + (2 * ceil32(return_data.size)) + 200] = address(_43366)
                                mem[_27144 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43366), address(cd[4])
                        else:
                            mem[_27144 + 196] = return_data.size
                            mem[_27144 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27144 + ceil32(return_data.size) + 265] = mem[idx + _27144 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27144 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27144 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _41909 = mem[(32 * idx) + 128]
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41909)
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_41909), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27144 + 228] == bool(mem[_27144 + 228])
                                if not mem[_27144 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27144 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43372 = mem[(32 * idx) + 128]
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43372)
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43372), address(cd[4])
                    else:
                        mem[_27688 + _27144 + 196] = 0
                        call address(_27054).mem[_27144 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27144 + 200 len _27688 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27144 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27144 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27144 + 264] = mem[idx + _27144 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27144 + 264]
                            if not mem[96]:
                                mem[_27144 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + 264] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + 200], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _41912 = mem[(32 * idx) + 128]
                                mem[_27144 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + (2 * ceil32(return_data.size)) + 200] = address(_41912)
                                mem[_27144 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_41912), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27144 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + 264] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + 200], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43378 = mem[(32 * idx) + 128]
                                mem[_27144 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + (2 * ceil32(return_data.size)) + 200] = address(_43378)
                                mem[_27144 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43378), address(cd[4])
                        else:
                            mem[_27144 + 196] = return_data.size
                            mem[_27144 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27144 + ceil32(return_data.size) + 265] = mem[idx + _27144 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27144 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27144 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _41915 = mem[(32 * idx) + 128]
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41915)
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_41915), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27144 + 228] == bool(mem[_27144 + 228])
                                if not mem[_27144 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27144 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27144 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26640
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26640
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27144 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43384 = mem[(32 * idx) + 128]
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43384)
                                mem[_27144 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43384), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26640 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26640:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26640
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26640:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26640
                else:
                    if cd[68]:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26258 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26277 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26367 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26392 = mem[_26367]
                        require mem[_26367] == mem[_26367 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        mem[mem[64] + 36] = address(cd[4])
                        mem[mem[64] + 68] = _26277
                        require ext_code.size(address(_26392))
                        call address(_26392).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(cd[4]), _26277
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26743 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26790 = mem[_26743]
                        require mem[_26743] == mem[_26743 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26894 = mem[(32 * idx) + 128]
                        mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = address(_26894)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(address(_26790))
                        call address(_26790).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_26894), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26277 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26277:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26277
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26277:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26277
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = _26258
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26256 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26339 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26366 = mem[_26339]
                    require mem[_26339] == mem[_26339 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26339 + 12 len 20]
                    require ext_code.size(address(_26256))
                    staticcall address(_26256).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26366)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26484 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26535 = mem[_26484]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26484] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26807 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26807] == mem[_26807 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _27057 = mem[(32 * idx) + 128]
                        _27146 = mem[64]
                        mem[mem[64] + 36] = mem[_26807 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26535
                        _27307 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_27307 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27307 + 36 len 28]
                        mem[64] = _27146 + 196
                        mem[_27146 + 132] = 32
                        mem[_27146 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_27057)):
                            revert with 0, 'Address: call to non-contract'
                        _27692 = mem[_27307]
                        t = 0
                        while t < _27692:
                            mem[t + _27146 + 196] = mem[t + _27307 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_27692) <= _27692:
                            call address(_27057).mem[_27146 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27146 + 200 len _27692 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27146 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27146 + 264] = mem[idx + _27146 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27146 + 264]
                                if not mem[96]:
                                    mem[_27146 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + 264] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + 200], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41942 = mem[(32 * idx) + 128]
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 200] = address(_41942)
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41942), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27146 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + 264] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + 200], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43438 = mem[(32 * idx) + 128]
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 200] = address(_43438)
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43438), address(cd[4])
                            else:
                                mem[_27146 + 196] = return_data.size
                                mem[_27146 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27146 + ceil32(return_data.size) + 265] = mem[idx + _27146 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27146 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27146 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41945 = mem[(32 * idx) + 128]
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41945)
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41945), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27146 + 228] == bool(mem[_27146 + 228])
                                    if not mem[_27146 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27146 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43444 = mem[(32 * idx) + 128]
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43444)
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43444), address(cd[4])
                        else:
                            mem[_27692 + _27146 + 196] = 0
                            call address(_27057).mem[_27146 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27146 + 200 len _27692 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27146 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27146 + 264] = mem[idx + _27146 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27146 + 264]
                                if not mem[96]:
                                    mem[_27146 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + 264] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + 200], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41948 = mem[(32 * idx) + 128]
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 200] = address(_41948)
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41948), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27146 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + 264] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + 200], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43450 = mem[(32 * idx) + 128]
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 200] = address(_43450)
                                    mem[_27146 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43450), address(cd[4])
                            else:
                                mem[_27146 + 196] = return_data.size
                                mem[_27146 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27146 + ceil32(return_data.size) + 265] = mem[idx + _27146 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27146 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27146 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41951 = mem[(32 * idx) + 128]
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41951)
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41951), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27146 + 228] == bool(mem[_27146 + 228])
                                    if not mem[_27146 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27146 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27146 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26535
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26535
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27146 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43456 = mem[(32 * idx) + 128]
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43456)
                                    mem[_27146 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43456), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26535 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26535:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26535
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26535:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26535
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26679 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26822 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26822] == mem[_26822 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _27145 = mem[(32 * idx) + 128]
                        _27224 = mem[64]
                        mem[mem[64] + 36] = mem[_26822 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26679
                        _27391 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_27391 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27391 + 36 len 28]
                        mem[64] = _27224 + 196
                        mem[_27224 + 132] = 32
                        mem[_27224 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_27145)):
                            revert with 0, 'Address: call to non-contract'
                        _27780 = mem[_27391]
                        t = 0
                        while t < _27780:
                            mem[t + _27224 + 196] = mem[t + _27391 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_27780) <= _27780:
                            call address(_27145).mem[_27224 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27224 + 200 len _27780 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27224 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27224 + 264] = mem[idx + _27224 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27224 + 264]
                                if not mem[96]:
                                    mem[_27224 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + 264] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + 200], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41930 = mem[(32 * idx) + 128]
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 200] = address(_41930)
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41930), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27224 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + 264] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + 200], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43414 = mem[(32 * idx) + 128]
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 200] = address(_43414)
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43414), address(cd[4])
                            else:
                                mem[_27224 + 196] = return_data.size
                                mem[_27224 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27224 + ceil32(return_data.size) + 265] = mem[idx + _27224 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27224 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27224 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41933 = mem[(32 * idx) + 128]
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41933)
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41933), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27224 + 228] == bool(mem[_27224 + 228])
                                    if not mem[_27224 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27224 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43420 = mem[(32 * idx) + 128]
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43420)
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43420), address(cd[4])
                        else:
                            mem[_27780 + _27224 + 196] = 0
                            call address(_27145).mem[_27224 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_27224 + 200 len _27780 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_27224 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27224 + 264] = mem[idx + _27224 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27224 + 264]
                                if not mem[96]:
                                    mem[_27224 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + 264] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + 200], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41936 = mem[(32 * idx) + 128]
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 200] = address(_41936)
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41936), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27224 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + 264] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + 200], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43426 = mem[(32 * idx) + 128]
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 200] = address(_43426)
                                    mem[_27224 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43426), address(cd[4])
                            else:
                                mem[_27224 + 196] = return_data.size
                                mem[_27224 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _27224 + ceil32(return_data.size) + 265] = mem[idx + _27224 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_27224 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_27224 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _41939 = mem[(32 * idx) + 128]
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_41939)
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_41939), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_27224 + 228] == bool(mem[_27224 + 228])
                                    if not mem[_27224 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_27224 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_27224 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26679
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26679
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_27224 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43432 = mem[(32 * idx) + 128]
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43432)
                                    mem[_27224 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43432), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26679 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26679:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26679
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26679:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26679
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[mem[64] + 4] = 5
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 5
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25820 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25826 = mem[_25820]
        require mem[_25820] == mem[_25820 + 12 len 20]
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(_25826))
        staticcall address(_25826).getUserEthRewards(address arg1) with:
                gas gas_remaining wei
               args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25848 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_25848] <= 0:
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
                 gas gas_remaining wei
                args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25904 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25920 = mem[_25904]
            mem[mem[64]] = 128
            _25944 = mem[ceil32(32 * ('cd', 36).length) + 97]
            mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
            mem[mem[64] + 160 len 32 * _25944] = mem[ceil32(32 * ('cd', 36).length) + 129 len 32 * _25944]
            mem[mem[64] + 64] = 0
            mem[mem[64] + 96] = _25920
            return 128, s, 0, _25920, mem[mem[64] + 128 len (32 * _25944) + 32]
        mem[mem[64] + 4] = 5
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 5
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25921 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25933 = mem[_25921]
        require mem[_25921] == mem[_25921 + 12 len 20]
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(_25933))
        call address(_25933).0xc115b22c with:
             gas gas_remaining wei
            args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25972 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25982 = mem[_25972]
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
             gas gas_remaining wei
            args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _26018 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _26036 = mem[_26018]
        mem[mem[64]] = 128
        _26088 = mem[ceil32(32 * ('cd', 36).length) + 97]
        mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
        mem[mem[64] + 160 len 32 * _26088] = mem[ceil32(32 * ('cd', 36).length) + 129 len 32 * _26088]
        mem[mem[64] + 64] = _25982
        mem[mem[64] + 96] = _26036
        return 128, s, _25982, _26036, mem[mem[64] + 128 len (32 * _26088) + 32]
    mem[ceil32(32 * ('cd', 36).length) + 129 len 32 * ('cd', 36).length] = call.data[calldata.size len 32 * ('cd', 36).length]
    mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + 133] = 4
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 4
    mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + 129] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    idx = 0
    while idx < ('cd', 36).length:
        if idx >= ('cd', 36).length:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = sha3(address(cd[4]), 6)
        if userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])] >= stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])]:
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] = 0
        else:
            mem[0] = address(cd[4])
            mem[32] = sha3(address(mem[(32 * idx) + 128]), 5)
            if stor5[address(mem[(32 * idx) + 128])][address(cd[4])] < userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
                revert with 0, 17
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] = stor5[address(mem[(32 * idx) + 128])][address(cd[4])] - userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + ceil32(return_data.size) + 133] = 3
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 3
    mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + ceil32(return_data.size) + 129] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(ext_call.return_data[12 len 20])
    staticcall ext_call.return_data[12 len 20].getWethTokenAddress() with:
            gas gas_remaining wei
    mem[ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + (2 * ceil32(return_data.size)) + 129] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(32 * ('cd', 36).length) + (32 * ('cd', 36).length) + (4 * ceil32(return_data.size)) + 129
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ('cd', 36).length != mem[ceil32(32 * ('cd', 36).length) + 97]:
        revert with 0, 'UserPositions::_withdraw: Tokens array length does not match amounts array length'
    idx = 0
    s = 0
    while idx < ('cd', 36).length:
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if 0 == mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
            mem[mem[64] + 4] = 5
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 5
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25831 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25833 = mem[_25831]
            require mem[_25831] == mem[_25831 + 12 len 20]
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_25833))
            staticcall address(_25833).getUserEthRewards(address arg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25873 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_25873] <= 0:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(ext_call.return_data[0]))
                call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
                     gas gas_remaining wei
                    args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25930 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25942 = mem[_25930]
                _25950 = mem[64]
                mem[mem[64]] = 128
                _25959 = mem[ceil32(32 * ('cd', 36).length) + 97]
                mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
                idx = 0
                t = ceil32(32 * ('cd', 36).length) + 129
                u = mem[64] + 160
                while idx < _25959:
                    mem[u] = mem[t]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_25950 + 32] = s
                mem[_25950 + 64] = 0
                mem[_25950 + 96] = _25942
                return memory
                  from mem[64]
                   len _25950 + (32 * _25959) + -mem[64] + 160
            mem[mem[64] + 4] = 5
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 5
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25943 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25951 = mem[_25943]
            require mem[_25943] == mem[_25943 + 12 len 20]
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_25951))
            call address(_25951).0xc115b22c with:
                 gas gas_remaining wei
                args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25989 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25999 = mem[_25989]
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
                 gas gas_remaining wei
                args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26063 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26087 = mem[_26063]
            _26105 = mem[64]
            mem[mem[64]] = 128
            _26127 = mem[ceil32(32 * ('cd', 36).length) + 97]
            mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
            idx = 0
            t = ceil32(32 * ('cd', 36).length) + 129
            u = mem[64] + 160
            while idx < _26127:
                mem[u] = mem[t]
                idx = idx + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_26105 + 32] = s
            mem[_26105 + 64] = _25999
            mem[_26105 + 96] = _26087
            return memory
              from mem[64]
               len _26105 + (32 * _26127) + -mem[64] + 160
        if idx >= mem[96]:
            revert with 0, 50
        _25812 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).getTokenAcceptingWithdrawals(address arg1) with:
                gas gas_remaining wei
               args address(_25812)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25824 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_25824] == bool(mem[_25824])
        if not mem[_25824]:
            revert with 0, 'UserPositions::_withdraw: This token is not accepting withdrawals'
        if idx >= mem[96]:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = sha3(address(cd[4]), 6)
        if userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])] >= stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])]:
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > 0:
                revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
            if idx >= mem[96]:
                revert with 0, 50
            _25895 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25929 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25941 = mem[_25929]
            require mem[_25929] == mem[_25929 + 12 len 20]
            mem[mem[64] + 4] = mem[_25929 + 12 len 20]
            require ext_code.size(address(_25895))
            staticcall address(_25895).0x70a08231 with:
                    gas gas_remaining wei
                   args address(_25941)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25979 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[_25979] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                if idx >= mem[96]:
                    revert with 0, 50
                if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26031 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26097 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26112 = mem[_26097]
                    require mem[_26097] == mem[_26097 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26097 + 12 len 20]
                    require ext_code.size(address(_26031))
                    staticcall address(_26031).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26112)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26212 = mem[_26187]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26187] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26361 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26361] == mem[_26361 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26456 = mem[(32 * idx) + 128]
                        _26475 = mem[64]
                        mem[mem[64] + 36] = mem[_26361 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26212
                        _26522 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26522 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26522 + 36 len 28]
                        mem[64] = _26475 + 196
                        mem[_26475 + 132] = 32
                        mem[_26475 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26456)):
                            revert with 0, 'Address: call to non-contract'
                        _26666 = mem[_26522]
                        t = 0
                        while t < _26666:
                            mem[t + _26475 + 196] = mem[t + _26522 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26666) <= _26666:
                            call address(_26456).mem[_26475 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26475 + 200 len _26666 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26475 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26475 + 264] = mem[idx + _26475 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26475 + 264]
                                if not mem[96]:
                                    mem[_26475 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + 264] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + 200], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42158 = mem[(32 * idx) + 128]
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 200] = address(_42158)
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42158), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26475 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + 264] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + 200], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43870 = mem[(32 * idx) + 128]
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 200] = address(_43870)
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43870), address(cd[4])
                            else:
                                mem[_26475 + 196] = return_data.size
                                mem[_26475 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26475 + ceil32(return_data.size) + 265] = mem[idx + _26475 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26475 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26475 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42161 = mem[(32 * idx) + 128]
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42161)
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42161), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26475 + 228] == bool(mem[_26475 + 228])
                                    if not mem[_26475 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26475 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43876 = mem[(32 * idx) + 128]
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43876)
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43876), address(cd[4])
                        else:
                            mem[_26666 + _26475 + 196] = 0
                            call address(_26456).mem[_26475 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26475 + 200 len _26666 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26475 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26475 + 264] = mem[idx + _26475 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26475 + 264]
                                if not mem[96]:
                                    mem[_26475 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + 264] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + 200], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42164 = mem[(32 * idx) + 128]
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 200] = address(_42164)
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42164), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26475 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + 264] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + 200], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43882 = mem[(32 * idx) + 128]
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 200] = address(_43882)
                                    mem[_26475 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43882), address(cd[4])
                            else:
                                mem[_26475 + 196] = return_data.size
                                mem[_26475 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26475 + ceil32(return_data.size) + 265] = mem[idx + _26475 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26475 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26475 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42167 = mem[(32 * idx) + 128]
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42167)
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42167), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26475 + 228] == bool(mem[_26475 + 228])
                                    if not mem[_26475 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26475 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26475 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26212
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26212
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26475 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43888 = mem[(32 * idx) + 128]
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43888)
                                    mem[_26475 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43888), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26212 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26212:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26212
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26212:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26212
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26286 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26375 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26375] == mem[_26375 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26474 = mem[(32 * idx) + 128]
                        _26496 = mem[64]
                        mem[mem[64] + 36] = mem[_26375 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26286
                        _26551 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26551 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26551 + 36 len 28]
                        mem[64] = _26496 + 196
                        mem[_26496 + 132] = 32
                        mem[_26496 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26474)):
                            revert with 0, 'Address: call to non-contract'
                        _26698 = mem[_26551]
                        t = 0
                        while t < _26698:
                            mem[t + _26496 + 196] = mem[t + _26551 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26698) <= _26698:
                            call address(_26474).mem[_26496 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26496 + 200 len _26698 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26496 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26496 + 264] = mem[idx + _26496 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26496 + 264]
                                if not mem[96]:
                                    mem[_26496 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + 264] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + 200], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42146 = mem[(32 * idx) + 128]
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 200] = address(_42146)
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42146), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26496 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + 264] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + 200], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43846 = mem[(32 * idx) + 128]
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 200] = address(_43846)
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43846), address(cd[4])
                            else:
                                mem[_26496 + 196] = return_data.size
                                mem[_26496 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26496 + ceil32(return_data.size) + 265] = mem[idx + _26496 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26496 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26496 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42149 = mem[(32 * idx) + 128]
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42149)
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42149), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26496 + 228] == bool(mem[_26496 + 228])
                                    if not mem[_26496 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26496 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43852 = mem[(32 * idx) + 128]
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43852)
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43852), address(cd[4])
                        else:
                            mem[_26698 + _26496 + 196] = 0
                            call address(_26474).mem[_26496 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26496 + 200 len _26698 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26496 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26496 + 264] = mem[idx + _26496 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26496 + 264]
                                if not mem[96]:
                                    mem[_26496 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + 264] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + 200], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42152 = mem[(32 * idx) + 128]
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 200] = address(_42152)
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42152), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26496 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + 264] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + 200], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43858 = mem[(32 * idx) + 128]
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 200] = address(_43858)
                                    mem[_26496 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43858), address(cd[4])
                            else:
                                mem[_26496 + 196] = return_data.size
                                mem[_26496 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26496 + ceil32(return_data.size) + 265] = mem[idx + _26496 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26496 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26496 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42155 = mem[(32 * idx) + 128]
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42155)
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42155), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26496 + 228] == bool(mem[_26496 + 228])
                                    if not mem[_26496 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26496 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26496 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26286
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26286
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26496 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43864 = mem[(32 * idx) + 128]
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43864)
                                    mem[_26496 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43864), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26286 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26286:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26286
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26286:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26286
                else:
                    if cd[68]:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26049 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26062 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26124 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26149 = mem[_26124]
                        require mem[_26124] == mem[_26124 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        mem[mem[64] + 36] = address(cd[4])
                        mem[mem[64] + 68] = _26062
                        require ext_code.size(address(_26149))
                        call address(_26149).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4], address(cd[4]), _26062
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64] + 4] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26363 = mem[_26336]
                        require mem[_26336] == mem[_26336 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26424 = mem[(32 * idx) + 128]
                        mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = address(_26424)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(address(_26363))
                        call address(_26363).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_26424), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26062 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26062:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26062
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26062:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26062
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = _26049
                        continue 
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26047 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26103 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26123 = mem[_26103]
                    require mem[_26103] == mem[_26103 + 12 len 20]
                    mem[mem[64] + 4] = mem[_26103 + 12 len 20]
                    require ext_code.size(address(_26047))
                    staticcall address(_26047).0x70a08231 with:
                            gas gas_remaining wei
                           args address(_26123)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26198 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26229 = mem[_26198]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    if mem[_26198] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26376 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26376] == mem[_26376 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26477 = mem[(32 * idx) + 128]
                        _26498 = mem[64]
                        mem[mem[64] + 36] = mem[_26376 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26229
                        _26554 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26554 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26554 + 36 len 28]
                        mem[64] = _26498 + 196
                        mem[_26498 + 132] = 32
                        mem[_26498 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26477)):
                            revert with 0, 'Address: call to non-contract'
                        _26702 = mem[_26554]
                        t = 0
                        while t < _26702:
                            mem[t + _26498 + 196] = mem[t + _26554 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26702) <= _26702:
                            call address(_26477).mem[_26498 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26498 + 200 len _26702 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26498 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26498 + 264] = mem[idx + _26498 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26498 + 264]
                                if not mem[96]:
                                    mem[_26498 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + 264] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + 200], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42182 = mem[(32 * idx) + 128]
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 200] = address(_42182)
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42182), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26498 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + 264] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + 200], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43918 = mem[(32 * idx) + 128]
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 200] = address(_43918)
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43918), address(cd[4])
                            else:
                                mem[_26498 + 196] = return_data.size
                                mem[_26498 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26498 + ceil32(return_data.size) + 265] = mem[idx + _26498 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26498 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26498 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42185 = mem[(32 * idx) + 128]
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42185)
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42185), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26498 + 228] == bool(mem[_26498 + 228])
                                    if not mem[_26498 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26498 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43924 = mem[(32 * idx) + 128]
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43924)
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43924), address(cd[4])
                        else:
                            mem[_26702 + _26498 + 196] = 0
                            call address(_26477).mem[_26498 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26498 + 200 len _26702 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26498 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26498 + 264] = mem[idx + _26498 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26498 + 264]
                                if not mem[96]:
                                    mem[_26498 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + 264] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + 200], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42188 = mem[(32 * idx) + 128]
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 200] = address(_42188)
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42188), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26498 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + 264] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + 200], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43930 = mem[(32 * idx) + 128]
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 200] = address(_43930)
                                    mem[_26498 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43930), address(cd[4])
                            else:
                                mem[_26498 + 196] = return_data.size
                                mem[_26498 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26498 + ceil32(return_data.size) + 265] = mem[idx + _26498 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26498 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26498 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42191 = mem[(32 * idx) + 128]
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42191)
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42191), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26498 + 228] == bool(mem[_26498 + 228])
                                    if not mem[_26498 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26498 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26498 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26229
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26229
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26498 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43936 = mem[(32 * idx) + 128]
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43936)
                                    mem[_26498 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43936), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26229 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26229:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26229
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26229:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26229
                    else:
                        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                            revert with 0, 50
                        _26304 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                        mem[mem[64] + 4] = 0
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26388] == mem[_26388 + 12 len 20]
                        if idx >= mem[96]:
                            revert with 0, 50
                        _26497 = mem[(32 * idx) + 128]
                        _26524 = mem[64]
                        mem[mem[64] + 36] = mem[_26388 + 12 len 20]
                        mem[mem[64] + 68] = address(cd[4])
                        mem[mem[64] + 100] = _26304
                        _26588 = mem[64]
                        mem[mem[64]] = 100
                        mem[64] = mem[64] + 132
                        mem[_26588 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26588 + 36 len 28]
                        mem[64] = _26524 + 196
                        mem[_26524 + 132] = 32
                        mem[_26524 + 164] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(_26497)):
                            revert with 0, 'Address: call to non-contract'
                        _26731 = mem[_26588]
                        t = 0
                        while t < _26731:
                            mem[t + _26524 + 196] = mem[t + _26588 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_26731) <= _26731:
                            call address(_26497).mem[_26524 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26524 + 200 len _26731 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26524 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26524 + 264] = mem[idx + _26524 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26524 + 264]
                                if not mem[96]:
                                    mem[_26524 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + 264] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + 200], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42170 = mem[(32 * idx) + 128]
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 200] = address(_42170)
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42170), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26524 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + 264] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + 200], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43894 = mem[(32 * idx) + 128]
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 200] = address(_43894)
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43894), address(cd[4])
                            else:
                                mem[_26524 + 196] = return_data.size
                                mem[_26524 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26524 + ceil32(return_data.size) + 265] = mem[idx + _26524 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26524 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26524 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42173 = mem[(32 * idx) + 128]
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42173)
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42173), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26524 + 228] == bool(mem[_26524 + 228])
                                    if not mem[_26524 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26524 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43900 = mem[(32 * idx) + 128]
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43900)
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43900), address(cd[4])
                        else:
                            mem[_26731 + _26524 + 196] = 0
                            call address(_26497).mem[_26524 + 196 len 4] with:
                                 gas gas_remaining wei
                                args mem[_26524 + 200 len _26731 - 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_26524 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26524 + 264] = mem[idx + _26524 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26524 + 264]
                                if not mem[96]:
                                    mem[_26524 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + 264] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + 200], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42176 = mem[(32 * idx) + 128]
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 200] = address(_42176)
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42176), address(cd[4])
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26524 + 200] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + 232] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + 264] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + 200], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 200] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + (2 * ceil32(return_data.size)) + 196
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43906 = mem[(32 * idx) + 128]
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 200] = address(_43906)
                                    mem[_26524 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43906), address(cd[4])
                            else:
                                mem[_26524 + 196] = return_data.size
                                mem[_26524 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + 201] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _26524 + ceil32(return_data.size) + 265] = mem[idx + _26524 + 164]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_26524 + ceil32(return_data.size) + 265]
                                if not return_data.size:
                                    mem[_26524 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _42179 = mem[(32 * idx) + 128]
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42179)
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_42179), address(cd[4])
                                else:
                                    require return_data.size >= 32
                                    require mem[_26524 + 228] == bool(mem[_26524 + 228])
                                    if not mem[_26524 + 228]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[_26524 + ceil32(return_data.size) + 201] = 4
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 4
                                    mem[_26524 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26304
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                         gas gas_remaining wei
                                        args mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26304
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                    require ext_code.size(sub_0f0a1c6fAddress)
                                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                            gas gas_remaining wei
                                           args 5
                                    mem[_26524 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = _26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if idx >= mem[96]:
                                        revert with 0, 50
                                    _43912 = mem[(32 * idx) + 128]
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43912)
                                    mem[_26524 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                    require ext_code.size(address(ext_call.return_data[0]))
                                    call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args address(_43912), address(cd[4])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if idx >= mem[96]:
                            revert with 0, 50
                        if idx >= mem[96]:
                            revert with 0, 50
                        if _26304 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                        else:
                            if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26304:
                                revert with 0, 17
                            totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26304
                        if idx >= mem[96]:
                            revert with 0, 50
                        mem[0] = address(cd[4])
                        mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                        if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26304:
                            revert with 0, 17
                        stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26304
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[mem[64] + 4] = 8
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 8
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26051 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26081 = mem[_26051]
            require mem[_26051] == mem[_26051 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _26125 = mem[(32 * idx) + 128]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _26136 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = address(_26125)
            mem[mem[64] + 36] = _26136
            require ext_code.size(address(_26081))
            call address(_26081).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(_26125), _26136
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _26214 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26307 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26337 = mem[_26307]
                require mem[_26307] == mem[_26307 + 12 len 20]
                mem[mem[64] + 4] = mem[_26307 + 12 len 20]
                require ext_code.size(address(_26214))
                staticcall address(_26214).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26337)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26439 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26478 = mem[_26439]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26439] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26763 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26763] == mem[_26763 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26917 = mem[(32 * idx) + 128]
                    _26963 = mem[64]
                    mem[mem[64] + 36] = mem[_26763 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26478
                    _27115 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27115 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27115 + 36 len 28]
                    mem[64] = _26963 + 196
                    mem[_26963 + 132] = 32
                    mem[_26963 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26917)):
                        revert with 0, 'Address: call to non-contract'
                    _27457 = mem[_27115]
                    t = 0
                    while t < _27457:
                        mem[t + _26963 + 196] = mem[t + _27115 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27457) <= _27457:
                        call address(_26917).mem[_26963 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26963 + 200 len _27457 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26963 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26963 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26963 + 264] = mem[idx + _26963 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26963 + 264]
                            if not mem[96]:
                                mem[_26963 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + 264] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + 200], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42206 = mem[(32 * idx) + 128]
                                mem[_26963 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + (2 * ceil32(return_data.size)) + 200] = address(_42206)
                                mem[_26963 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42206), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26963 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + 264] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + 200], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43966 = mem[(32 * idx) + 128]
                                mem[_26963 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + (2 * ceil32(return_data.size)) + 200] = address(_43966)
                                mem[_26963 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43966), address(cd[4])
                        else:
                            mem[_26963 + 196] = return_data.size
                            mem[_26963 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26963 + ceil32(return_data.size) + 265] = mem[idx + _26963 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26963 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26963 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42209 = mem[(32 * idx) + 128]
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42209)
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42209), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26963 + 228] == bool(mem[_26963 + 228])
                                if not mem[_26963 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26963 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43972 = mem[(32 * idx) + 128]
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43972)
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43972), address(cd[4])
                    else:
                        mem[_27457 + _26963 + 196] = 0
                        call address(_26917).mem[_26963 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26963 + 200 len _27457 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26963 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26963 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26963 + 264] = mem[idx + _26963 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26963 + 264]
                            if not mem[96]:
                                mem[_26963 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + 264] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + 200], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42212 = mem[(32 * idx) + 128]
                                mem[_26963 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + (2 * ceil32(return_data.size)) + 200] = address(_42212)
                                mem[_26963 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42212), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26963 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + 264] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + 200], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43978 = mem[(32 * idx) + 128]
                                mem[_26963 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + (2 * ceil32(return_data.size)) + 200] = address(_43978)
                                mem[_26963 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43978), address(cd[4])
                        else:
                            mem[_26963 + 196] = return_data.size
                            mem[_26963 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26963 + ceil32(return_data.size) + 265] = mem[idx + _26963 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26963 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26963 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42215 = mem[(32 * idx) + 128]
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42215)
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42215), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26963 + 228] == bool(mem[_26963 + 228])
                                if not mem[_26963 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26963 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26963 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26478
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26478
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26963 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43984 = mem[(32 * idx) + 128]
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43984)
                                mem[_26963 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43984), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26478 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26478:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26478
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26478:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26478
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26595 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26782 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26782] == mem[_26782 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26962 = mem[(32 * idx) + 128]
                    _27034 = mem[64]
                    mem[mem[64] + 36] = mem[_26782 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26595
                    _27199 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27199 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27199 + 36 len 28]
                    mem[64] = _27034 + 196
                    mem[_27034 + 132] = 32
                    mem[_27034 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26962)):
                        revert with 0, 'Address: call to non-contract'
                    _27558 = mem[_27199]
                    t = 0
                    while t < _27558:
                        mem[t + _27034 + 196] = mem[t + _27199 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27558) <= _27558:
                        call address(_26962).mem[_27034 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27034 + 200 len _27558 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27034 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27034 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27034 + 264] = mem[idx + _27034 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27034 + 264]
                            if not mem[96]:
                                mem[_27034 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + 264] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + 200], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42194 = mem[(32 * idx) + 128]
                                mem[_27034 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + (2 * ceil32(return_data.size)) + 200] = address(_42194)
                                mem[_27034 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42194), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27034 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + 264] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + 200], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43942 = mem[(32 * idx) + 128]
                                mem[_27034 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + (2 * ceil32(return_data.size)) + 200] = address(_43942)
                                mem[_27034 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43942), address(cd[4])
                        else:
                            mem[_27034 + 196] = return_data.size
                            mem[_27034 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27034 + ceil32(return_data.size) + 265] = mem[idx + _27034 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27034 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27034 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42197 = mem[(32 * idx) + 128]
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42197)
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42197), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27034 + 228] == bool(mem[_27034 + 228])
                                if not mem[_27034 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27034 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43948 = mem[(32 * idx) + 128]
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43948)
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43948), address(cd[4])
                    else:
                        mem[_27558 + _27034 + 196] = 0
                        call address(_26962).mem[_27034 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27034 + 200 len _27558 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27034 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27034 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27034 + 264] = mem[idx + _27034 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27034 + 264]
                            if not mem[96]:
                                mem[_27034 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + 264] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + 200], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42200 = mem[(32 * idx) + 128]
                                mem[_27034 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + (2 * ceil32(return_data.size)) + 200] = address(_42200)
                                mem[_27034 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42200), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27034 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + 264] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + 200], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43954 = mem[(32 * idx) + 128]
                                mem[_27034 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + (2 * ceil32(return_data.size)) + 200] = address(_43954)
                                mem[_27034 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43954), address(cd[4])
                        else:
                            mem[_27034 + 196] = return_data.size
                            mem[_27034 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27034 + ceil32(return_data.size) + 265] = mem[idx + _27034 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27034 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27034 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42203 = mem[(32 * idx) + 128]
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42203)
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42203), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27034 + 228] == bool(mem[_27034 + 228])
                                if not mem[_27034 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27034 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27034 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26595
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26595
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27034 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43960 = mem[(32 * idx) + 128]
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43960)
                                mem[_27034 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43960), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26595 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26595:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26595
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26595:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26595
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            if cd[68]:
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26232 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26253 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64] + 4] = 4
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26351 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26377 = mem[_26351]
                require mem[_26351] == mem[_26351 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(cd[4])
                mem[mem[64] + 68] = _26253
                require ext_code.size(address(_26377))
                call address(_26377).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], address(cd[4]), _26253
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = 5
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 5
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26705 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26765 = mem[_26705]
                require mem[_26705] == mem[_26705 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _26864 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = address(_26864)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(address(_26765))
                call address(_26765).updateUserRewards(address arg1, address arg2) with:
                     gas gas_remaining wei
                    args address(_26864), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _26253 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26253:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26253
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26253:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26253
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _26232
                continue 
            if idx >= mem[96]:
                revert with 0, 50
            _26230 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26320 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26350 = mem[_26320]
            require mem[_26320] == mem[_26320 + 12 len 20]
            mem[mem[64] + 4] = mem[_26320 + 12 len 20]
            require ext_code.size(address(_26230))
            staticcall address(_26230).0x70a08231 with:
                    gas gas_remaining wei
                   args address(_26350)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26459 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26501 = mem[_26459]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            if mem[_26459] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26783 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26783] == mem[_26783 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _26965 = mem[(32 * idx) + 128]
                _27036 = mem[64]
                mem[mem[64] + 36] = mem[_26783 + 12 len 20]
                mem[mem[64] + 68] = address(cd[4])
                mem[mem[64] + 100] = _26501
                _27202 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_27202 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27202 + 36 len 28]
                mem[64] = _27036 + 196
                mem[_27036 + 132] = 32
                mem[_27036 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_26965)):
                    revert with 0, 'Address: call to non-contract'
                _27562 = mem[_27202]
                t = 0
                while t < _27562:
                    mem[t + _27036 + 196] = mem[t + _27202 + 32]
                    t = t + 32
                    continue 
                if ceil32(_27562) <= _27562:
                    call address(_26965).mem[_27036 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27036 + 200 len _27562 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27036 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27036 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27036 + 264] = mem[idx + _27036 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27036 + 264]
                        if not mem[96]:
                            mem[_27036 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + 264] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + 200], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42230 = mem[(32 * idx) + 128]
                            mem[_27036 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + (2 * ceil32(return_data.size)) + 200] = address(_42230)
                            mem[_27036 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42230), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27036 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + 264] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + 200], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _44014 = mem[(32 * idx) + 128]
                            mem[_27036 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + (2 * ceil32(return_data.size)) + 200] = address(_44014)
                            mem[_27036 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_44014), address(cd[4])
                    else:
                        mem[_27036 + 196] = return_data.size
                        mem[_27036 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27036 + ceil32(return_data.size) + 265] = mem[idx + _27036 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27036 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27036 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42233 = mem[(32 * idx) + 128]
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42233)
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42233), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27036 + 228] == bool(mem[_27036 + 228])
                            if not mem[_27036 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27036 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _44020 = mem[(32 * idx) + 128]
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_44020)
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_44020), address(cd[4])
                else:
                    mem[_27562 + _27036 + 196] = 0
                    call address(_26965).mem[_27036 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27036 + 200 len _27562 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27036 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27036 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27036 + 264] = mem[idx + _27036 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27036 + 264]
                        if not mem[96]:
                            mem[_27036 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + 264] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + 200], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42236 = mem[(32 * idx) + 128]
                            mem[_27036 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + (2 * ceil32(return_data.size)) + 200] = address(_42236)
                            mem[_27036 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42236), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27036 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + 264] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + 200], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _44026 = mem[(32 * idx) + 128]
                            mem[_27036 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + (2 * ceil32(return_data.size)) + 200] = address(_44026)
                            mem[_27036 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_44026), address(cd[4])
                    else:
                        mem[_27036 + 196] = return_data.size
                        mem[_27036 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27036 + ceil32(return_data.size) + 265] = mem[idx + _27036 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27036 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27036 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42239 = mem[(32 * idx) + 128]
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42239)
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42239), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27036 + 228] == bool(mem[_27036 + 228])
                            if not mem[_27036 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27036 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27036 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26501
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26501
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27036 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _44032 = mem[(32 * idx) + 128]
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_44032)
                            mem[_27036 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_44032), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _26501 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26501:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26501
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26501:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26501
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _26629 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64] + 4] = 0
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26803 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_26803] == mem[_26803 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _27035 = mem[(32 * idx) + 128]
            _27117 = mem[64]
            mem[mem[64] + 36] = mem[_26803 + 12 len 20]
            mem[mem[64] + 68] = address(cd[4])
            mem[mem[64] + 100] = _26629
            _27289 = mem[64]
            mem[mem[64]] = 100
            mem[64] = mem[64] + 132
            mem[_27289 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27289 + 36 len 28]
            mem[64] = _27117 + 196
            mem[_27117 + 132] = 32
            mem[_27117 + 164] = 'SafeERC20: low-level call failed'
            if not ext_code.size(address(_27035)):
                revert with 0, 'Address: call to non-contract'
            _27665 = mem[_27289]
            t = 0
            while t < _27665:
                mem[t + _27117 + 196] = mem[t + _27289 + 32]
                t = t + 32
                continue 
            if ceil32(_27665) <= _27665:
                call address(_27035).mem[_27117 + 196 len 4] with:
                     gas gas_remaining wei
                    args mem[_27117 + 200 len _27665 - 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_27117 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_27117 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _27117 + 264] = mem[idx + _27117 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_27117 + 264]
                    if not mem[96]:
                        mem[_27117 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + 264] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + 200], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _42218 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + (2 * ceil32(return_data.size)) + 200] = address(_42218)
                        mem[_27117 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_42218), address(cd[4])
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_27117 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + 264] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + 200], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _43990 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + (2 * ceil32(return_data.size)) + 200] = address(_43990)
                        mem[_27117 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_43990), address(cd[4])
                else:
                    mem[_27117 + 196] = return_data.size
                    mem[_27117 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + 201] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _27117 + ceil32(return_data.size) + 265] = mem[idx + _27117 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_27117 + ceil32(return_data.size) + 265]
                    if not return_data.size:
                        mem[_27117 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _42221 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42221)
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_42221), address(cd[4])
                    else:
                        require return_data.size >= 32
                        require mem[_27117 + 228] == bool(mem[_27117 + 228])
                        if not mem[_27117 + 228]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_27117 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _43996 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43996)
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_43996), address(cd[4])
            else:
                mem[_27665 + _27117 + 196] = 0
                call address(_27035).mem[_27117 + 196 len 4] with:
                     gas gas_remaining wei
                    args mem[_27117 + 200 len _27665 - 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_27117 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_27117 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _27117 + 264] = mem[idx + _27117 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_27117 + 264]
                    if not mem[96]:
                        mem[_27117 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + 264] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + 200], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _42224 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + (2 * ceil32(return_data.size)) + 200] = address(_42224)
                        mem[_27117 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_42224), address(cd[4])
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_27117 + 200] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + 232] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + 264] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + 200], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 200] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + (2 * ceil32(return_data.size)) + 196
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _44002 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + (2 * ceil32(return_data.size)) + 200] = address(_44002)
                        mem[_27117 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_44002), address(cd[4])
                else:
                    mem[_27117 + 196] = return_data.size
                    mem[_27117 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + 201] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _27117 + ceil32(return_data.size) + 265] = mem[idx + _27117 + 164]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_27117 + ceil32(return_data.size) + 265]
                    if not return_data.size:
                        mem[_27117 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _42227 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42227)
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_42227), address(cd[4])
                    else:
                        require return_data.size >= 32
                        require mem[_27117 + 228] == bool(mem[_27117 + 228])
                        if not mem[_27117 + 228]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[_27117 + ceil32(return_data.size) + 201] = 4
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 4
                        mem[_27117 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26629
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                             gas gas_remaining wei
                            args mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26629
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                        require ext_code.size(sub_0f0a1c6fAddress)
                        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                gas gas_remaining wei
                               args 5
                        mem[_27117 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        if ceil32(_27665) >= mem[96]:
                            revert with 0, 50
                        _44008 = mem[(Mask(251, 0, _27665 + 31) * 32) + 128]
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_44008)
                        mem[_27117 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                        require ext_code.size(address(ext_call.return_data[0]))
                        call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                             gas gas_remaining wei
                            args address(_44008), address(cd[4])
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if ceil32(_27665) >= mem[96]:
                revert with 0, 50
            if ceil32(_27665) >= mem[96]:
                revert with 0, 50
            if _26629 > totalTokenBalance[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]]:
                totalTokenBalance[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]] = 0
            else:
                if totalTokenBalance[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]] < _26629:
                    revert with 0, 17
                totalTokenBalance[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]] -= _26629
            if ceil32(_27665) >= mem[96]:
                revert with 0, 50
            mem[0] = address(cd[4])
            mem[32] = sha3(mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20], 5)
            if stor5[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]][address(cd[4])] < _26629:
                revert with 0, 17
            stor5[mem[(Mask(251, 0, _27665 + 31) * 32) + 140 len 20]][address(cd[4])] -= _26629
            if ceil32(_27665) == -1:
                revert with 0, 17
            t = ceil32(_27665) + 1
            s = s
            continue 
        mem[0] = address(cd[4])
        mem[32] = sha3(address(mem[(32 * idx) + 128]), 5)
        if stor5[address(mem[(32 * idx) + 128])][address(cd[4])] < userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
            revert with 0, 17
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129] > stor5[address(mem[(32 * idx) + 128])][address(cd[4])] - userInvestedAmountByToken[address(cd[4])][address(mem[(32 * idx) + 128])]:
            revert with 0, 'UserPositions::_withdraw: Withdraw amount exceeds user balance'
        if idx >= mem[96]:
            revert with 0, 50
        _25912 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = 0
        require ext_code.size(sub_0f0a1c6fAddress)
        staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                gas gas_remaining wei
               args 0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25940 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25949 = mem[_25940]
        require mem[_25940] == mem[_25940 + 12 len 20]
        mem[mem[64] + 4] = mem[_25940 + 12 len 20]
        require ext_code.size(address(_25912))
        staticcall address(_25912).0x70a08231 with:
                gas gas_remaining wei
               args address(_25949)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25987 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
            revert with 0, 50
        if mem[_25987] >= mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _26058 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26111 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26134 = mem[_26111]
                require mem[_26111] == mem[_26111 + 12 len 20]
                mem[mem[64] + 4] = mem[_26111 + 12 len 20]
                require ext_code.size(address(_26058))
                staticcall address(_26058).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26134)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26209 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26244 = mem[_26209]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26209] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26384 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26384] == mem[_26384 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26492 = mem[(32 * idx) + 128]
                    _26517 = mem[64]
                    mem[mem[64] + 36] = mem[_26384 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26244
                    _26579 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_26579 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26579 + 36 len 28]
                    mem[64] = _26517 + 196
                    mem[_26517 + 132] = 32
                    mem[_26517 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26492)):
                        revert with 0, 'Address: call to non-contract'
                    _26723 = mem[_26579]
                    t = 0
                    while t < _26723:
                        mem[t + _26517 + 196] = mem[t + _26579 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_26723) <= _26723:
                        call address(_26492).mem[_26517 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26517 + 200 len _26723 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26517 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26517 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26517 + 264] = mem[idx + _26517 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26517 + 264]
                            if not mem[96]:
                                mem[_26517 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + 264] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + 200], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42062 = mem[(32 * idx) + 128]
                                mem[_26517 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + (2 * ceil32(return_data.size)) + 200] = address(_42062)
                                mem[_26517 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42062), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26517 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + 264] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + 200], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43678 = mem[(32 * idx) + 128]
                                mem[_26517 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + (2 * ceil32(return_data.size)) + 200] = address(_43678)
                                mem[_26517 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43678), address(cd[4])
                        else:
                            mem[_26517 + 196] = return_data.size
                            mem[_26517 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26517 + ceil32(return_data.size) + 265] = mem[idx + _26517 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26517 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26517 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42065 = mem[(32 * idx) + 128]
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42065)
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42065), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26517 + 228] == bool(mem[_26517 + 228])
                                if not mem[_26517 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26517 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43684 = mem[(32 * idx) + 128]
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43684)
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43684), address(cd[4])
                    else:
                        mem[_26723 + _26517 + 196] = 0
                        call address(_26492).mem[_26517 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26517 + 200 len _26723 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26517 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26517 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26517 + 264] = mem[idx + _26517 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26517 + 264]
                            if not mem[96]:
                                mem[_26517 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + 264] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + 200], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42068 = mem[(32 * idx) + 128]
                                mem[_26517 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + (2 * ceil32(return_data.size)) + 200] = address(_42068)
                                mem[_26517 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42068), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26517 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + 264] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + 200], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43690 = mem[(32 * idx) + 128]
                                mem[_26517 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + (2 * ceil32(return_data.size)) + 200] = address(_43690)
                                mem[_26517 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43690), address(cd[4])
                        else:
                            mem[_26517 + 196] = return_data.size
                            mem[_26517 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26517 + ceil32(return_data.size) + 265] = mem[idx + _26517 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26517 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26517 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42071 = mem[(32 * idx) + 128]
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42071)
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42071), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26517 + 228] == bool(mem[_26517 + 228])
                                if not mem[_26517 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26517 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26517 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26244
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26244
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26517 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43696 = mem[(32 * idx) + 128]
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43696)
                                mem[_26517 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43696), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26244 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26244:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26244
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26244:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26244
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26315 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26396 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26396] == mem[_26396 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26516 = mem[(32 * idx) + 128]
                    _26545 = mem[64]
                    mem[mem[64] + 36] = mem[_26396 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26315
                    _26615 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_26615 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26615 + 36 len 28]
                    mem[64] = _26545 + 196
                    mem[_26545 + 132] = 32
                    mem[_26545 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26516)):
                        revert with 0, 'Address: call to non-contract'
                    _26751 = mem[_26615]
                    t = 0
                    while t < _26751:
                        mem[t + _26545 + 196] = mem[t + _26615 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_26751) <= _26751:
                        call address(_26516).mem[_26545 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26545 + 200 len _26751 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26545 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26545 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26545 + 264] = mem[idx + _26545 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26545 + 264]
                            if not mem[96]:
                                mem[_26545 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + 264] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + 200], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42050 = mem[(32 * idx) + 128]
                                mem[_26545 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + (2 * ceil32(return_data.size)) + 200] = address(_42050)
                                mem[_26545 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42050), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26545 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + 264] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + 200], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43654 = mem[(32 * idx) + 128]
                                mem[_26545 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + (2 * ceil32(return_data.size)) + 200] = address(_43654)
                                mem[_26545 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43654), address(cd[4])
                        else:
                            mem[_26545 + 196] = return_data.size
                            mem[_26545 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26545 + ceil32(return_data.size) + 265] = mem[idx + _26545 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26545 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26545 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42053 = mem[(32 * idx) + 128]
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42053)
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42053), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26545 + 228] == bool(mem[_26545 + 228])
                                if not mem[_26545 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26545 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43660 = mem[(32 * idx) + 128]
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43660)
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43660), address(cd[4])
                    else:
                        mem[_26751 + _26545 + 196] = 0
                        call address(_26516).mem[_26545 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26545 + 200 len _26751 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26545 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26545 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26545 + 264] = mem[idx + _26545 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26545 + 264]
                            if not mem[96]:
                                mem[_26545 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + 264] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + 200], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42056 = mem[(32 * idx) + 128]
                                mem[_26545 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + (2 * ceil32(return_data.size)) + 200] = address(_42056)
                                mem[_26545 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42056), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26545 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + 264] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + 200], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43666 = mem[(32 * idx) + 128]
                                mem[_26545 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + (2 * ceil32(return_data.size)) + 200] = address(_43666)
                                mem[_26545 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43666), address(cd[4])
                        else:
                            mem[_26545 + 196] = return_data.size
                            mem[_26545 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26545 + ceil32(return_data.size) + 265] = mem[idx + _26545 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26545 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26545 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42059 = mem[(32 * idx) + 128]
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42059)
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42059), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26545 + 228] == bool(mem[_26545 + 228])
                                if not mem[_26545 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26545 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26545 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26315
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26315
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26545 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43672 = mem[(32 * idx) + 128]
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43672)
                                mem[_26545 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43672), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26315 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26315:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26315
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26315:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26315
            else:
                if cd[68]:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26076 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26085 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 4
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26146 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26162 = mem[_26146]
                    require mem[_26146] == mem[_26146 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(cd[4])
                    mem[mem[64] + 68] = _26085
                    require ext_code.size(address(_26162))
                    call address(_26162).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(cd[4]), _26085
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = 5
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 5
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26386 = mem[_26359]
                    require mem[_26359] == mem[_26359 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26451 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = address(_26451)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(address(_26386))
                    call address(_26386).updateUserRewards(address arg1, address arg2) with:
                         gas gas_remaining wei
                        args address(_26451), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26085 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26085:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26085
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26085:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26085
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _26076
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                _26074 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26121 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26145 = mem[_26121]
                require mem[_26121] == mem[_26121 + 12 len 20]
                mem[mem[64] + 4] = mem[_26121 + 12 len 20]
                require ext_code.size(address(_26074))
                staticcall address(_26074).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26145)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26226 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26265 = mem[_26226]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26226] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26397 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26397] == mem[_26397 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26519 = mem[(32 * idx) + 128]
                    _26547 = mem[64]
                    mem[mem[64] + 36] = mem[_26397 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26265
                    _26618 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_26618 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26618 + 36 len 28]
                    mem[64] = _26547 + 196
                    mem[_26547 + 132] = 32
                    mem[_26547 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26519)):
                        revert with 0, 'Address: call to non-contract'
                    _26755 = mem[_26618]
                    t = 0
                    while t < _26755:
                        mem[t + _26547 + 196] = mem[t + _26618 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_26755) <= _26755:
                        call address(_26519).mem[_26547 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26547 + 200 len _26755 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26547 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26547 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26547 + 264] = mem[idx + _26547 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26547 + 264]
                            if not mem[96]:
                                mem[_26547 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + 264] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + 200], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42086 = mem[(32 * idx) + 128]
                                mem[_26547 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + (2 * ceil32(return_data.size)) + 200] = address(_42086)
                                mem[_26547 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42086), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26547 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + 264] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + 200], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43726 = mem[(32 * idx) + 128]
                                mem[_26547 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + (2 * ceil32(return_data.size)) + 200] = address(_43726)
                                mem[_26547 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43726), address(cd[4])
                        else:
                            mem[_26547 + 196] = return_data.size
                            mem[_26547 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26547 + ceil32(return_data.size) + 265] = mem[idx + _26547 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26547 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26547 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42089 = mem[(32 * idx) + 128]
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42089)
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42089), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26547 + 228] == bool(mem[_26547 + 228])
                                if not mem[_26547 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26547 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43732 = mem[(32 * idx) + 128]
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43732)
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43732), address(cd[4])
                    else:
                        mem[_26755 + _26547 + 196] = 0
                        call address(_26519).mem[_26547 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26547 + 200 len _26755 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26547 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26547 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26547 + 264] = mem[idx + _26547 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26547 + 264]
                            if not mem[96]:
                                mem[_26547 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + 264] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + 200], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42092 = mem[(32 * idx) + 128]
                                mem[_26547 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + (2 * ceil32(return_data.size)) + 200] = address(_42092)
                                mem[_26547 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42092), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26547 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + 264] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + 200], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43738 = mem[(32 * idx) + 128]
                                mem[_26547 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + (2 * ceil32(return_data.size)) + 200] = address(_43738)
                                mem[_26547 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43738), address(cd[4])
                        else:
                            mem[_26547 + 196] = return_data.size
                            mem[_26547 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26547 + ceil32(return_data.size) + 265] = mem[idx + _26547 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26547 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26547 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42095 = mem[(32 * idx) + 128]
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42095)
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42095), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26547 + 228] == bool(mem[_26547 + 228])
                                if not mem[_26547 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26547 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26547 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26265
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26265
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26547 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43744 = mem[(32 * idx) + 128]
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43744)
                                mem[_26547 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43744), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26265 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26265:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26265
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26265:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26265
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26331 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26409 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26409] == mem[_26409 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26546 = mem[(32 * idx) + 128]
                    _26581 = mem[64]
                    mem[mem[64] + 36] = mem[_26409 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26331
                    _26654 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_26654 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_26654 + 36 len 28]
                    mem[64] = _26581 + 196
                    mem[_26581 + 132] = 32
                    mem[_26581 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_26546)):
                        revert with 0, 'Address: call to non-contract'
                    _26775 = mem[_26654]
                    t = 0
                    while t < _26775:
                        mem[t + _26581 + 196] = mem[t + _26654 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_26775) <= _26775:
                        call address(_26546).mem[_26581 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26581 + 200 len _26775 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26581 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26581 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26581 + 264] = mem[idx + _26581 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26581 + 264]
                            if not mem[96]:
                                mem[_26581 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + 264] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + 200], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42074 = mem[(32 * idx) + 128]
                                mem[_26581 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + (2 * ceil32(return_data.size)) + 200] = address(_42074)
                                mem[_26581 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42074), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26581 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + 264] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + 200], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43702 = mem[(32 * idx) + 128]
                                mem[_26581 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + (2 * ceil32(return_data.size)) + 200] = address(_43702)
                                mem[_26581 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43702), address(cd[4])
                        else:
                            mem[_26581 + 196] = return_data.size
                            mem[_26581 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26581 + ceil32(return_data.size) + 265] = mem[idx + _26581 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26581 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26581 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42077 = mem[(32 * idx) + 128]
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42077)
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42077), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26581 + 228] == bool(mem[_26581 + 228])
                                if not mem[_26581 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26581 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43708 = mem[(32 * idx) + 128]
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43708)
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43708), address(cd[4])
                    else:
                        mem[_26775 + _26581 + 196] = 0
                        call address(_26546).mem[_26581 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_26581 + 200 len _26775 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_26581 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26581 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26581 + 264] = mem[idx + _26581 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26581 + 264]
                            if not mem[96]:
                                mem[_26581 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + 264] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + 200], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42080 = mem[(32 * idx) + 128]
                                mem[_26581 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + (2 * ceil32(return_data.size)) + 200] = address(_42080)
                                mem[_26581 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42080), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26581 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + 264] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + 200], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43714 = mem[(32 * idx) + 128]
                                mem[_26581 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + (2 * ceil32(return_data.size)) + 200] = address(_43714)
                                mem[_26581 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43714), address(cd[4])
                        else:
                            mem[_26581 + 196] = return_data.size
                            mem[_26581 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _26581 + ceil32(return_data.size) + 265] = mem[idx + _26581 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_26581 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_26581 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42083 = mem[(32 * idx) + 128]
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42083)
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42083), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_26581 + 228] == bool(mem[_26581 + 228])
                                if not mem[_26581 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_26581 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_26581 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26331
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26331
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_26581 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43720 = mem[(32 * idx) + 128]
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43720)
                                mem[_26581 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43720), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26331 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26331:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26331
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26331:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26331
        else:
            mem[mem[64] + 4] = 8
            require ext_code.size(sub_0f0a1c6fAddress)
            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                    gas gas_remaining wei
                   args 8
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26078 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26096 = mem[_26078]
            require mem[_26078] == mem[_26078 + 12 len 20]
            if idx >= mem[96]:
                revert with 0, 50
            _26147 = mem[(32 * idx) + 128]
            if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                revert with 0, 50
            _26155 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
            mem[mem[64]] = 0x5560066a00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = address(_26147)
            mem[mem[64] + 36] = _26155
            require ext_code.size(address(_26096))
            call address(_26096).closePositionsForWithdrawal(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(_26147), _26155
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx >= mem[96]:
                revert with 0, 50
            if mem[(32 * idx) + 140 len 20] != address(ext_call.return_data[0]):
                if idx >= mem[96]:
                    revert with 0, 50
                _26246 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26334 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26360 = mem[_26334]
                require mem[_26334] == mem[_26334 + 12 len 20]
                mem[mem[64] + 4] = mem[_26334 + 12 len 20]
                require ext_code.size(address(_26246))
                staticcall address(_26246).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26360)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26471 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26520 = mem[_26471]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26471] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26798] == mem[_26798 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _27007 = mem[(32 * idx) + 128]
                    _27096 = mem[64]
                    mem[mem[64] + 36] = mem[_26798 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26520
                    _27267 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27267 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27267 + 36 len 28]
                    mem[64] = _27096 + 196
                    mem[_27096 + 132] = 32
                    mem[_27096 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_27007)):
                        revert with 0, 'Address: call to non-contract'
                    _27630 = mem[_27267]
                    t = 0
                    while t < _27630:
                        mem[t + _27096 + 196] = mem[t + _27267 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27630) <= _27630:
                        call address(_27007).mem[_27096 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27096 + 200 len _27630 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27096 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27096 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27096 + 264] = mem[idx + _27096 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27096 + 264]
                            if not mem[96]:
                                mem[_27096 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + 264] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + 200], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _42110 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + (2 * ceil32(return_data.size)) + 200] = address(_42110)
                                mem[_27096 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42110), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27096 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + 264] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + 200], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _43774 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + (2 * ceil32(return_data.size)) + 200] = address(_43774)
                                mem[_27096 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43774), address(cd[4])
                        else:
                            mem[_27096 + 196] = return_data.size
                            mem[_27096 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27096 + ceil32(return_data.size) + 265] = mem[idx + _27096 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27096 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27096 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _42113 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42113)
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42113), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27096 + 228] == bool(mem[_27096 + 228])
                                if not mem[_27096 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27096 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _43780 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43780)
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43780), address(cd[4])
                    else:
                        mem[_27630 + _27096 + 196] = 0
                        call address(_27007).mem[_27096 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27096 + 200 len _27630 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27096 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27096 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27096 + 264] = mem[idx + _27096 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27096 + 264]
                            if not mem[96]:
                                mem[_27096 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + 264] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + 200], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _42116 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + (2 * ceil32(return_data.size)) + 200] = address(_42116)
                                mem[_27096 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42116), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27096 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + 200] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + 264] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + 200], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _43786 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + (2 * ceil32(return_data.size)) + 200] = address(_43786)
                                mem[_27096 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43786), address(cd[4])
                        else:
                            mem[_27096 + 196] = return_data.size
                            mem[_27096 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27096 + ceil32(return_data.size) + 265] = mem[idx + _27096 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27096 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27096 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _42119 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42119)
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42119), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27096 + 228] == bool(mem[_27096 + 228])
                                if not mem[_27096 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27096 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27096 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26520
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26520
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27096 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ceil32(_27630) >= mem[96]:
                                    revert with 0, 50
                                _43792 = mem[(Mask(251, 0, _27630 + 31) * 32) + 128]
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43792)
                                mem[_27096 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43792), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if ceil32(_27630) >= mem[96]:
                        revert with 0, 50
                    if ceil32(_27630) >= mem[96]:
                        revert with 0, 50
                    if _26520 > totalTokenBalance[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]]:
                        totalTokenBalance[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]] < _26520:
                            revert with 0, 17
                        totalTokenBalance[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]] -= _26520
                    if ceil32(_27630) >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20], 5)
                    if stor5[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]][address(cd[4])] < _26520:
                        revert with 0, 17
                    stor5[mem[(Mask(251, 0, _27630 + 31) * 32) + 140 len 20]][address(cd[4])] -= _26520
                    if ceil32(_27630) == -1:
                        revert with 0, 17
                    t = ceil32(_27630) + 1
                    s = s
                    continue 
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                _26661 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26814 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26814] == mem[_26814 + 12 len 20]
                if idx >= mem[96]:
                    revert with 0, 50
                _27095 = mem[(32 * idx) + 128]
                _27187 = mem[64]
                mem[mem[64] + 36] = mem[_26814 + 12 len 20]
                mem[mem[64] + 68] = address(cd[4])
                mem[mem[64] + 100] = _26661
                _27343 = mem[64]
                mem[mem[64]] = 100
                mem[64] = mem[64] + 132
                mem[_27343 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27343 + 36 len 28]
                mem[64] = _27187 + 196
                mem[_27187 + 132] = 32
                mem[_27187 + 164] = 'SafeERC20: low-level call failed'
                if not ext_code.size(address(_27095)):
                    revert with 0, 'Address: call to non-contract'
                _27730 = mem[_27343]
                t = 0
                while t < _27730:
                    mem[t + _27187 + 196] = mem[t + _27343 + 32]
                    t = t + 32
                    continue 
                if ceil32(_27730) <= _27730:
                    call address(_27095).mem[_27187 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27187 + 200 len _27730 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27187 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27187 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27187 + 264] = mem[idx + _27187 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27187 + 264]
                        if not mem[96]:
                            mem[_27187 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + 264] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + 200], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42098 = mem[(32 * idx) + 128]
                            mem[_27187 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + (2 * ceil32(return_data.size)) + 200] = address(_42098)
                            mem[_27187 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42098), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27187 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + 264] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + 200], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _43750 = mem[(32 * idx) + 128]
                            mem[_27187 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + (2 * ceil32(return_data.size)) + 200] = address(_43750)
                            mem[_27187 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43750), address(cd[4])
                    else:
                        mem[_27187 + 196] = return_data.size
                        mem[_27187 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27187 + ceil32(return_data.size) + 265] = mem[idx + _27187 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27187 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27187 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42101 = mem[(32 * idx) + 128]
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42101)
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42101), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27187 + 228] == bool(mem[_27187 + 228])
                            if not mem[_27187 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27187 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _43756 = mem[(32 * idx) + 128]
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43756)
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43756), address(cd[4])
                else:
                    mem[_27730 + _27187 + 196] = 0
                    call address(_27095).mem[_27187 + 196 len 4] with:
                         gas gas_remaining wei
                        args mem[_27187 + 200 len _27730 - 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_27187 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27187 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27187 + 264] = mem[idx + _27187 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27187 + 264]
                        if not mem[96]:
                            mem[_27187 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + 264] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + 200], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42104 = mem[(32 * idx) + 128]
                            mem[_27187 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + (2 * ceil32(return_data.size)) + 200] = address(_42104)
                            mem[_27187 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42104), address(cd[4])
                        else:
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27187 + 200] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + 232] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + 264] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + 200], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 200] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + (2 * ceil32(return_data.size)) + 196
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _43762 = mem[(32 * idx) + 128]
                            mem[_27187 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + (2 * ceil32(return_data.size)) + 200] = address(_43762)
                            mem[_27187 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43762), address(cd[4])
                    else:
                        mem[_27187 + 196] = return_data.size
                        mem[_27187 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + 201] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _27187 + ceil32(return_data.size) + 265] = mem[idx + _27187 + 164]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_27187 + ceil32(return_data.size) + 265]
                        if not return_data.size:
                            mem[_27187 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _42107 = mem[(32 * idx) + 128]
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42107)
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_42107), address(cd[4])
                        else:
                            require return_data.size >= 32
                            require mem[_27187 + 228] == bool(mem[_27187 + 228])
                            if not mem[_27187 + 228]:
                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                            mem[_27187 + ceil32(return_data.size) + 201] = 4
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 4
                            mem[_27187 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26661
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                 gas gas_remaining wei
                                args mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26661
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                            require ext_code.size(sub_0f0a1c6fAddress)
                            staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                    gas gas_remaining wei
                                   args 5
                            mem[_27187 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if idx >= mem[96]:
                                revert with 0, 50
                            _43768 = mem[(32 * idx) + 128]
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43768)
                            mem[_27187 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                            require ext_code.size(address(ext_call.return_data[0]))
                            call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                 gas gas_remaining wei
                                args address(_43768), address(cd[4])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx >= mem[96]:
                    revert with 0, 50
                if idx >= mem[96]:
                    revert with 0, 50
                if _26661 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                else:
                    if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26661:
                        revert with 0, 17
                    totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26661
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = address(cd[4])
                mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26661:
                    revert with 0, 17
                stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26661
            else:
                if cd[68]:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26268 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26285 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 4
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26374 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26398 = mem[_26374]
                    require mem[_26374] == mem[_26374 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    mem[mem[64] + 36] = address(cd[4])
                    mem[mem[64] + 68] = _26285
                    require ext_code.size(address(_26398))
                    call address(_26398).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4], address(cd[4]), _26285
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = 5
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 5
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26758 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26800 = mem[_26758]
                    require mem[_26758] == mem[_26758 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _26910 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = address(_26910)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(address(_26800))
                    call address(_26800).updateUserRewards(address arg1, address arg2) with:
                         gas gas_remaining wei
                        args address(_26910), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26285 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26285:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26285
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26285:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26285
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _26268
                    continue 
                if idx >= mem[96]:
                    revert with 0, 50
                _26266 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = 0
                require ext_code.size(sub_0f0a1c6fAddress)
                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26346 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26373 = mem[_26346]
                require mem[_26346] == mem[_26346 + 12 len 20]
                mem[mem[64] + 4] = mem[_26346 + 12 len 20]
                require ext_code.size(address(_26266))
                staticcall address(_26266).0x70a08231 with:
                        gas gas_remaining wei
                       args address(_26373)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26495 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26550 = mem[_26495]
                if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                    revert with 0, 50
                if mem[_26495] < mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]:
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26815 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26815] == mem[_26815 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _27098 = mem[(32 * idx) + 128]
                    _27189 = mem[64]
                    mem[mem[64] + 36] = mem[_26815 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26550
                    _27346 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27346 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27346 + 36 len 28]
                    mem[64] = _27189 + 196
                    mem[_27189 + 132] = 32
                    mem[_27189 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_27098)):
                        revert with 0, 'Address: call to non-contract'
                    _27734 = mem[_27346]
                    t = 0
                    while t < _27734:
                        mem[t + _27189 + 196] = mem[t + _27346 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27734) <= _27734:
                        call address(_27098).mem[_27189 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27189 + 200 len _27734 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27189 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27189 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27189 + 264] = mem[idx + _27189 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27189 + 264]
                            if not mem[96]:
                                mem[_27189 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + 264] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + 200], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42134 = mem[(32 * idx) + 128]
                                mem[_27189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + (2 * ceil32(return_data.size)) + 200] = address(_42134)
                                mem[_27189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42134), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27189 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + 264] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + 200], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43822 = mem[(32 * idx) + 128]
                                mem[_27189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + (2 * ceil32(return_data.size)) + 200] = address(_43822)
                                mem[_27189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43822), address(cd[4])
                        else:
                            mem[_27189 + 196] = return_data.size
                            mem[_27189 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27189 + ceil32(return_data.size) + 265] = mem[idx + _27189 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27189 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27189 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42137 = mem[(32 * idx) + 128]
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42137)
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42137), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27189 + 228] == bool(mem[_27189 + 228])
                                if not mem[_27189 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27189 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43828 = mem[(32 * idx) + 128]
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43828)
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43828), address(cd[4])
                    else:
                        mem[_27734 + _27189 + 196] = 0
                        call address(_27098).mem[_27189 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27189 + 200 len _27734 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27189 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27189 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27189 + 264] = mem[idx + _27189 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27189 + 264]
                            if not mem[96]:
                                mem[_27189 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + 264] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + 200], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42140 = mem[(32 * idx) + 128]
                                mem[_27189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + (2 * ceil32(return_data.size)) + 200] = address(_42140)
                                mem[_27189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42140), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27189 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + 264] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + 200], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43834 = mem[(32 * idx) + 128]
                                mem[_27189 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + (2 * ceil32(return_data.size)) + 200] = address(_43834)
                                mem[_27189 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43834), address(cd[4])
                        else:
                            mem[_27189 + 196] = return_data.size
                            mem[_27189 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27189 + ceil32(return_data.size) + 265] = mem[idx + _27189 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27189 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27189 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42143 = mem[(32 * idx) + 128]
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42143)
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42143), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27189 + 228] == bool(mem[_27189 + 228])
                                if not mem[_27189 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27189 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27189 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26550
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26550
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27189 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43840 = mem[(32 * idx) + 128]
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43840)
                                mem[_27189 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43840), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26550 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26550:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26550
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26550:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26550
                else:
                    if idx >= mem[ceil32(32 * ('cd', 36).length) + 97]:
                        revert with 0, 50
                    _26695 = mem[(32 * idx) + ceil32(32 * ('cd', 36).length) + 129]
                    mem[mem[64] + 4] = 0
                    require ext_code.size(sub_0f0a1c6fAddress)
                    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26833 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26833] == mem[_26833 + 12 len 20]
                    if idx >= mem[96]:
                        revert with 0, 50
                    _27188 = mem[(32 * idx) + 128]
                    _27269 = mem[64]
                    mem[mem[64] + 36] = mem[_26833 + 12 len 20]
                    mem[mem[64] + 68] = address(cd[4])
                    mem[mem[64] + 100] = _26695
                    _27436 = mem[64]
                    mem[mem[64]] = 100
                    mem[64] = mem[64] + 132
                    mem[_27436 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_27436 + 36 len 28]
                    mem[64] = _27269 + 196
                    mem[_27269 + 132] = 32
                    mem[_27269 + 164] = 'SafeERC20: low-level call failed'
                    if not ext_code.size(address(_27188)):
                        revert with 0, 'Address: call to non-contract'
                    _27817 = mem[_27436]
                    t = 0
                    while t < _27817:
                        mem[t + _27269 + 196] = mem[t + _27436 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_27817) <= _27817:
                        call address(_27188).mem[_27269 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27269 + 200 len _27817 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27269 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27269 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27269 + 264] = mem[idx + _27269 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27269 + 264]
                            if not mem[96]:
                                mem[_27269 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + 264] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + 200], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42122 = mem[(32 * idx) + 128]
                                mem[_27269 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + (2 * ceil32(return_data.size)) + 200] = address(_42122)
                                mem[_27269 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42122), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27269 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + 264] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + 200], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43798 = mem[(32 * idx) + 128]
                                mem[_27269 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + (2 * ceil32(return_data.size)) + 200] = address(_43798)
                                mem[_27269 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43798), address(cd[4])
                        else:
                            mem[_27269 + 196] = return_data.size
                            mem[_27269 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27269 + ceil32(return_data.size) + 265] = mem[idx + _27269 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27269 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27269 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42125 = mem[(32 * idx) + 128]
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42125)
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42125), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27269 + 228] == bool(mem[_27269 + 228])
                                if not mem[_27269 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27269 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43804 = mem[(32 * idx) + 128]
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43804)
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43804), address(cd[4])
                    else:
                        mem[_27817 + _27269 + 196] = 0
                        call address(_27188).mem[_27269 + 196 len 4] with:
                             gas gas_remaining wei
                            args mem[_27269 + 200 len _27817 - 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_27269 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27269 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27269 + 264] = mem[idx + _27269 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27269 + 264]
                            if not mem[96]:
                                mem[_27269 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + 264] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + 200], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42128 = mem[(32 * idx) + 128]
                                mem[_27269 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + (2 * ceil32(return_data.size)) + 200] = address(_42128)
                                mem[_27269 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42128), address(cd[4])
                            else:
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27269 + 200] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + 200] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + 232] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + 264] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + 200], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 200] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + 196] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + (2 * ceil32(return_data.size)) + 196
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43810 = mem[(32 * idx) + 128]
                                mem[_27269 + (2 * ceil32(return_data.size)) + 196] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + (2 * ceil32(return_data.size)) + 200] = address(_43810)
                                mem[_27269 + (2 * ceil32(return_data.size)) + 232] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43810), address(cd[4])
                        else:
                            mem[_27269 + 196] = return_data.size
                            mem[_27269 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + 201] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _27269 + ceil32(return_data.size) + 265] = mem[idx + _27269 + 164]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_27269 + ceil32(return_data.size) + 265]
                            if not return_data.size:
                                mem[_27269 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _42131 = mem[(32 * idx) + 128]
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_42131)
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_42131), address(cd[4])
                            else:
                                require return_data.size >= 32
                                require mem[_27269 + 228] == bool(mem[_27269 + 228])
                                if not mem[_27269 + 228]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[_27269 + ceil32(return_data.size) + 201] = 4
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 4
                                mem[_27269 + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = mem[(32 * idx) + 140 len 20]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 233] = address(cd[4])
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 265] = _26695
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).decreaseRewards(address arg1, address arg2, uint256 arg3) with:
                                     gas gas_remaining wei
                                    args mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201], address(cd[4]), _26695
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 201] = 5
                                require ext_code.size(sub_0f0a1c6fAddress)
                                staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
                                        gas gas_remaining wei
                                       args 5
                                mem[_27269 + ceil32(return_data.size) + ceil32(return_data.size) + 197] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if idx >= mem[96]:
                                    revert with 0, 50
                                _43816 = mem[(32 * idx) + 128]
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 197] = 0x6e7ed94900000000000000000000000000000000000000000000000000000000
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 201] = address(_43816)
                                mem[_27269 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 233] = address(cd[4])
                                require ext_code.size(address(ext_call.return_data[0]))
                                call address(ext_call.return_data[0]).updateUserRewards(address arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args address(_43816), address(cd[4])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if idx >= mem[96]:
                        revert with 0, 50
                    if idx >= mem[96]:
                        revert with 0, 50
                    if _26695 > totalTokenBalance[mem[(32 * idx) + 140 len 20]]:
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] = 0
                    else:
                        if totalTokenBalance[mem[(32 * idx) + 140 len 20]] < _26695:
                            revert with 0, 17
                        totalTokenBalance[mem[(32 * idx) + 140 len 20]] -= _26695
                    if idx >= mem[96]:
                        revert with 0, 50
                    mem[0] = address(cd[4])
                    mem[32] = sha3(mem[(32 * idx) + 140 len 20], 5)
                    if stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] < _26695:
                        revert with 0, 17
                    stor5[mem[(32 * idx) + 140 len 20]][address(cd[4])] -= _26695
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        continue 
    mem[mem[64] + 4] = 5
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 5
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _25821 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _25827 = mem[_25821]
    require mem[_25821] == mem[_25821 + 12 len 20]
    mem[mem[64] + 4] = address(cd[4])
    require ext_code.size(address(_25827))
    staticcall address(_25827).getUserEthRewards(address arg1) with:
            gas gas_remaining wei
           args address(cd[4])
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _25853 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    if mem[_25853] <= 0:
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(ext_call.return_data[0]))
        call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
             gas gas_remaining wei
            args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25910 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25922 = mem[_25910]
        mem[mem[64]] = 128
        _25945 = mem[ceil32(32 * ('cd', 36).length) + 97]
        mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
        mem[mem[64] + 160 len 32 * _25945] = mem[ceil32(32 * ('cd', 36).length) + 129 len 32 * _25945]
        mem[mem[64] + 64] = 0
        mem[mem[64] + 96] = _25922
        return 128, s, 0, _25922, mem[mem[64] + 128 len (32 * _25945) + 32]
    mem[mem[64] + 4] = 5
    require ext_code.size(sub_0f0a1c6fAddress)
    staticcall sub_0f0a1c6fAddress.0x6f8c3f8a with:
            gas gas_remaining wei
           args 5
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _25923 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _25935 = mem[_25923]
    require mem[_25923] == mem[_25923 + 12 len 20]
    mem[mem[64] + 4] = address(cd[4])
    require ext_code.size(address(_25935))
    call address(_25935).0xc115b22c with:
         gas gas_remaining wei
        args address(cd[4])
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _25973 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _25983 = mem[_25973]
    mem[mem[64] + 4] = address(cd[4])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).claimBiosRewards(address arg1) with:
         gas gas_remaining wei
        args address(cd[4])
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _26022 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _26044 = mem[_26022]
    mem[mem[64]] = 128
    _26093 = mem[ceil32(32 * ('cd', 36).length) + 97]
    mem[mem[64] + 128] = mem[ceil32(32 * ('cd', 36).length) + 97]
    mem[mem[64] + 160 len 32 * _26093] = mem[ceil32(32 * ('cd', 36).length) + 129 len 32 * _26093]
    mem[mem[64] + 64] = _25983
    mem[mem[64] + 96] = _26044
    return 128, s, _25983, _26044, mem[mem[64] + 128 len (32 * _26093) + 32]
}



}
