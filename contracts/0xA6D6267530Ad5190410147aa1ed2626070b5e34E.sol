contract main {




// =====================  Runtime code  =====================


#
#  - sub_51f56684(?)
#
const sub_e67d636f(?) = 0x872340a532bdd7bb02bea115c1b0f1ba87eac982f5b79b51ac189ffaac1b6fce

const WMEMO = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b

const DEFAULT_ADMIN_ROLE = 0

const TIME = 0xb54f16fb19478766a268f172c9480f8da1a7c9c3

const MEMO = 0x136acd46c134e8269052c62a67042d6bdedde3c9

const MIM = 0x130966628846bfd36ff31a822705796e8cb8c18d


mapping of struct roleAdmin;
address sub_397dbceeAddress;
address sub_7d144b18Address;
address STAKINGAddress;
uint8 stor4;
uint8 stor4; offset 160
address stor4; offset 8
address stor4;

function getRoleAdmin(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_256
}

function sub_397dbcee(?) payable {
    return sub_397dbceeAddress
}

function chance() payable {
    return bool(uint8(stor4.field_160))
}

function sub_7d144b18(?) payable {
    return sub_7d144b18Address
}

function hasRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    return bool(roleAdmin[arg1][address(arg2)].field_0)
}

function STAKING() payable {
    return STAKINGAddress
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x7965db0b00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function renounceRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if arg2 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: can only renounce roles for self'
    if roleAdmin[arg1][address(arg2)].field_0:
        roleAdmin[arg1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function rebaseAmount() payable {
    staticcall STAKINGAddress.epoch() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 128
    if not bool(ceil32(return_data.size) + 224 <= test266151307()):
        revert with 'NH{q', 65
    staticcall STAKINGAddress.epoch() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 128
    if not bool((2 * ceil32(return_data.size)) + 352 <= test266151307()):
        revert with 'NH{q', 65
    staticcall 0x136acd46c134e8269052c62a67042d6bdedde3c9.circulatingSupply() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    staticcall 0x136acd46c134e8269052c62a67042d6bdedde3c9.0x18160ddd with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[32] and ext_call.return_data[0] > -1 / ext_call.return_data[32]:
        revert with 'NH{q', 17
    if not ext_call.return_data[0]:
        revert with 'NH{q', 18
    return (ext_call.return_data[32] * ext_call.return_data[0] / ext_call.return_data[0])
}

function approve(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if roleAdmin[address(msg.sender)].field_0:
        call arg1.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg2), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    mem[128 len 42] = call.data[calldata.size len 42]
    idx = 41
    s = address(msg.sender)
    while idx > 1:
        if s % 16 >= 16:
            revert with 'NH{q', 50
        if idx >= 42:
            revert with 'NH{q', 50
        mem[idx + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        s = Mask(252, 0, s) * 0.0625
        continue 
    if msg.sender + 10240:
        revert with 0, 'Strings: hex length insufficient'
    mem[224 len 66] = call.data[calldata.size len 66]
    idx = 65
    while idx > 1:
        if idx >= 66:
            revert with 'NH{q', 50
        mem[idx + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        continue 
    revert with 0, 32, 148, 'AccessControl: account ', mem[160 len 42], ' is missing role ', mem[288 len 66], 0, 0 >> 928, 0
}

function revokeRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if roleAdmin[roleAdmin[arg1].field_256][address(msg.sender)].field_0:
        if roleAdmin[arg1][address(arg2)].field_0:
            roleAdmin[arg1][address(arg2)].field_0 = 0
            emit RoleRevoked(arg1, arg2, msg.sender);
    mem[128 len 42] = call.data[calldata.size len 42]
    idx = 41
    s = address(msg.sender)
    while idx > 1:
        if s % 16 >= 16:
            revert with 'NH{q', 50
        if idx >= 42:
            revert with 'NH{q', 50
        mem[idx + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        s = Mask(252, 0, s) * 0.0625
        continue 
    if msg.sender + 10240:
        revert with 0, 'Strings: hex length insufficient'
    mem[224 len 66] = call.data[calldata.size len 66]
    idx = 65
    s = roleAdmin[arg1].field_256
    while idx > 1:
        if s % 16 >= 16:
            revert with 'NH{q', 50
        if idx >= 66:
            revert with 'NH{q', 50
        mem[idx + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        s = Mask(252, 0, s) * 0.0625
        continue 
    if roleAdmin[arg1].field_256 + 16384:
        revert with 0, 'Strings: hex length insufficient'
    revert with 0, 32, 148, 'AccessControl: account ', mem[160 len 42], ' is missing role ', mem[288 len 66], 0, 0 >> 928, 0
}

function grantRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if roleAdmin[roleAdmin[arg1].field_256][address(msg.sender)].field_0:
        if not roleAdmin[arg1][address(arg2)].field_0:
            roleAdmin[arg1][address(arg2)].field_0 = 1
            emit RoleGranted(arg1, arg2, msg.sender);
    mem[128 len 42] = call.data[calldata.size len 42]
    idx = 41
    s = address(msg.sender)
    while idx > 1:
        if s % 16 >= 16:
            revert with 'NH{q', 50
        if idx >= 42:
            revert with 'NH{q', 50
        mem[idx + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        s = Mask(252, 0, s) * 0.0625
        continue 
    if msg.sender + 10240:
        revert with 0, 'Strings: hex length insufficient'
    mem[224 len 66] = call.data[calldata.size len 66]
    idx = 65
    s = roleAdmin[arg1].field_256
    while idx > 1:
        if s % 16 >= 16:
            revert with 'NH{q', 50
        if idx >= 66:
            revert with 'NH{q', 50
        mem[idx + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
        if not idx:
            revert with 'NH{q', 17
        idx = idx - 1
        s = Mask(252, 0, s) * 0.0625
        continue 
    if roleAdmin[arg1].field_256 + 16384:
        revert with 0, 'Strings: hex length insufficient'
    revert with 0, 32, 148, 'AccessControl: account ', mem[160 len 42], ' is missing role ', mem[288 len 66], 0, 0 >> 928, 0
}

function approveAll() payable {
    if not roleAdmin[address(msg.sender)].field_0:
        mem[128 len 42] = call.data[calldata.size len 42]
        idx = 41
        s = address(msg.sender)
        while idx > 1:
            if s % 16 >= 16:
                revert with 'NH{q', 50
            if idx >= 42:
                revert with 'NH{q', 50
            mem[idx + 128 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
            if not idx:
                revert with 'NH{q', 17
            idx = idx - 1
            s = Mask(252, 0, s) * 0.0625
            continue 
        if msg.sender + 10240:
            revert with 0, 'Strings: hex length insufficient'
        mem[224 len 66] = call.data[calldata.size len 66]
        idx = 65
        while idx > 1:
            if idx >= 66:
                revert with 'NH{q', 50
            mem[idx + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
            if not idx:
                revert with 'NH{q', 17
            idx = idx - 1
            continue 
        revert with 0, 32, 148, 'AccessControl: account ', mem[160 len 42], ' is missing role ', mem[288 len 66], 0, 0 >> 928, 0
    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args STAKINGAddress, -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    call 0x136acd46c134e8269052c62a67042d6bdedde3c9.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args STAKINGAddress, -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    call 0x136acd46c134e8269052c62a67042d6bdedde3c9.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function _fallback() payable {
    require 4 <= calldata.size
    require calldata.size <= calldata.size
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    if arg4.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 'NH{q', 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if address(stor4.field_0) != msg.sender:
        revert with 0, 'Non permissioned address call'
    if address(arg1) != this.address:
        revert with 0, 'Not from this contract'
    require arg4.length >= 192
    if not bool(ceil32(ceil32(arg4.length)) + 289 <= test266151307()):
        revert with 'NH{q', 65
    require mem[128] == mem[140 len 20]
    mem[ceil32(ceil32(arg4.length)) + 97] = mem[128]
    require mem[160] == mem[172 len 20]
    mem[ceil32(ceil32(arg4.length)) + 129] = mem[160]
    require mem[192] == mem[204 len 20]
    mem[ceil32(ceil32(arg4.length)) + 161] = mem[192]
    require mem[224] == mem[236 len 20]
    mem[ceil32(ceil32(arg4.length)) + 193] = mem[224]
    mem[ceil32(ceil32(arg4.length)) + 225] = mem[256]
    mem[ceil32(ceil32(arg4.length)) + 257] = mem[288]
    if arg2 > 0:
        if mem[ceil32(ceil32(arg4.length)) + 173 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.0xde0e9a3e with:
                 gas gas_remaining wei
                args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(STAKINGAddress)
            call STAKINGAddress.unstake(uint256 arg1, bool arg2) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0xa9059cbb with:
                 gas gas_remaining wei
                args mem[ceil32(ceil32(arg4.length)) + 141 len 20], ext_call.return_data[0]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            staticcall mem[ceil32(ceil32(arg4.length)) + 141 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(mem[ceil32(ceil32(arg4.length)) + 141 len 20])
            if ext_call.return_data[12 len 20] == mem[ceil32(ceil32(arg4.length)) + 205 len 20]:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args mem[ceil32(ceil32(arg4.length)) + 257], 0, address(this.address), 128, 0
            else:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, mem[ceil32(ceil32(arg4.length)) + 257], address(this.address), 128, 0, None
        else:
            call STAKINGAddress.stake(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args arg2, this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(STAKINGAddress)
            call STAKINGAddress.claim(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.wrap(uint256 arg1) with:
                 gas gas_remaining wei
                args arg2
            require return_data.size >= 32
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.0xa9059cbb with:
                 gas gas_remaining wei
                args mem[ceil32(ceil32(arg4.length)) + 141 len 20], ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            staticcall mem[ceil32(ceil32(arg4.length)) + 141 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(mem[ceil32(ceil32(arg4.length)) + 141 len 20])
            if ext_call.return_data[12 len 20] == mem[ceil32(ceil32(arg4.length)) + 205 len 20]:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args mem[ceil32(ceil32(arg4.length)) + 257], 0, address(this.address), 128, 0, None
            else:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, mem[ceil32(ceil32(arg4.length)) + 257], address(this.address), 128, 0
    else:
        if mem[ceil32(ceil32(arg4.length)) + 173 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.0xde0e9a3e with:
                 gas gas_remaining wei
                args arg3
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(STAKINGAddress)
            call STAKINGAddress.unstake(uint256 arg1, bool arg2) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0xa9059cbb with:
                 gas gas_remaining wei
                args mem[ceil32(ceil32(arg4.length)) + 141 len 20], ext_call.return_data[0]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            staticcall mem[ceil32(ceil32(arg4.length)) + 141 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(mem[ceil32(ceil32(arg4.length)) + 141 len 20])
            if ext_call.return_data[12 len 20] == mem[ceil32(ceil32(arg4.length)) + 205 len 20]:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args mem[ceil32(ceil32(arg4.length)) + 257], 0, address(this.address), 128, 0, None
            else:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, mem[ceil32(ceil32(arg4.length)) + 257], address(this.address), 128, 0
        else:
            call STAKINGAddress.stake(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args arg3, this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(STAKINGAddress)
            call STAKINGAddress.claim(address arg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.wrap(uint256 arg1) with:
                 gas gas_remaining wei
                args arg3
            require return_data.size >= 32
            call 0x0da67235dd5787d67955420c84ca1cecd4e5bb3b.0xa9059cbb with:
                 gas gas_remaining wei
                args mem[ceil32(ceil32(arg4.length)) + 141 len 20], ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            staticcall mem[ceil32(ceil32(arg4.length)) + 141 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(mem[ceil32(ceil32(arg4.length)) + 141 len 20])
            if ext_call.return_data[12 len 20] == mem[ceil32(ceil32(arg4.length)) + 205 len 20]:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args mem[ceil32(ceil32(arg4.length)) + 257], 0, address(this.address), 128, 0, None
            else:
                call mem[ceil32(ceil32(arg4.length)) + 141 len 20].swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, mem[ceil32(ceil32(arg4.length)) + 257], address(this.address), 128, 0, None
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    call mem[ceil32(ceil32(arg4.length)) + 205 len 20].0xa9059cbb with:
         gas gas_remaining wei
        args mem[ceil32(ceil32(arg4.length)) + 109 len 20], mem[ceil32(ceil32(arg4.length)) + 225]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    return arg4[all]
}

function sub_313b292b(?) payable {
    require calldata.size - 4 >= 160
    require cd[4] == address(cd[4])
    require calldata.size > 67
    require 100 <= calldata.size
    idx = 36
    s = 96
    while idx < 100:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    require 131 < calldata.size
    require 164 <= calldata.size
    idx = 100
    s = 160
    while idx < 164:
        require cd[idx] == uint16(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == address(cd[4]):
        staticcall mem[108 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
            staticcall mem[108 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[108 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            staticcall STAKINGAddress.index() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    return 0
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                    revert with 'NH{q', 1
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var154002:
                    revert with 'NH{q', 18
                if var160001 > !var160002:
                    revert with 'NH{q', 17
                if var172001 < var172002:
                    revert with 'NH{q', 17
                if var176001 >= 1000:
                    idx = var176003
                    s = var176006
                    while idx:
                        if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
                    revert with 'NH{q', 18
                if var176006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if (var176006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * var176006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
            staticcall mem[140 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                revert with 0, 'g: invalid token'
            staticcall mem[140 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                return 0
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                revert with 'NH{q', 1
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                revert with 'NH{q', 17
            if not var162002:
                revert with 'NH{q', 18
            if var168001 > !var168002:
                revert with 'NH{q', 17
            if var180001 < var180002:
                revert with 'NH{q', 17
            if var184001 >= 1000:
                idx = var184003
                s = var184006
                while idx:
                    if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                        revert with 'NH{q', 17
                    if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                        revert with 'NH{q', 17
                    if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                        idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                        s = idx
                        continue 
                    if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
                revert with 'NH{q', 18
            if var184006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if (var184006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * var184006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
        staticcall mem[108 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
            revert with 0, 'g: invalid token'
        staticcall mem[108 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[108 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        staticcall STAKINGAddress.index() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
            staticcall mem[140 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[140 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                return 0
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                revert with 'NH{q', 1
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                revert with 'NH{q', 17
            if not var162002:
                revert with 'NH{q', 18
            if var168001 > !var168002:
                revert with 'NH{q', 17
            if var180001 < var180002:
                revert with 'NH{q', 17
            if var184001 >= 1000:
                idx = var184003
                s = var184006
                while idx:
                    if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                        revert with 'NH{q', 17
                    if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                        revert with 'NH{q', 17
                    if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                        idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                        s = idx
                        continue 
                    if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
                revert with 'NH{q', 18
            if var184006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if (var184006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * var184006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
        staticcall mem[140 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
            revert with 0, 'g: invalid token'
        staticcall mem[140 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            return 0
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
            revert with 'NH{q', 1
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
            revert with 'NH{q', 17
        if not var170002:
            revert with 'NH{q', 18
        if var176001 > !var176002:
            revert with 'NH{q', 17
        if var188001 < var188002:
            revert with 'NH{q', 17
        if var192001 >= 1000:
            idx = var192003
            s = var192006
            while idx:
                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                    revert with 'NH{q', 17
                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                    revert with 'NH{q', 17
                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                    s = idx
                    continue 
                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
            revert with 'NH{q', 18
        if var192006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if (var192006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not mem[190 len 2]:
            revert with 'NH{q', 18
        return ((1000 * var192006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
    if address(cd[4]) != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
        revert with 0, 'invalid token'
    staticcall mem[108 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == address(cd[4]):
        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
            staticcall mem[108 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[108 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            staticcall STAKINGAddress.index() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    return 0
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                    revert with 'NH{q', 1
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var155002:
                    revert with 'NH{q', 18
                if var161001 > !var161002:
                    revert with 'NH{q', 17
                if var173001 < var173002:
                    revert with 'NH{q', 17
                if var177001 >= 1000:
                    idx = var177003
                    s = var177006
                    while idx:
                        if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
                    revert with 'NH{q', 18
                if var177006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if (var177006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * var177006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
            staticcall mem[140 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                revert with 0, 'g: invalid token'
            staticcall mem[140 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                return 0
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                revert with 'NH{q', 1
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                revert with 'NH{q', 17
            if not var163002:
                revert with 'NH{q', 18
            if var169001 > !var169002:
                revert with 'NH{q', 17
            if var181001 < var181002:
                revert with 'NH{q', 17
            if var185001 >= 1000:
                idx = var185003
                s = var185006
                while idx:
                    if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                        revert with 'NH{q', 17
                    if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                        revert with 'NH{q', 17
                    if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                        idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                        s = idx
                        continue 
                    if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
                revert with 'NH{q', 18
            if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
        staticcall mem[108 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
            revert with 0, 'g: invalid token'
        staticcall mem[108 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[108 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        staticcall STAKINGAddress.index() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
            staticcall mem[140 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[140 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                return 0
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                revert with 'NH{q', 1
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                revert with 'NH{q', 17
            if not var163002:
                revert with 'NH{q', 18
            if var169001 > !var169002:
                revert with 'NH{q', 17
            if var181001 < var181002:
                revert with 'NH{q', 17
            if var185001 >= 1000:
                idx = var185003
                s = var185006
                while idx:
                    if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                        revert with 'NH{q', 17
                    if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                        revert with 'NH{q', 17
                    if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                        idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                        s = idx
                        continue 
                    if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
                revert with 'NH{q', 18
            if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
        staticcall mem[140 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
            revert with 0, 'g: invalid token'
        staticcall mem[140 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            return 0
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
            revert with 'NH{q', 1
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
            revert with 'NH{q', 17
        if not var171002:
            revert with 'NH{q', 18
        if var177001 > !var177002:
            revert with 'NH{q', 17
        if var189001 < var189002:
            revert with 'NH{q', 17
        if var193001 >= 1000:
            idx = var193003
            s = var193006
            while idx:
                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                    revert with 'NH{q', 17
                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                    revert with 'NH{q', 17
                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                    s = idx
                    continue 
                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
            revert with 'NH{q', 18
        if var193006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if (var193006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not mem[190 len 2]:
            revert with 'NH{q', 18
        return ((1000 * var193006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
        staticcall mem[108 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[108 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        staticcall STAKINGAddress.index() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if Mask(112, 0, ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
            revert with 'NH{q', 17
        if not ext_call.return_data[0]:
            revert with 'NH{q', 18
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
            staticcall mem[140 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[140 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                return 0
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                revert with 'NH{q', 17
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                revert with 'NH{q', 1
            if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                revert with 'NH{q', 17
            if not var155002:
                revert with 'NH{q', 18
            if var161001 > !var161002:
                revert with 'NH{q', 17
            if var173001 < var173002:
                revert with 'NH{q', 17
            if var177001 >= 1000:
                idx = var177003
                s = var177006
                while idx:
                    if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                        revert with 'NH{q', 17
                    if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                        revert with 'NH{q', 17
                    if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                        idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                        s = idx
                        continue 
                    if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
                revert with 'NH{q', 18
            if var177006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if (var177006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * var177006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
        staticcall mem[140 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
            revert with 0, 'g: invalid token'
        staticcall mem[140 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[140 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 18
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            return 0
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
            revert with 'NH{q', 1
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
            revert with 'NH{q', 17
        if not var163002:
            revert with 'NH{q', 18
        if var169001 > !var169002:
            revert with 'NH{q', 17
        if var181001 < var181002:
            revert with 'NH{q', 17
        if var185001 >= 1000:
            idx = var185003
            s = var185006
            while idx:
                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                    revert with 'NH{q', 17
                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                    revert with 'NH{q', 17
                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                    s = idx
                    continue 
                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
            revert with 'NH{q', 18
        if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
            revert with 'NH{q', 17
        if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not mem[190 len 2]:
            revert with 'NH{q', 18
        return ((1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2])
    staticcall mem[108 len 20].0xd21220a7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
        revert with 0, 'g: invalid token'
    staticcall mem[108 len 20].getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    staticcall mem[108 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall STAKINGAddress.index() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if Mask(112, 0, ext_call.return_data[32]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
        revert with 'NH{q', 17
    if not ext_call.return_data[0]:
        revert with 'NH{q', 18
    staticcall mem[140 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
        staticcall mem[140 len 20].getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall mem[140 len 20].0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
            revert with 'NH{q', 17
        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 18
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            return 0
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
            revert with 'NH{q', 17
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
            revert with 'NH{q', 1
        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
            revert with 'NH{q', 17
        if not var163002:
            revert with 'NH{q', 18
        if var169001 > !var169002:
            revert with 'NH{q', 17
        if var181001 < var181002:
            revert with 'NH{q', 17
        if var185001 >= 1000:
            idx = var185003
            s = var185006
            while idx:
                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                    revert with 'NH{q', 17
                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                    revert with 'NH{q', 17
                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                    s = idx
                    continue 
                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not mem[190 len 2]:
                    revert with 'NH{q', 18
                return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
            revert with 'NH{q', 18
        if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
            revert with 'NH{q', 17
        if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 'NH{q', 17
        if not mem[190 len 2]:
            revert with 'NH{q', 18
        return ((1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
    staticcall mem[140 len 20].0xd21220a7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
        revert with 0, 'g: invalid token'
    staticcall mem[140 len 20].getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    staticcall mem[140 len 20].token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
        revert with 'NH{q', 17
    if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
        revert with 'NH{q', 17
    if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
        revert with 'NH{q', 17
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
        revert with 'NH{q', 17
    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 18
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        return 0
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
        revert with 'NH{q', 17
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
        revert with 'NH{q', 1
    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
        revert with 'NH{q', 17
    if not var171002:
        revert with 'NH{q', 18
    if var177001 > !var177002:
        revert with 'NH{q', 17
    if var189001 < var189002:
        revert with 'NH{q', 17
    if var193001 >= 1000:
        idx = var193003
        s = var193006
        while idx:
            if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                revert with 'NH{q', 17
            if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                revert with 'NH{q', 17
            if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                s = idx
                continue 
            if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not mem[190 len 2]:
                revert with 'NH{q', 18
            return ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
        revert with 'NH{q', 18
    if var193006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
        revert with 'NH{q', 17
    if (var193006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
        revert with 'NH{q', 17
    if not mem[190 len 2]:
        revert with 'NH{q', 18
    return ((1000 * var193006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2])
}

function sub_5971b8b4(?) payable {
    require calldata.size - 4 >= 160
    require cd[4] == address(cd[4])
    require calldata.size > 67
    require 100 <= calldata.size
    idx = 36
    s = 96
    while idx < 100:
        require cd[idx] == address(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    require 131 < calldata.size
    require 164 <= calldata.size
    idx = 100
    s = 160
    while idx < 164:
        require cd[idx] == uint16(cd[idx])
        mem[s] = cd[idx]
        idx = idx + 32
        s = s + 32
        continue 
    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == address(cd[4]):
        staticcall mem[108 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
            staticcall mem[108 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[108 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            staticcall STAKINGAddress.index() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    uint8(stor4.field_160) = 0
                else:
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                        revert with 'NH{q', 1
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                        revert with 'NH{q', 17
                    if not var155002:
                        revert with 'NH{q', 18
                    if var161001 > !var161002:
                        revert with 'NH{q', 17
                    if var173001 < var173002:
                        revert with 'NH{q', 17
                    if var177001 >= 1000:
                        idx = var177003
                        s = var177006
                        while idx:
                            if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                revert with 'NH{q', 17
                            if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                revert with 'NH{q', 17
                            if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                s = idx
                                continue 
                            if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                revert with 'NH{q', 17
                            if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if not mem[190 len 2]:
                                revert with 'NH{q', 18
                            if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                uint8(stor4.field_160) = 0
                            else:
                                uint8(stor4.field_160) = 1
                        revert with 'NH{q', 18
                    if var177006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if (var177006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    if not (1000 * var177006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                        uint8(stor4.field_160) = 0
                    else:
                        uint8(stor4.field_160) = 1
            else:
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                    revert with 0, 'g: invalid token'
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                    uint8(stor4.field_160) = 0
                else:
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                        revert with 'NH{q', 1
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                        revert with 'NH{q', 17
                    if not var163002:
                        revert with 'NH{q', 18
                    if var169001 > !var169002:
                        revert with 'NH{q', 17
                    if var181001 < var181002:
                        revert with 'NH{q', 17
                    if var185001 >= 1000:
                        idx = var185003
                        s = var185006
                        while idx:
                            if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                revert with 'NH{q', 17
                            if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                revert with 'NH{q', 17
                            if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                s = idx
                                continue 
                            if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                revert with 'NH{q', 17
                            if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if not mem[190 len 2]:
                                revert with 'NH{q', 18
                            if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                uint8(stor4.field_160) = 0
                            else:
                                uint8(stor4.field_160) = 1
                        revert with 'NH{q', 18
                    if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    if not (1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                        uint8(stor4.field_160) = 0
                    else:
                        uint8(stor4.field_160) = 1
        else:
            staticcall mem[108 len 20].0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                revert with 0, 'g: invalid token'
            staticcall mem[108 len 20].getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall mem[108 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            staticcall STAKINGAddress.index() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            staticcall mem[140 len 20].token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    uint8(stor4.field_160) = 0
                else:
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                        revert with 'NH{q', 1
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                        revert with 'NH{q', 17
                    if not var163002:
                        revert with 'NH{q', 18
                    if var169001 > !var169002:
                        revert with 'NH{q', 17
                    if var181001 < var181002:
                        revert with 'NH{q', 17
                    if var185001 >= 1000:
                        idx = var185003
                        s = var185006
                        while idx:
                            if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                revert with 'NH{q', 17
                            if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                revert with 'NH{q', 17
                            if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                s = idx
                                continue 
                            if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                revert with 'NH{q', 17
                            if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if not mem[190 len 2]:
                                revert with 'NH{q', 18
                            if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                uint8(stor4.field_160) = 0
                            else:
                                uint8(stor4.field_160) = 1
                        revert with 'NH{q', 18
                    if var185006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if (var185006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    if not (1000 * var185006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                        uint8(stor4.field_160) = 0
                    else:
                        uint8(stor4.field_160) = 1
            else:
                staticcall mem[140 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                    revert with 0, 'g: invalid token'
                staticcall mem[140 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 18
                if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 18
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                    uint8(stor4.field_160) = 0
                else:
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                        revert with 'NH{q', 1
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                        revert with 'NH{q', 17
                    if not var171002:
                        revert with 'NH{q', 18
                    if var177001 > !var177002:
                        revert with 'NH{q', 17
                    if var189001 < var189002:
                        revert with 'NH{q', 17
                    if var193001 >= 1000:
                        idx = var193003
                        s = var193006
                        while idx:
                            if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                revert with 'NH{q', 17
                            if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                revert with 'NH{q', 17
                            if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                s = idx
                                continue 
                            if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                revert with 'NH{q', 17
                            if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if not mem[190 len 2]:
                                revert with 'NH{q', 18
                            if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                uint8(stor4.field_160) = 0
                            else:
                                uint8(stor4.field_160) = 1
                        revert with 'NH{q', 18
                    if var193006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if (var193006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not mem[190 len 2]:
                        revert with 'NH{q', 18
                    if not (1000 * var193006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                        uint8(stor4.field_160) = 0
                    else:
                        uint8(stor4.field_160) = 1
    else:
        if address(cd[4]) != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
            revert with 0, 'invalid token'
        staticcall mem[108 len 20].token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == address(cd[4]):
            if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                staticcall mem[108 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[108 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                staticcall STAKINGAddress.index() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var156002:
                            revert with 'NH{q', 18
                        if var162001 > !var162002:
                            revert with 'NH{q', 17
                        if var174001 < var174002:
                            revert with 'NH{q', 17
                        if var178001 >= 1000:
                            idx = var178003
                            s = var178006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var178006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (var178006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var178006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
                else:
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                        revert with 0, 'g: invalid token'
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var164002:
                            revert with 'NH{q', 18
                        if var170001 > !var170002:
                            revert with 'NH{q', 17
                        if var182001 < var182002:
                            revert with 'NH{q', 17
                        if var186001 >= 1000:
                            idx = var186003
                            s = var186006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var186006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (var186006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var186006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
            else:
                staticcall mem[108 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                    revert with 0, 'g: invalid token'
                staticcall mem[108 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[108 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                staticcall STAKINGAddress.index() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var164002:
                            revert with 'NH{q', 18
                        if var170001 > !var170002:
                            revert with 'NH{q', 17
                        if var182001 < var182002:
                            revert with 'NH{q', 17
                        if var186001 >= 1000:
                            idx = var186003
                            s = var186006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var186006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                            revert with 'NH{q', 17
                        if (var186006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var186006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
                else:
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                        revert with 0, 'g: invalid token'
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var172002:
                            revert with 'NH{q', 18
                        if var178001 > !var178002:
                            revert with 'NH{q', 17
                        if var190001 < var190002:
                            revert with 'NH{q', 17
                        if var194001 >= 1000:
                            idx = var194003
                            s = var194006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var194006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                            revert with 'NH{q', 17
                        if (var194006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var194006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[0] / 10^18 / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
        else:
            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                staticcall mem[108 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[108 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                staticcall STAKINGAddress.index() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var156002:
                            revert with 'NH{q', 18
                        if var162001 > !var162002:
                            revert with 'NH{q', 17
                        if var174001 < var174002:
                            revert with 'NH{q', 17
                        if var178001 >= 1000:
                            idx = var178003
                            s = var178006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var178006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (var178006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var178006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
                else:
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                        revert with 0, 'g: invalid token'
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var164002:
                            revert with 'NH{q', 18
                        if var170001 > !var170002:
                            revert with 'NH{q', 17
                        if var182001 < var182002:
                            revert with 'NH{q', 17
                        if var186001 >= 1000:
                            idx = var186003
                            s = var186006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var186006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (var186006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var186006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[32]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
            else:
                staticcall mem[108 len 20].0xd21220a7 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                    revert with 0, 'g: invalid token'
                staticcall mem[108 len 20].getReserves() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                staticcall mem[108 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                staticcall STAKINGAddress.index() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if Mask(112, 0, ext_call.return_data[32]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                    revert with 'NH{q', 17
                if not ext_call.return_data[0]:
                    revert with 'NH{q', 18
                staticcall mem[140 len 20].token0() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var164002:
                            revert with 'NH{q', 18
                        if var170001 > !var170002:
                            revert with 'NH{q', 17
                        if var182001 < var182002:
                            revert with 'NH{q', 17
                        if var186001 >= 1000:
                            idx = var186003
                            s = var186006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var186006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                            revert with 'NH{q', 17
                        if (var186006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var186006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
                else:
                    staticcall mem[140 len 20].0xd21220a7 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                        revert with 0, 'g: invalid token'
                    staticcall mem[140 len 20].getReserves() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 96
                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                    staticcall mem[140 len 20].token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2]:
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 18
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) and mem[190 len 2] > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        revert with 'NH{q', 17
                    if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 <= 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                        uint8(stor4.field_160) = 0
                    else:
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > -1 / mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000:
                            revert with 'NH{q', 17
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) <= 1:
                            revert with 'NH{q', 1
                        if mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                            revert with 'NH{q', 17
                        if not var172002:
                            revert with 'NH{q', 18
                        if var178001 > !var178002:
                            revert with 'NH{q', 17
                        if var190001 < var190002:
                            revert with 'NH{q', 17
                        if var194001 >= 1000:
                            idx = var194003
                            s = var194006
                            while idx:
                                if idx > !(10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx):
                                    revert with 'NH{q', 17
                                if idx < idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                                    revert with 'NH{q', 17
                                if idx - (idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                                    idx = idx + (10^6 * mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) * mem[190 len 2] / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                                    s = idx
                                    continue 
                                if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                                    revert with 'NH{q', 17
                                if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if not mem[190 len 2]:
                                    revert with 'NH{q', 18
                                if not (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                                    uint8(stor4.field_160) = 0
                                else:
                                    uint8(stor4.field_160) = 1
                            revert with 'NH{q', 18
                        if var194006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0])):
                            revert with 'NH{q', 17
                        if (var194006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if not mem[190 len 2]:
                            revert with 'NH{q', 18
                        if not (1000 * var194006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (mem[222 len 2] * Mask(112, 0, ext_call.return_data[0]))) / mem[190 len 2]:
                            uint8(stor4.field_160) = 0
                        else:
                            uint8(stor4.field_160) = 1
}

function sub_633df96a(?) payable {
    staticcall sub_397dbceeAddress.token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
        staticcall sub_397dbceeAddress.getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall sub_397dbceeAddress.0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        staticcall STAKINGAddress.index() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if Mask(112, 0, ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
            revert with 'NH{q', 17
        if not ext_call.return_data[0]:
            revert with 'NH{q', 18
        staticcall sub_7d144b18Address.token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
            staticcall sub_7d144b18Address.getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall sub_7d144b18Address.0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if 1 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if 1 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997:
                revert with 'NH{q', 17
            if 997 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 18
            if 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) and 997 > -1 / 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 > 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) > -1 / 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000:
                    revert with 'NH{q', 17
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) <= 1:
                    revert with 'NH{q', 1
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var135002:
                    revert with 'NH{q', 18
                if var141001 > !var141002:
                    revert with 'NH{q', 17
                if var153001 < var153002:
                    revert with 'NH{q', 17
                if var157001 >= 1000:
                    idx = var157003
                    s = var157006
                    while idx:
                        if idx > !(10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(19 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(19 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(19 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(19 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(19 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(19 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(19 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(19 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (19 * ceil32(return_data.size)) + 804] = mem[s + (19 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, mem[(19 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                            else:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(19 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(19 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(19 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(19 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(19 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(19 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(19 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(19 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (19 * ceil32(return_data.size)) + 804] = mem[s + (19 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, mem[(19 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            uint8(stor4.field_0) = 1
                            Mask(152, 0, stor4.field_8) = 0
                    revert with 'NH{q', 18
                if var157006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32])):
                    revert with 'NH{q', 17
                if (var157006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                    else:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997)) + 1, 997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var157006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * Mask(112, 0, ext_call.return_data[32]))) / 997 * ext_call.return_data[0] / 10^18)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    uint8(stor4.field_0) = 1
                    Mask(152, 0, stor4.field_8) = 0
        else:
            staticcall sub_7d144b18Address.0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                revert with 0, 'g: invalid token'
            staticcall sub_7d144b18Address.getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall sub_7d144b18Address.token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if 1 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * Mask(112, 0, ext_call.return_data[32])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not 1997 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 18
            if 1 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997:
                revert with 'NH{q', 17
            if 997 * Mask(112, 0, ext_call.return_data[32]) and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if not 1997 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 18
            if 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) and 997 > -1 / 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 > 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]):
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000:
                    revert with 'NH{q', 17
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) <= 1:
                    revert with 'NH{q', 1
                if 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var143002:
                    revert with 'NH{q', 18
                if var149001 > !var149002:
                    revert with 'NH{q', 17
                if var161001 < var161002:
                    revert with 'NH{q', 17
                if var165001 >= 1000:
                    idx = var165003
                    s = var165006
                    while idx:
                        if idx > !(10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[32]) * Mask(112, 0, ext_call.return_data[0]) / 1997 * Mask(112, 0, ext_call.return_data[32]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                            else:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            uint8(stor4.field_0) = 1
                            Mask(152, 0, stor4.field_8) = 0
                    revert with 'NH{q', 18
                if var165006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                if (var165006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                    else:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[32])) / 997 * ext_call.return_data[0] / 10^18)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    uint8(stor4.field_0) = 1
                    Mask(152, 0, stor4.field_8) = 0
    else:
        staticcall sub_397dbceeAddress.0xd21220a7 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
            revert with 0, 'g: invalid token'
        staticcall sub_397dbceeAddress.getReserves() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
        staticcall sub_397dbceeAddress.token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        staticcall STAKINGAddress.index() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if Mask(112, 0, ext_call.return_data[32]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
            revert with 'NH{q', 17
        if not ext_call.return_data[0]:
            revert with 'NH{q', 18
        staticcall sub_7d144b18Address.token0() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if address(ext_call.return_data[0]) == ext_call.return_data[12 len 20]:
            staticcall sub_7d144b18Address.getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall sub_7d144b18Address.0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if 1 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not 1997 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 18
            if 1 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997:
                revert with 'NH{q', 17
            if 997 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not 1997 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 18
            if 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) and 997 > -1 / 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 > 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]):
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 and 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000:
                    revert with 'NH{q', 17
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) <= 1:
                    revert with 'NH{q', 1
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var143002:
                    revert with 'NH{q', 18
                if var149001 > !var149002:
                    revert with 'NH{q', 17
                if var161001 < var161002:
                    revert with 'NH{q', 17
                if var165001 >= 1000:
                    idx = var165003
                    s = var165006
                    while idx:
                        if idx > !(10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[32]) / 1997 * Mask(112, 0, ext_call.return_data[0]) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                            else:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(20 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(20 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(20 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(20 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(20 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(20 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(20 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (20 * ceil32(return_data.size)) + 804] = mem[s + (20 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, mem[(20 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            uint8(stor4.field_0) = 1
                            Mask(152, 0, stor4.field_8) = 0
                    revert with 'NH{q', 18
                if var165006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                if (var165006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                    else:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 and ext_call.return_data[0] > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997)) + 1, 997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var165006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[0]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / 1997 * Mask(112, 0, ext_call.return_data[0])) / 997 * ext_call.return_data[0] / 10^18)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    uint8(stor4.field_0) = 1
                    Mask(152, 0, stor4.field_8) = 0
        else:
            staticcall sub_7d144b18Address.0xd21220a7 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if address(ext_call.return_data[0]) != ext_call.return_data[12 len 20]:
                revert with 0, 'g: invalid token'
            staticcall sub_7d144b18Address.getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            staticcall sub_7d144b18Address.token0() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if 1 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997:
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) and 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > -1 / Mask(112, 0, ext_call.return_data[32]):
                revert with 'NH{q', 17
            if Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if 1 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997:
                revert with 'NH{q', 17
            if 997 * Mask(112, 0, ext_call.return_data[0]) and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 18
            if 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) and 997 > -1 / 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                revert with 'NH{q', 17
            if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 > 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 and 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) > -1 / 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000:
                    revert with 'NH{q', 17
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) <= 1:
                    revert with 'NH{q', 1
                if 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
                    revert with 'NH{q', 17
                if not var151002:
                    revert with 'NH{q', 18
                if var157001 > !var157002:
                    revert with 'NH{q', 17
                if var169001 < var169002:
                    revert with 'NH{q', 17
                if var173001 >= 1000:
                    idx = var173003
                    s = var173006
                    while idx:
                        if idx > !(10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / idx):
                            revert with 'NH{q', 17
                        if idx < idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / idx) / 2:
                            revert with 'NH{q', 17
                        if idx - (idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / idx) / 2) >= 1000:
                            idx = idx + (10^6 * 997 * 997 * Mask(112, 0, ext_call.return_data[0]) * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / 1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])) / idx) / 2
                            s = idx
                            continue 
                        if idx / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                            revert with 'NH{q', 17
                        if (idx / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 'NH{q', 17
                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(23 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(23 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(23 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(23 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(23 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(23 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(23 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(23 * ceil32(return_data.size)) + 644] = (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997
                                        s = 0
                                        while s < 192:
                                            mem[s + (23 * ceil32(return_data.size)) + 804] = mem[s + (23 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, mem[(23 * ceil32(return_data.size)) + 804 len 192]
                            else:
                                if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(21 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(21 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(21 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(21 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(21 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(21 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(21 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (21 * ceil32(return_data.size)) + 804] = mem[s + (21 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, mem[(21 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                                else:
                                    staticcall sub_7d144b18Address.0xd21220a7 with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                        revert with 0, 'g: invalid token'
                                    staticcall sub_7d144b18Address.getReserves() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 96
                                    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                    staticcall sub_7d144b18Address.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                        revert with 0, 'v2: out'
                                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                        revert with 0, 'v2: reserve'
                                    if Mask(112, 0, ext_call.return_data[0]) and (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) < (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    if Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 17
                                    if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                        revert with 'NH{q', 18
                                    if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                        revert with 'NH{q', 17
                                    staticcall STAKINGAddress.index() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                        revert with 'NH{q', 17
                                    staticcall sub_397dbceeAddress.token0() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(22 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(22 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(22 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(22 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(22 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(22 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(22 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (22 * ceil32(return_data.size)) + 804] = mem[s + (22 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, mem[(22 * ceil32(return_data.size)) + 804 len 192]
                                    else:
                                        staticcall sub_397dbceeAddress.0xd21220a7 with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                            revert with 0, 'g: invalid token'
                                        staticcall sub_397dbceeAddress.getReserves() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 96
                                        require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                        require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                        require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                        staticcall sub_397dbceeAddress.token0() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                            revert with 0, 'v2: in'
                                        if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                            revert with 0, 'v2: reserve'
                                        if (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                            revert with 'NH{q', 17
                                        if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                            revert with 'NH{q', 17
                                        if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 17
                                        if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                            revert with 'NH{q', 18
                                        address(stor4.field_0) = sub_7d144b18Address
                                        mem[(23 * ceil32(return_data.size)) + 448] = sub_7d144b18Address
                                        mem[(23 * ceil32(return_data.size)) + 480] = sub_397dbceeAddress
                                        mem[(23 * ceil32(return_data.size)) + 512] = 0xda67235dd5787d67955420c84ca1cecd4e5bb3b
                                        mem[(23 * ceil32(return_data.size)) + 544] = address(ext_call.return_data[0])
                                        mem[(23 * ceil32(return_data.size)) + 576] = (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1
                                        mem[(23 * ceil32(return_data.size)) + 608] = 997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                                        mem[(23 * ceil32(return_data.size)) + 640] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[(23 * ceil32(return_data.size)) + 644] = 0
                                        s = 0
                                        while s < 192:
                                            mem[s + (23 * ceil32(return_data.size)) + 804] = mem[s + (23 * ceil32(return_data.size)) + 448]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(sub_7d144b18Address)
                                        call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, (1000 * idx / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, mem[(23 * ceil32(return_data.size)) + 804 len 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            uint8(stor4.field_0) = 1
                            Mask(152, 0, stor4.field_8) = 0
                    revert with 'NH{q', 18
                if var173006 / 1000 < 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0])):
                    revert with 'NH{q', 17
                if (var173006 / 1000) - (1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 'NH{q', 17
                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    staticcall sub_7d144b18Address.token0() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, 0, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                    else:
                        if 0xda67235dd5787d67955420c84ca1cecd4e5bb3b == ext_call.return_data[12 len 20]:
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) and (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) < (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[0]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[32]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[0])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                        else:
                            staticcall sub_7d144b18Address.0xd21220a7 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != 0xda67235dd5787d67955420c84ca1cecd4e5bb3b:
                                revert with 0, 'g: invalid token'
                            staticcall sub_7d144b18Address.getReserves() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 96
                            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                            staticcall sub_7d144b18Address.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 <= 0:
                                revert with 0, 'v2: out'
                            if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                revert with 0, 'v2: reserve'
                            if Mask(112, 0, ext_call.return_data[0]) and (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > -1 / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) < (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997) and 997 > -1 / Mask(112, 0, ext_call.return_data[32]) - ((1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 17
                            if not (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997):
                                revert with 'NH{q', 18
                            if 1 > !(1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)):
                                revert with 'NH{q', 17
                            staticcall STAKINGAddress.index() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 and ext_call.return_data[0] > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997:
                                revert with 'NH{q', 17
                            staticcall sub_397dbceeAddress.token0() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if 0xb54f16fb19478766a268f172c9480f8da1a7c9c3 == ext_call.return_data[12 len 20]:
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[32]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[0]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[0]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[32]) / (1000 * Mask(112, 0, ext_call.return_data[0])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                            else:
                                staticcall sub_397dbceeAddress.0xd21220a7 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != 0xb54f16fb19478766a268f172c9480f8da1a7c9c3:
                                    revert with 0, 'g: invalid token'
                                staticcall sub_397dbceeAddress.getReserves() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 96
                                require ext_call.return_data[0] == ext_call.return_data[18 len 14]
                                require ext_call.return_data[32] == ext_call.return_data[50 len 14]
                                require ext_call.return_data[64] == ext_call.return_data[92 len 4]
                                staticcall sub_397dbceeAddress.token0() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 <= 0:
                                    revert with 0, 'v2: in'
                                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                                    revert with 0, 'v2: reserve'
                                if (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and 997 > -1 / (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 and Mask(112, 0, ext_call.return_data[0]) > -1 / 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18:
                                    revert with 'NH{q', 17
                                if Mask(112, 0, ext_call.return_data[32]) > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                    revert with 'NH{q', 17
                                if 1000 * Mask(112, 0, ext_call.return_data[32]) > !(997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 17
                                if not (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18):
                                    revert with 'NH{q', 18
                                address(stor4.field_0) = sub_7d144b18Address
                                require ext_code.size(sub_7d144b18Address)
                                call sub_7d144b18Address.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997, address(this.address), 128, 192, sub_7d144b18Address, sub_397dbceeAddress, 0xda67235dd5787d67955420c84ca1cecd4e5bb3b, address(ext_call.return_data[0]), (1000 * Mask(112, 0, ext_call.return_data[0]) * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 / (997 * Mask(112, 0, ext_call.return_data[32])) - (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997)) + 1, 997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18 * Mask(112, 0, ext_call.return_data[0]) / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * (1000 * var173006 / 1000) - (1000 * 1000 * Mask(112, 0, ext_call.return_data[32]) * 10^18 * Mask(112, 0, ext_call.return_data[32]) / ext_call.return_data[0] / (1000 * Mask(112, 0, ext_call.return_data[32])) + (997 * Mask(112, 0, ext_call.return_data[0]))) / 997 * ext_call.return_data[0] / 10^18)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    uint8(stor4.field_0) = 1
                    Mask(152, 0, stor4.field_8) = 0
}



}
