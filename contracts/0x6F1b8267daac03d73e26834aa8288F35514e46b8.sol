contract main {




// =====================  Runtime code  =====================


function destroy() payable {
    require 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef == msg.sender
    staticcall 0x4946c0e9f43f4dee607b0ef1fa1c.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        call 0x0000000000004946c0e9f43f4dee607b0ef1fa1c.0xa9059cbb with:
             gas gas_remaining wei
            args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    selfdestruct(msg.sender)
}

function allow(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef == msg.sender
}

function withdraw() payable {
    require 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef == msg.sender
    staticcall 0x4946c0e9f43f4dee607b0ef1fa1c.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        call 0x0000000000004946c0e9f43f4dee607b0ef1fa1c.0xa9059cbb with:
             gas gas_remaining wei
            args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function _fallback() payable {
    require 4 <= calldata.size
    require calldata.size <= calldata.size
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 'NH{q', 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not -tx.origin + 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef:
        _2 = mem[320]
        _7 = mem[192]
        staticcall mem[224].0x70a08231 with:
                gas gas_remaining wei
               args this.address
        call mem[224].0xa9059cbb with:
             gas gas_remaining wei
            args mem[192], ext_call.return_data[0]
        staticcall mem[224].0x70a08231 with:
                gas gas_remaining wei
               args mem[192]
        mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
        call _7.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
             gas gas_remaining wei
            args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_2')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_2')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
    else:
        if not -tx.origin + 0x8f0b5bb53cb3897cfe28330d4ac3b18674915ea4:
            _3 = mem[320]
            _15 = mem[192]
            staticcall mem[224].0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            call mem[224].0xa9059cbb with:
                 gas gas_remaining wei
                args mem[192], ext_call.return_data[0]
            staticcall mem[224].0x70a08231 with:
                    gas gas_remaining wei
                   args mem[192]
            mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
            call _15.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                 gas gas_remaining wei
                args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_3')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_3')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
        else:
            if not -tx.origin + 0x42e1fcf92202d171fbd0ae3171dcc3fa7cf83c18:
                _4 = mem[320]
                _22 = mem[192]
                staticcall mem[224].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                call mem[224].0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[192], ext_call.return_data[0]
                staticcall mem[224].0x70a08231 with:
                        gas gas_remaining wei
                       args mem[192]
                mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
                call _22.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_4')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_4')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
            else:
                if not -tx.origin + 0x6105fead478be719ab74cd5c3a450d948115df3b:
                    _5 = mem[320]
                    _33 = mem[192]
                    staticcall mem[224].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    call mem[224].0xa9059cbb with:
                         gas gas_remaining wei
                        args mem[192], ext_call.return_data[0]
                    staticcall mem[224].0x70a08231 with:
                            gas gas_remaining wei
                           args mem[192]
                    mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
                    call _33.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_5')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_5')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
                else:
                    if not -tx.origin + 0x2db560c2c2bf877ec2e5bead9d7213619a8ef739:
                        _6 = mem[320]
                        _44 = mem[192]
                        staticcall mem[224].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        call mem[224].0xa9059cbb with:
                             gas gas_remaining wei
                            args mem[192], ext_call.return_data[0]
                        staticcall mem[224].0x70a08231 with:
                                gas gas_remaining wei
                               args mem[192]
                        mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
                        call _44.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_6')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_6')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
                    else:
                        require not -tx.origin + 0x88129629254e340d82f0a205eb9a309374aea3df
                        _14 = mem[320]
                        _55 = mem[192]
                        staticcall mem[224].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        call mem[224].0xa9059cbb with:
                             gas gas_remaining wei
                            args mem[192], ext_call.return_data[0]
                        staticcall mem[224].0x70a08231 with:
                                gas gas_remaining wei
                               args mem[192]
                        mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
                        call _55.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 256 * mem[256]) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 256 * mem[256]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 256) - (mem[288] * Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 248 or Mask(8, -(('mask_shl', 256, 0, -3, ('var', '_14')), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('var', '_14')), 0) - 256) + (10000 * mem[288]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
    call mem[128].0x23b872dd with:
         gas gas_remaining wei
        args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, mem[160], mem[352]
    return arg2[all]
}

function sub_40919124(?) payable {
    if -msg.sender + 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef:
        if -msg.sender + 0x8f0b5bb53cb3897cfe28330d4ac3b18674915ea4:
            if -msg.sender + 0x42e1fcf92202d171fbd0ae3171dcc3fa7cf83c18:
                if -msg.sender + 0x6105fead478be719ab74cd5c3a450d948115df3b:
                    if -msg.sender + 0x2db560c2c2bf877ec2e5bead9d7213619a8ef739:
                        require not -msg.sender + 0x88129629254e340d82f0a205eb9a309374aea3df
    staticcall tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.getReserves() with:
            gas gas_remaining wei
    staticcall tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96.getReserves() with:
            gas gas_remaining wei
    if Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 0) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256 == 16:
        if Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 <= ext_call.return_data[0] * ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248):
            staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
            call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                 gas gas_remaining wei
                args ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248), 0, this.address, 128, 256, address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 66)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96, ext_call.return_data[0], ext_call.return_data[32], cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 86)], Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32
            staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                    gas gas_remaining wei
                   args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
            require ext_call.return_data[0] <= ext_call.return_data[0]
    else:
        if not Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 0):
            if Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 <= ext_call.return_data[0] * ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248):
                staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                call address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x23b872dd with:
                     gas gas_remaining wei
                    args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96, Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32
                call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248), 0, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96, 128, 0
                staticcall tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 66)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96.0x70a08231 with:
                        gas gas_remaining wei
                       args (tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96)
                call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) + (10000 * ext_call.return_data[32]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
                staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                        gas gas_remaining wei
                       args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                require ext_call.return_data[0] <= ext_call.return_data[0]
        else:
            if Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 0) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256 == 1:
                if Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 <= ext_call.return_data[0] * ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248):
                    staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                            gas gas_remaining wei
                           args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                    call address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x23b872dd with:
                         gas gas_remaining wei
                        args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96, Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32
                    call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248), 0, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96, 128, 0
                    staticcall tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 66)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96.0x70a08231 with:
                            gas gas_remaining wei
                           args (tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96)
                    call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) + (10000 * ext_call.return_data[32]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
                    staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                            gas gas_remaining wei
                           args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                    require ext_call.return_data[0] <= ext_call.return_data[0]
            else:
                if Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 0) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256 == 17:
                    if Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 <= ext_call.return_data[0] * ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248):
                        staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                                gas gas_remaining wei
                               args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                        call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248), 0, this.address, 128, 256, address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 66)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96, ext_call.return_data[0], ext_call.return_data[32], cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 86)], Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32
                        staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                                gas gas_remaining wei
                               args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                        require ext_call.return_data[0] <= ext_call.return_data[0]
                else:
                    if Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 <= ext_call.return_data[0] * ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248):
                        staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                                gas gas_remaining wei
                               args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                        call address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x23b872dd with:
                             gas gas_remaining wei
                            args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96, Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32
                        call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 26)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0] * Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 / (10000 * ext_call.return_data[32]) + (Mask(256, -8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32, cd[6]) >> 8 * -(Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 32 * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 2) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248), 0, tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96, 128, 0
                        staticcall tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 66)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96.0x70a08231 with:
                                gas gas_remaining wei
                               args (tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96)
                        call tx.origin xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 46)]) >> 96.swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248 * ext_call.return_data[0]) / (ext_call.return_data[0] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) - (ext_call.return_data[32] * Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 4) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 256 or Mask(8, -(('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) + 256, 3) << (('mask_shl', 256, 0, -3, ('cd', ('add', 86, ('mask_shl', 8, ('add', 256, ('mul', -1, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0))), ('add', -256, (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0)), 1)))), 0) - 248) + (10000 * ext_call.return_data[32]), 0, 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef, 128, 0
                        staticcall address(cd[((Mask(8, -(('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) + 256, 1) << (('mask_shl', 256, 0, -3, ('data', ('call.data', 4, 2), ('mem', ('range', 98, 30)))), 0) - 256) + 6)]) >> 96 xor tx.origin.0x70a08231 with:
                                gas gas_remaining wei
                               args 0xf7fd3edfcd7c3c51f01e06557fa18ff7fb46e0ef
                        require ext_call.return_data[0] <= ext_call.return_data[0]
}



}
