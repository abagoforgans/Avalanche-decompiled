contract main {




// =====================  Runtime code  =====================


#
#  - sub_57386225(?)
#  - sub_7b0428d7(?)
#  - initialize(address arg1, uint256 arg2)
#
const getTimeStamp = block.timestamp


address sub_93e5a3a2Address;
uint256 sub_195a7339;
uint256 PERCENTS_DIVIDER;
uint256 sub_c63568c7;
uint256 TAX;
uint256 sub_59eec895;
uint256 sub_3a6cac7f;
uint256 sub_cd329fc3;
uint256 sub_1848b8dc;
uint256 sub_d7206d5d;
uint256 sub_c688f0fb;
uint256 sub_752a2628;
uint256 sub_0420c98e;
uint256 sub_f6f62886;
uint256 totalStaked;
uint256 totalDeposits;
uint256 sub_7db07c9d;
uint256 totalRefBonus;
uint256 totalWithdrawn;
uint256 marketEggs;
uint256 stor21;
uint256 stor22;
uint8 contractStarted;
uint8 sub_b6e6fcf6; offset 8
uint256 stor23; offset 8
mapping of uint8 stor24;
uint256 CUTOFF_STEP;
uint256 sub_950d91e9;
address owner;
address dev1Address;
address dev2Address;
address dev3Address;
address sub_07aeb7f0Address;
address sub_8a315efdAddress;
address sub_7cc5b1e6Address;
mapping of struct myMiners;

function PERCENTS_DIVIDER() payable {
    return PERCENTS_DIVIDER
}

function sub_0420c98e(?) payable {
    return sub_0420c98e
}

function sub_07aeb7f0(?) payable {
    return sub_07aeb7f0Address
}

function getMyMiners() payable {
    return myMiners[msg.sender].field_512
}

function sub_1848b8dc(?) payable {
    return sub_1848b8dc
}

function sub_195a7339(?) payable {
    return sub_195a7339
}

function dev3() payable {
    return dev3Address
}

function marketEggs() payable {
    return marketEggs
}

function contractStarted() payable {
    return bool(contractStarted)
}

function CUTOFF_STEP() payable {
    return CUTOFF_STEP
}

function sub_3a6cac7f(?) payable {
    return sub_3a6cac7f
}

function totalWithdrawn() payable {
    return totalWithdrawn
}

function sub_59eec895(?) payable {
    return sub_59eec895
}

function getUserInfo(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return myMiners[address(arg1)].field_0, 
           myMiners[address(arg1)].field_256,
           myMiners[address(arg1)].field_512,
           myMiners[address(arg1)].field_768,
           myMiners[address(arg1)].field_1024,
           myMiners[address(arg1)].field_1280,
           myMiners[address(arg1)].field_1536,
           myMiners[address(arg1)].field_2048,
           myMiners[address(arg1)].field_1792,
           myMiners[address(arg1)].field_2304,
           myMiners[address(arg1)].field_2560
}

function TAX() payable {
    return TAX
}

function totalRefBonus() payable {
    return totalRefBonus
}

function sub_752a2628(?) payable {
    return sub_752a2628
}

function sub_7cc5b1e6(?) payable {
    return sub_7cc5b1e6Address
}

function totalDeposits() payable {
    return totalDeposits
}

function sub_7db07c9d(?) payable {
    return sub_7db07c9d
}

function dev2() payable {
    return dev2Address
}

function totalStaked() payable {
    return totalStaked
}

function sub_8a315efd(?) payable {
    return sub_8a315efdAddress
}

function owner() payable {
    return owner
}

function sub_93e5a3a2(?) payable {
    return sub_93e5a3a2Address
}

function sub_950d91e9(?) payable {
    return sub_950d91e9
}

function dev1() payable {
    return dev1Address
}

function users(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return myMiners[arg1].field_0, 
           myMiners[arg1].field_256,
           myMiners[arg1].field_512,
           myMiners[arg1].field_768,
           myMiners[arg1].field_1024,
           myMiners[arg1].field_1280,
           myMiners[arg1].field_1536,
           myMiners[arg1].field_1792,
           myMiners[arg1].field_2048,
           myMiners[arg1].field_2304,
           myMiners[arg1].field_2560
}

function sub_b6e6fcf6(?) payable {
    return bool(sub_b6e6fcf6)
}

function sub_c3251b40(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    return bool(stor24[address(arg1)])
}

function sub_c63568c7(?) payable {
    return sub_c63568c7
}

function sub_c688f0fb(?) payable {
    return sub_c688f0fb
}

function sub_cd329fc3(?) payable {
    return sub_cd329fc3
}

function sub_d7206d5d(?) payable {
    return sub_d7206d5d
}

function sub_f6f62886(?) payable {
    return sub_f6f62886
}

function Blacklisted(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor24[arg1])
}

function _fallback() payable {
    revert
}

function getSiteInfo() payable {
    return totalStaked, totalDeposits, sub_7db07c9d, totalRefBonus
}

function sub_e7576943(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    sub_f6f62886 = arg1
}

function sub_298ea310(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 <= 100
    TAX = arg1
}

function sub_7a62ead7(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 <= 50
    sub_59eec895 = arg1
}

function sub_9b9cb69f(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 <= 30
    sub_c688f0fb = arg1
}

function sub_bfa9f304(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 <= 800
    sub_0420c98e = arg1
}

function sub_2b039d0e(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    owner = address(arg1)
}

function sub_66b0154c(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    dev1Address = address(arg1)
}

function sub_7e2150c4(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    dev2Address = address(arg1)
}

function sub_8cb1a04f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    dev3Address = address(arg1)
}

function sub_9e9300a5(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    stor23 = Mask(248, 0, bool(arg1))
}

function sub_570c2979(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 >= 10
    require arg1 <= 100
    sub_c63568c7 = arg1
}

function sub_6f969d28(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 >= 10
    require arg1 <= 900
    sub_d7206d5d = arg1
}

function sub_0d4b511a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    sub_8a315efdAddress = address(arg1)
}

function sub_2fe34915(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    sub_7cc5b1e6Address = address(arg1)
}

function sub_796ed767(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    sub_07aeb7f0Address = address(arg1)
}

function sub_e6dc9558(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 >= 479520
    require arg1 <= 720 * 24 * 3600
    sub_195a7339 = arg1
}

function sub_d989b4b3(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    stor24[address(arg1)] = uint8(bool(arg2))
}

function sub_922a79ae(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only'
    if arg1 > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
        revert with 0, 17
    sub_cd329fc3 = 10^6 * arg1
}

function sub_7ee28e3c(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only'
    require arg1 >= 20
    if arg1 > 0x10c6f7a0b5ed8d36b4c7f34938583621fafc8b0079a2834d26fa3fcc9ea9:
        revert with 0, 17
    sub_1848b8dc = 10^6 * arg1
}

function sub_45a6a6e0(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only'
    require arg1 <= 24
    if 60 * arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    sub_950d91e9 = 3600 * arg1
}

function sub_959c95b3(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    require arg1 <= 24
    if 60 * arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    sub_752a2628 = 3600 * arg1
}

function getBalance() payable {
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_7c8e4b4c(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Admin use only'
    if arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    if 60 * arg1 > 0x444444444444444444444444444444444444444444444444444444444444444:
        revert with 0, 17
    CUTOFF_STEP = 3600 * arg1
}

function sub_eb271268(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] == bool(cd[36])
    if owner != msg.sender:
        revert with 0, 'Admin use only.'
    idx = 0
    while idx < ('cd', 4).length:
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        mem[0] = address(cd[((32 * idx) + cd[4] + 36)])
        mem[32] = 24
        stor24[address(cd[((32 * idx) + cd[4] + 36)])] = uint8(bool(cd[36]))
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_50637dbd(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if not myMiners[address(arg1)].field_2304:
        return 0
    if not myMiners[address(arg1)].field_2304:
        if arg2:
            if arg2 and 0 > -1 / arg2:
                revert with 0, 17
            if not arg2:
                revert with 0, 18
            if 0 / arg2:
                revert with 0, 1
        if not PERCENTS_DIVIDER:
            revert with 0, 18
        return (0 / PERCENTS_DIVIDER)
    if myMiners[address(arg1)].field_2304 and sub_d7206d5d > -1 / myMiners[address(arg1)].field_2304:
        revert with 0, 17
    if not myMiners[address(arg1)].field_2304:
        revert with 0, 18
    if myMiners[address(arg1)].field_2304 * sub_d7206d5d / myMiners[address(arg1)].field_2304 != sub_d7206d5d:
        revert with 0, 1
    if not arg2:
        if not PERCENTS_DIVIDER:
            revert with 0, 18
        return (0 / PERCENTS_DIVIDER)
    if arg2 and myMiners[address(arg1)].field_2304 * sub_d7206d5d > -1 / arg2:
        revert with 0, 17
    if not arg2:
        revert with 0, 18
    if arg2 * myMiners[address(arg1)].field_2304 * sub_d7206d5d / arg2 != myMiners[address(arg1)].field_2304 * sub_d7206d5d:
        revert with 0, 1
    if not PERCENTS_DIVIDER:
        revert with 0, 18
    return (arg2 * myMiners[address(arg1)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)
}

function getEggsSinceLastHatch(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if myMiners[address(arg1)].field_1024 > block.timestamp:
        revert with 0, 1
    if block.timestamp < myMiners[address(arg1)].field_1024:
        revert with 0, 17
    if block.timestamp - myMiners[address(arg1)].field_1024 < CUTOFF_STEP:
        if sub_195a7339 < block.timestamp - myMiners[address(arg1)].field_1024:
            if not sub_195a7339:
                return 0
            if sub_195a7339 and myMiners[address(arg1)].field_512 > -1 / sub_195a7339:
                revert with 0, 17
            if not sub_195a7339:
                revert with 0, 18
            if sub_195a7339 * myMiners[address(arg1)].field_512 / sub_195a7339 != myMiners[address(arg1)].field_512:
                revert with 0, 1
            return (sub_195a7339 * myMiners[address(arg1)].field_512)
        if not block.timestamp - myMiners[address(arg1)].field_1024:
            return 0
        if block.timestamp - myMiners[address(arg1)].field_1024 and myMiners[address(arg1)].field_512 > -1 / block.timestamp - myMiners[address(arg1)].field_1024:
            revert with 0, 17
        if not block.timestamp - myMiners[address(arg1)].field_1024:
            revert with 0, 18
        if (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) / block.timestamp - myMiners[address(arg1)].field_1024 != myMiners[address(arg1)].field_512:
            revert with 0, 1
        return ((block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512))
    if sub_195a7339 < CUTOFF_STEP:
        if not sub_195a7339:
            return 0
        if sub_195a7339 and myMiners[address(arg1)].field_512 > -1 / sub_195a7339:
            revert with 0, 17
        if not sub_195a7339:
            revert with 0, 18
        if sub_195a7339 * myMiners[address(arg1)].field_512 / sub_195a7339 != myMiners[address(arg1)].field_512:
            revert with 0, 1
        return (sub_195a7339 * myMiners[address(arg1)].field_512)
    if not CUTOFF_STEP:
        return 0
    if CUTOFF_STEP and myMiners[address(arg1)].field_512 > -1 / CUTOFF_STEP:
        revert with 0, 17
    if not CUTOFF_STEP:
        revert with 0, 18
    if CUTOFF_STEP * myMiners[address(arg1)].field_512 / CUTOFF_STEP != myMiners[address(arg1)].field_512:
        revert with 0, 1
    return (CUTOFF_STEP * myMiners[address(arg1)].field_512)
}

function calculateTrade(uint256 arg1, uint256 arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (0 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (0 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and arg3 > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * arg3 / stor21 != arg3:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (stor21 * arg3 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (stor21 * arg3 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and arg2 > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * arg2 / stor21 != arg2:
        revert with 0, 1
    if not stor22:
        if stor21 * arg2 > -1:
            revert with 0, 17
        if stor21 * arg2 < stor21 * arg2:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * arg2 / arg1):
            revert with 0, 17
        if stor22 + (stor21 * arg2 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * arg2 / arg1):
            revert with 0, 18
        return (stor21 * arg3 / stor22 + (stor21 * arg2 / arg1))
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * arg2 > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * arg2) + (stor22 * arg1) < stor21 * arg2:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * arg2) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1):
        revert with 0, 18
    return (stor21 * arg3 / stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1))
}

function calculateEggBuy(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (0 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (0 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (stor21 * marketEggs / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1))
    if stor21 and arg2 > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * arg2 / stor21 != arg2:
        revert with 0, 1
    if not stor22:
        if stor21 * arg2 > -1:
            revert with 0, 17
        if stor21 * arg2 < stor21 * arg2:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * arg2 / arg1):
            revert with 0, 17
        if stor22 + (stor21 * arg2 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * arg2 / arg1):
            revert with 0, 18
        return (stor21 * marketEggs / stor22 + (stor21 * arg2 / arg1))
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * arg2 > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * arg2) + (stor22 * arg1) < stor21 * arg2:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * arg2) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1):
        revert with 0, 18
    return (stor21 * marketEggs / stor22 + ((stor21 * arg2) + (stor22 * arg1) / arg1))
}

function calculateEggSell(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (0 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (0 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and ext_call.return_data[0] > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + (stor22 * arg1 / arg1))
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor22:
        if stor21 * marketEggs > -1:
            revert with 0, 17
        if stor21 * marketEggs < stor21 * marketEggs:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * marketEggs / arg1):
            revert with 0, 17
        if stor22 + (stor21 * marketEggs / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * marketEggs / arg1):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / arg1))
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * marketEggs > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * marketEggs) + (stor22 * arg1) < stor21 * marketEggs:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * marketEggs) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1):
        revert with 0, 18
    return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1))
}

function calculateEggBuySimple(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (0 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (0 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (stor21 * marketEggs / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1))
    if stor21 and ext_call.return_data[0] > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
        revert with 0, 1
    if not stor22:
        if stor21 * ext_call.return_data[0] > -1:
            revert with 0, 17
        if stor21 * ext_call.return_data[0] < stor21 * ext_call.return_data[0]:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * ext_call.return_data[0] / arg1):
            revert with 0, 17
        if stor22 + (stor21 * ext_call.return_data[0] / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * ext_call.return_data[0] / arg1):
            revert with 0, 18
        return (stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1))
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * ext_call.return_data[0] > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * ext_call.return_data[0]) + (stor22 * arg1) < stor21 * ext_call.return_data[0]:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1):
        revert with 0, 18
    return (stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1))
}

function sub_cc3e9c78(?) payable {
    require calldata.size - 4 >= 64
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > !arg2:
        revert with 0, 17
    if ext_call.return_data[0] + arg2 < ext_call.return_data[0]:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return (0 / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return (0 / stor22 + (stor22 * arg1 / arg1))
    if stor21 and ext_call.return_data[0] + arg2 > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if (ext_call.return_data[0] * stor21) + (arg2 * stor21) / stor21 != ext_call.return_data[0] + arg2:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            return ((ext_call.return_data[0] * stor21) + (arg2 * stor21) / stor22 + (0 / arg1))
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        return ((ext_call.return_data[0] * stor21) + (arg2 * stor21) / stor22 + (stor22 * arg1 / arg1))
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor22:
        if stor21 * marketEggs > -1:
            revert with 0, 17
        if stor21 * marketEggs < stor21 * marketEggs:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * marketEggs / arg1):
            revert with 0, 17
        if stor22 + (stor21 * marketEggs / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * marketEggs / arg1):
            revert with 0, 18
        return ((ext_call.return_data[0] * stor21) + (arg2 * stor21) / stor22 + (stor21 * marketEggs / arg1))
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * marketEggs > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * marketEggs) + (stor22 * arg1) < stor21 * marketEggs:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * marketEggs) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1):
        revert with 0, 18
    return ((ext_call.return_data[0] * stor21) + (arg2 * stor21) / stor22 + ((stor21 * marketEggs) + (stor22 * arg1) / arg1))
}

function getMyEggs() payable {
    if myMiners[address(msg.sender)].field_1024 > block.timestamp:
        revert with 0, 1
    if block.timestamp < myMiners[address(msg.sender)].field_1024:
        revert with 0, 17
    if block.timestamp - myMiners[address(msg.sender)].field_1024 < CUTOFF_STEP:
        if sub_195a7339 < block.timestamp - myMiners[address(msg.sender)].field_1024:
            if not sub_195a7339:
                if myMiners[msg.sender].field_768 > -1:
                    revert with 0, 17
                if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                    revert with 0, 1
                return myMiners[msg.sender].field_768
            if sub_195a7339 and myMiners[address(msg.sender)].field_512 > -1 / sub_195a7339:
                revert with 0, 17
            if not sub_195a7339:
                revert with 0, 18
            if sub_195a7339 * myMiners[address(msg.sender)].field_512 / sub_195a7339 != myMiners[address(msg.sender)].field_512:
                revert with 0, 1
            if myMiners[msg.sender].field_768 > !(sub_195a7339 * myMiners[address(msg.sender)].field_512):
                revert with 0, 17
            if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
                revert with 0, 1
            return (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
        if not block.timestamp - myMiners[address(msg.sender)].field_1024:
            if myMiners[msg.sender].field_768 > -1:
                revert with 0, 17
            if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                revert with 0, 1
            return myMiners[msg.sender].field_768
        if block.timestamp - myMiners[address(msg.sender)].field_1024 and myMiners[address(msg.sender)].field_512 > -1 / block.timestamp - myMiners[address(msg.sender)].field_1024:
            revert with 0, 17
        if not block.timestamp - myMiners[address(msg.sender)].field_1024:
            revert with 0, 18
        if (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / block.timestamp - myMiners[address(msg.sender)].field_1024 != myMiners[address(msg.sender)].field_512:
            revert with 0, 1
        if myMiners[msg.sender].field_768 > !((block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
            revert with 0, 17
        if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
            revert with 0, 1
        return (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
    if sub_195a7339 < CUTOFF_STEP:
        if not sub_195a7339:
            if myMiners[msg.sender].field_768 > -1:
                revert with 0, 17
            if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                revert with 0, 1
            return myMiners[msg.sender].field_768
        if sub_195a7339 and myMiners[address(msg.sender)].field_512 > -1 / sub_195a7339:
            revert with 0, 17
        if not sub_195a7339:
            revert with 0, 18
        if sub_195a7339 * myMiners[address(msg.sender)].field_512 / sub_195a7339 != myMiners[address(msg.sender)].field_512:
            revert with 0, 1
        if myMiners[msg.sender].field_768 > !(sub_195a7339 * myMiners[address(msg.sender)].field_512):
            revert with 0, 17
        if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
            revert with 0, 1
        return (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
    if not CUTOFF_STEP:
        if myMiners[msg.sender].field_768 > -1:
            revert with 0, 17
        if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
            revert with 0, 1
        return myMiners[msg.sender].field_768
    if CUTOFF_STEP and myMiners[address(msg.sender)].field_512 > -1 / CUTOFF_STEP:
        revert with 0, 17
    if not CUTOFF_STEP:
        revert with 0, 18
    if CUTOFF_STEP * myMiners[address(msg.sender)].field_512 / CUTOFF_STEP != myMiners[address(msg.sender)].field_512:
        revert with 0, 1
    if myMiners[msg.sender].field_768 > !(CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
        revert with 0, 17
    if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
        revert with 0, 1
    return (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
}

function sub_bdd1ca27(?) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > !arg1:
        revert with 0, 17
    if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
        revert with 0, 1
    if arg1 > ext_call.return_data[0] + arg1:
        revert with 0, 1
    if ext_call.return_data[0] + arg1 < arg1:
        revert with 0, 17
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            if not sub_195a7339:
                revert with 0, 18
            if 0 / stor22 + (0 / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                revert with 0, 17
            if 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 != 0 / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 1
            require ext_code.size(sub_93e5a3a2Address)
            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > !arg1:
                revert with 0, 17
            if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                        revert with 0, 18
                    if stor22 > !(0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 17
                    if stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 18
                    return 0 / stor22 + (0 / arg1) / sub_195a7339, 0 / stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
                if stor22 and 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if 24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 1
                if 0 > !(24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if 24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 < 0:
                    revert with 0, 1
                if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return 0 / stor22 + (0 / arg1) / sub_195a7339, 
                       0 / stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
            if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                        revert with 0, 18
                    if stor22 > !(0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 17
                    if stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 18
                    return 0 / stor22 + (0 / arg1) / sub_195a7339, 
                           (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
                if stor22 and 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if 24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 1
                if 0 > !(24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if 24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 < 0:
                    revert with 0, 1
                if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return 0 / stor22 + (0 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
            if stor21 and marketEggs > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * marketEggs / stor21 != marketEggs:
                revert with 0, 1
            if not stor22:
                if stor21 * marketEggs > -1:
                    revert with 0, 17
                if stor21 * marketEggs < stor21 * marketEggs:
                    revert with 0, 1
                if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return 0 / stor22 + (0 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 1
            if stor21 * marketEggs > !(24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 17
            if (stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor21 * marketEggs:
                revert with 0, 1
            if not 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 18
            return 0 / stor22 + (0 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (0 / arg1) / sub_195a7339)
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        if not sub_195a7339:
            revert with 0, 18
        if 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
            revert with 0, 17
        if 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 != 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > !arg1:
            revert with 0, 17
        if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 18
                return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                       0 / stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   0 / stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 18
                return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor22 and 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if 24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 1
        if stor21 * marketEggs > !(24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 17
        if (stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor21 * marketEggs:
            revert with 0, 1
        if not 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 18
        return 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
               (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * 0 / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not arg1:
                revert with 0, 18
            if stor22 > !(0 / arg1):
                revert with 0, 17
            if stor22 + (0 / arg1) < stor22:
                revert with 0, 1
            if not stor22 + (0 / arg1):
                revert with 0, 18
            if not sub_195a7339:
                revert with 0, 18
            if stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                revert with 0, 17
            if 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 != stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 1
            require ext_code.size(sub_93e5a3a2Address)
            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > !arg1:
                revert with 0, 17
            if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                        revert with 0, 18
                    if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 17
                    if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 18
                    return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                           0 / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
                if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 1
                if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 < 0:
                    revert with 0, 1
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                       0 / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
            if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                        revert with 0, 18
                    if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 17
                    if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                        revert with 0, 18
                    return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                           (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
                if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 1
                if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 < 0:
                    revert with 0, 1
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
            if stor21 and marketEggs > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * marketEggs / stor21 != marketEggs:
                revert with 0, 1
            if not stor22:
                if stor21 * marketEggs > -1:
                    revert with 0, 17
                if stor21 * marketEggs < stor21 * marketEggs:
                    revert with 0, 1
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 1
            if stor21 * marketEggs > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 17
            if (stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor21 * marketEggs:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (0 / arg1) / sub_195a7339)
        if stor22 and arg1 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * arg1 / stor22 != arg1:
            revert with 0, 1
        if 0 > !(stor22 * arg1):
            revert with 0, 17
        if stor22 * arg1 < 0:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor22 * arg1 / arg1):
            revert with 0, 17
        if stor22 + (stor22 * arg1 / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor22 * arg1 / arg1):
            revert with 0, 18
        if not sub_195a7339:
            revert with 0, 18
        if stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
            revert with 0, 17
        if 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 != stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > !arg1:
            revert with 0, 17
        if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                       0 / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   0 / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
        if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 1
        if stor21 * marketEggs > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 17
        if (stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor21 * marketEggs:
            revert with 0, 1
        if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339):
            revert with 0, 18
        return stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339, 
               (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor22 * arg1 / arg1) / sub_195a7339)
    if stor21 and ext_call.return_data[0] > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
        revert with 0, 1
    if not stor22:
        if stor21 * ext_call.return_data[0] > -1:
            revert with 0, 17
        if stor21 * ext_call.return_data[0] < stor21 * ext_call.return_data[0]:
            revert with 0, 1
        if not arg1:
            revert with 0, 18
        if stor22 > !(stor21 * ext_call.return_data[0] / arg1):
            revert with 0, 17
        if stor22 + (stor21 * ext_call.return_data[0] / arg1) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * ext_call.return_data[0] / arg1):
            revert with 0, 18
        if not sub_195a7339:
            revert with 0, 18
        if stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
            revert with 0, 17
        if 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 != stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > !arg1:
            revert with 0, 17
        if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
                       0 / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
                   0 / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
        if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                    revert with 0, 18
                if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                    revert with 0, 17
                if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                    revert with 0, 18
                return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
                       (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
            if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                revert with 0, 1
            if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 17
            if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 < 0:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
        if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
            revert with 0, 1
        if stor21 * marketEggs > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
            revert with 0, 17
        if (stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor21 * marketEggs:
            revert with 0, 1
        if not 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339):
            revert with 0, 18
        return stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339, 
               (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + (stor21 * ext_call.return_data[0] / arg1) / sub_195a7339)
    if stor22 and arg1 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if stor22 * arg1 / stor22 != arg1:
        revert with 0, 1
    if stor21 * ext_call.return_data[0] > !(stor22 * arg1):
        revert with 0, 17
    if (stor21 * ext_call.return_data[0]) + (stor22 * arg1) < stor21 * ext_call.return_data[0]:
        revert with 0, 1
    if not arg1:
        revert with 0, 18
    if stor22 > !((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1):
        revert with 0, 17
    if stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1):
        revert with 0, 18
    if not sub_195a7339:
        revert with 0, 18
    if stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
        revert with 0, 17
    if 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 != stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
        revert with 0, 1
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > !arg1:
        revert with 0, 17
    if ext_call.return_data[0] + arg1 < ext_call.return_data[0]:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
                   0 / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
        if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
            revert with 0, 1
        if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 17
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 < 0:
            revert with 0, 1
        if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 18
        return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
               0 / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
    if stor21 and ext_call.return_data[0] + arg1 > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor21 != ext_call.return_data[0] + arg1:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
                revert with 0, 18
            if stor22 > !(0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
                revert with 0, 17
            if stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
                revert with 0, 1
            if not stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
                revert with 0, 18
            return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
                   (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (0 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
        if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
            revert with 0, 1
        if 0 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 17
        if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 < 0:
            revert with 0, 1
        if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 18
        return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
               (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor22:
        if stor21 * marketEggs > -1:
            revert with 0, 17
        if stor21 * marketEggs < stor21 * marketEggs:
            revert with 0, 1
        if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
            revert with 0, 18
        if stor22 > !(stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 17
        if stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
            revert with 0, 18
        return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
               (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + (stor21 * marketEggs / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
    if stor22 and 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if 24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339 / stor22 != 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
        revert with 0, 1
    if stor21 * marketEggs > !(24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
        revert with 0, 17
    if (stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor21 * marketEggs:
        revert with 0, 1
    if not 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339:
        revert with 0, 18
    if stor22 > !((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
        revert with 0, 17
    if stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339):
        revert with 0, 18
    return stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339, 
           (ext_call.return_data[0] * stor21) + (arg1 * stor21) / stor22 + ((stor21 * marketEggs) + (24 * 3600 * stor22 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339) / 24 * 3600 * stor21 * marketEggs / stor22 + ((stor21 * ext_call.return_data[0]) + (stor22 * arg1) / arg1) / sub_195a7339)
}

function sub_64c03a5e(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if myMiners[address(arg1)].field_1024 > block.timestamp:
        revert with 0, 1
    if block.timestamp < myMiners[address(arg1)].field_1024:
        revert with 0, 17
    if block.timestamp - myMiners[address(arg1)].field_1024 < CUTOFF_STEP:
        if sub_195a7339 < block.timestamp - myMiners[address(arg1)].field_1024:
            if not sub_195a7339:
                if myMiners[address(arg1)].field_768 > -1:
                    revert with 0, 17
                if myMiners[address(arg1)].field_768 < myMiners[address(arg1)].field_768:
                    revert with 0, 1
                require ext_code.size(sub_93e5a3a2Address)
                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not stor21:
                    if not stor22:
                        if not myMiners[address(arg1)].field_768:
                            revert with 0, 18
                        if stor22 > !(0 / myMiners[address(arg1)].field_768):
                            revert with 0, 17
                        if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                            revert with 0, 1
                        if not stor22 + (0 / myMiners[address(arg1)].field_768):
                            revert with 0, 18
                        return (0 / stor22 + (0 / myMiners[address(arg1)].field_768))
                    if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                        revert with 0, 17
                    if not stor22:
                        revert with 0, 18
                    if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                        revert with 0, 1
                    if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 * myMiners[address(arg1)].field_768 < 0:
                        revert with 0, 1
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (0 / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
                if stor21 and ext_call.return_data[0] > -1 / stor21:
                    revert with 0, 17
                if not stor21:
                    revert with 0, 18
                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                    revert with 0, 1
                if not stor21:
                    if not stor22:
                        if not myMiners[address(arg1)].field_768:
                            revert with 0, 18
                        if stor22 > !(0 / myMiners[address(arg1)].field_768):
                            revert with 0, 17
                        if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                            revert with 0, 1
                        if not stor22 + (0 / myMiners[address(arg1)].field_768):
                            revert with 0, 18
                        return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768))
                    if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                        revert with 0, 17
                    if not stor22:
                        revert with 0, 18
                    if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                        revert with 0, 1
                    if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 * myMiners[address(arg1)].field_768 < 0:
                        revert with 0, 1
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
                if stor21 and marketEggs > -1 / stor21:
                    revert with 0, 17
                if not stor21:
                    revert with 0, 18
                if stor21 * marketEggs / stor21 != marketEggs:
                    revert with 0, 1
                if not stor22:
                    if stor21 * marketEggs > -1:
                        revert with 0, 17
                    if stor21 * marketEggs < stor21 * marketEggs:
                        revert with 0, 1
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768))
                if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                    revert with 0, 1
                if stor21 * marketEggs > !(stor22 * myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if (stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) < stor21 * marketEggs:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768))
            if sub_195a7339 and myMiners[address(arg1)].field_512 > -1 / sub_195a7339:
                revert with 0, 17
            if not sub_195a7339:
                revert with 0, 18
            if sub_195a7339 * myMiners[address(arg1)].field_512 / sub_195a7339 != myMiners[address(arg1)].field_512:
                revert with 0, 1
            if myMiners[address(arg1)].field_768 > !(sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 17
            if myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) < myMiners[address(arg1)].field_768:
                revert with 0, 1
            require ext_code.size(sub_93e5a3a2Address)
            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                        revert with 0, 18
                    return (0 / stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
                if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 1
                if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
                    revert with 0, 17
                if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (0 / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
            if stor21 and ext_call.return_data[0] > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                        revert with 0, 18
                    return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
                if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 1
                if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
                    revert with 0, 17
                if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
            if stor21 and marketEggs > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * marketEggs / stor21 != marketEggs:
                revert with 0, 1
            if not stor22:
                if stor21 * marketEggs > -1:
                    revert with 0, 17
                if stor21 * marketEggs < stor21 * marketEggs:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
            if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 1
            if stor21 * marketEggs > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
                revert with 0, 17
            if (stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
        if not block.timestamp - myMiners[address(arg1)].field_1024:
            if myMiners[address(arg1)].field_768 > -1:
                revert with 0, 17
            if myMiners[address(arg1)].field_768 < myMiners[address(arg1)].field_768:
                revert with 0, 1
            require ext_code.size(sub_93e5a3a2Address)
            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (0 / stor22 + (0 / myMiners[address(arg1)].field_768))
                if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                    revert with 0, 1
                if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 * myMiners[address(arg1)].field_768 < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (0 / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
            if stor21 and ext_call.return_data[0] > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768))
                if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                    revert with 0, 1
                if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 * myMiners[address(arg1)].field_768 < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
            if stor21 and marketEggs > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * marketEggs / stor21 != marketEggs:
                revert with 0, 1
            if not stor22:
                if stor21 * marketEggs > -1:
                    revert with 0, 17
                if stor21 * marketEggs < stor21 * marketEggs:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768))
            if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                revert with 0, 1
            if stor21 * marketEggs > !(stor22 * myMiners[address(arg1)].field_768):
                revert with 0, 17
            if (stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768:
                revert with 0, 18
            if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768) < stor22:
                revert with 0, 1
            if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768))
        if block.timestamp - myMiners[address(arg1)].field_1024 and myMiners[address(arg1)].field_512 > -1 / block.timestamp - myMiners[address(arg1)].field_1024:
            revert with 0, 17
        if not block.timestamp - myMiners[address(arg1)].field_1024:
            revert with 0, 18
        if (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) / block.timestamp - myMiners[address(arg1)].field_1024 != myMiners[address(arg1)].field_512:
            revert with 0, 1
        if myMiners[address(arg1)].field_768 > !((block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) < myMiners[address(arg1)].field_768:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (0 / stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
            if stor22 and myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                revert with 0, 1
            if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22)):
                revert with 0, 17
            if (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (0 / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
        if stor21 and ext_call.return_data[0] > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
            if stor22 and myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                revert with 0, 1
            if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22)):
                revert with 0, 17
            if (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
        if stor22 and myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512) > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
            revert with 0, 1
        if stor21 * marketEggs > !((myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22)):
            revert with 0, 17
        if (stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) < stor21 * marketEggs:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512):
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (block.timestamp * myMiners[address(arg1)].field_512 * stor22) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (block.timestamp * myMiners[address(arg1)].field_512) - (myMiners[address(arg1)].field_1024 * myMiners[address(arg1)].field_512)))
    if sub_195a7339 < CUTOFF_STEP:
        if not sub_195a7339:
            if myMiners[address(arg1)].field_768 > -1:
                revert with 0, 17
            if myMiners[address(arg1)].field_768 < myMiners[address(arg1)].field_768:
                revert with 0, 1
            require ext_code.size(sub_93e5a3a2Address)
            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (0 / stor22 + (0 / myMiners[address(arg1)].field_768))
                if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                    revert with 0, 1
                if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 * myMiners[address(arg1)].field_768 < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (0 / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
            if stor21 and ext_call.return_data[0] > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                revert with 0, 1
            if not stor21:
                if not stor22:
                    if not myMiners[address(arg1)].field_768:
                        revert with 0, 18
                    if stor22 > !(0 / myMiners[address(arg1)].field_768):
                        revert with 0, 17
                    if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                        revert with 0, 1
                    if not stor22 + (0 / myMiners[address(arg1)].field_768):
                        revert with 0, 18
                    return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768))
                if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                    revert with 0, 17
                if not stor22:
                    revert with 0, 18
                if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                    revert with 0, 1
                if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 * myMiners[address(arg1)].field_768 < 0:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
            if stor21 and marketEggs > -1 / stor21:
                revert with 0, 17
            if not stor21:
                revert with 0, 18
            if stor21 * marketEggs / stor21 != marketEggs:
                revert with 0, 1
            if not stor22:
                if stor21 * marketEggs > -1:
                    revert with 0, 17
                if stor21 * marketEggs < stor21 * marketEggs:
                    revert with 0, 1
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768))
            if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                revert with 0, 1
            if stor21 * marketEggs > !(stor22 * myMiners[address(arg1)].field_768):
                revert with 0, 17
            if (stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768:
                revert with 0, 18
            if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768) < stor22:
                revert with 0, 1
            if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768))
        if sub_195a7339 and myMiners[address(arg1)].field_512 > -1 / sub_195a7339:
            revert with 0, 17
        if not sub_195a7339:
            revert with 0, 18
        if sub_195a7339 * myMiners[address(arg1)].field_512 / sub_195a7339 != myMiners[address(arg1)].field_512:
            revert with 0, 1
        if myMiners[address(arg1)].field_768 > !(sub_195a7339 * myMiners[address(arg1)].field_512):
            revert with 0, 17
        if myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) < myMiners[address(arg1)].field_768:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (0 / stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
            if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 1
            if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
                revert with 0, 17
            if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (0 / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
        if stor21 and ext_call.return_data[0] > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
            if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 1
            if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
                revert with 0, 17
            if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
        if stor22 and myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512) > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
            revert with 0, 1
        if stor21 * marketEggs > !((myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22)):
            revert with 0, 17
        if (stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) < stor21 * marketEggs:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512):
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (sub_195a7339 * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (sub_195a7339 * myMiners[address(arg1)].field_512)))
    if not CUTOFF_STEP:
        if myMiners[address(arg1)].field_768 > -1:
            revert with 0, 17
        if myMiners[address(arg1)].field_768 < myMiners[address(arg1)].field_768:
            revert with 0, 1
        require ext_code.size(sub_93e5a3a2Address)
        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (0 / stor22 + (0 / myMiners[address(arg1)].field_768))
            if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                revert with 0, 1
            if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 * myMiners[address(arg1)].field_768 < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768:
                revert with 0, 18
            if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                revert with 0, 1
            if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                revert with 0, 18
            return (0 / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
        if stor21 and ext_call.return_data[0] > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
            revert with 0, 1
        if not stor21:
            if not stor22:
                if not myMiners[address(arg1)].field_768:
                    revert with 0, 18
                if stor22 > !(0 / myMiners[address(arg1)].field_768):
                    revert with 0, 17
                if stor22 + (0 / myMiners[address(arg1)].field_768) < stor22:
                    revert with 0, 1
                if not stor22 + (0 / myMiners[address(arg1)].field_768):
                    revert with 0, 18
                return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768))
            if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
                revert with 0, 17
            if not stor22:
                revert with 0, 18
            if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
                revert with 0, 1
            if 0 > !(stor22 * myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 * myMiners[address(arg1)].field_768 < 0:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768:
                revert with 0, 18
            if stor22 > !(stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768) < stor22:
                revert with 0, 1
            if not stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[address(arg1)].field_768 / myMiners[address(arg1)].field_768))
        if stor21 and marketEggs > -1 / stor21:
            revert with 0, 17
        if not stor21:
            revert with 0, 18
        if stor21 * marketEggs / stor21 != marketEggs:
            revert with 0, 1
        if not stor22:
            if stor21 * marketEggs > -1:
                revert with 0, 17
            if stor21 * marketEggs < stor21 * marketEggs:
                revert with 0, 1
            if not myMiners[address(arg1)].field_768:
                revert with 0, 18
            if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768):
                revert with 0, 17
            if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768) < stor22:
                revert with 0, 1
            if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768))
        if stor22 and myMiners[address(arg1)].field_768 > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if stor22 * myMiners[address(arg1)].field_768 / stor22 != myMiners[address(arg1)].field_768:
            revert with 0, 1
        if stor21 * marketEggs > !(stor22 * myMiners[address(arg1)].field_768):
            revert with 0, 17
        if (stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) < stor21 * marketEggs:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768:
            revert with 0, 18
        if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
            revert with 0, 17
        if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768) < stor22:
            revert with 0, 1
        if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[address(arg1)].field_768) / myMiners[address(arg1)].field_768))
    if CUTOFF_STEP and myMiners[address(arg1)].field_512 > -1 / CUTOFF_STEP:
        revert with 0, 17
    if not CUTOFF_STEP:
        revert with 0, 18
    if CUTOFF_STEP * myMiners[address(arg1)].field_512 / CUTOFF_STEP != myMiners[address(arg1)].field_512:
        revert with 0, 1
    if myMiners[address(arg1)].field_768 > !(CUTOFF_STEP * myMiners[address(arg1)].field_512):
        revert with 0, 17
    if myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512) < myMiners[address(arg1)].field_768:
        revert with 0, 1
    require ext_code.size(sub_93e5a3a2Address)
    staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not stor21:
        if not stor22:
            if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !(0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (0 / stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
        if stor22 and myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512) > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
            revert with 0, 1
        if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22)):
            revert with 0, 17
        if (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) < 0:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
            revert with 0, 18
        if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
            revert with 0, 1
        if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 18
        return (0 / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
    if stor21 and ext_call.return_data[0] > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
        revert with 0, 1
    if not stor21:
        if not stor22:
            if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
                revert with 0, 18
            if stor22 > !(0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
                revert with 0, 17
            if stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
                revert with 0, 1
            if not stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
                revert with 0, 18
            return (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
        if stor22 and myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512) > -1 / stor22:
            revert with 0, 17
        if not stor22:
            revert with 0, 18
        if (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
            revert with 0, 1
        if 0 > !((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22)):
            revert with 0, 17
        if (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) < 0:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
            revert with 0, 18
        if stor22 > !((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
            revert with 0, 1
        if not stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
    if stor21 and marketEggs > -1 / stor21:
        revert with 0, 17
    if not stor21:
        revert with 0, 18
    if stor21 * marketEggs / stor21 != marketEggs:
        revert with 0, 1
    if not stor22:
        if stor21 * marketEggs > -1:
            revert with 0, 17
        if stor21 * marketEggs < stor21 * marketEggs:
            revert with 0, 1
        if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
            revert with 0, 18
        if stor22 > !(stor21 * marketEggs / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 17
        if stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
            revert with 0, 1
        if not stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
            revert with 0, 18
        return (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
    if stor22 and myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512) > -1 / stor22:
        revert with 0, 17
    if not stor22:
        revert with 0, 18
    if (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / stor22 != myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
        revert with 0, 1
    if stor21 * marketEggs > !((myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22)):
        revert with 0, 17
    if (stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) < stor21 * marketEggs:
        revert with 0, 1
    if not myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512):
        revert with 0, 18
    if stor22 > !((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
        revert with 0, 17
    if stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)) < stor22:
        revert with 0, 1
    if not stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)):
        revert with 0, 18
    return (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[address(arg1)].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(arg1)].field_512 * stor22) / myMiners[address(arg1)].field_768 + (CUTOFF_STEP * myMiners[address(arg1)].field_512)))
}

function sub_18c819d8(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == bool(arg1)
    if not contractStarted:
        revert with 0, 'Contract not yet Started.'
    if myMiners[address(msg.sender)].field_1024 > block.timestamp:
        revert with 0, 1
    if block.timestamp < myMiners[address(msg.sender)].field_1024:
        revert with 0, 17
    if block.timestamp - myMiners[address(msg.sender)].field_1024 < CUTOFF_STEP:
        if sub_195a7339 < block.timestamp - myMiners[address(msg.sender)].field_1024:
            if not sub_195a7339:
                if myMiners[msg.sender].field_768 > -1:
                    revert with 0, 17
                if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 > -1:
                            revert with 0, 17
                        if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                            revert with 0, 1
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                            else:
                                if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 * myMiners[msg.sender].field_768 < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 * myMiners[msg.sender].field_768 < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if stor21 * marketEggs > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768:
                                if myMiners[msg.sender].field_768 and 0 > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768:
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768:
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[msg.sender].field_768 != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 / sub_59eec895
            else:
                if sub_195a7339 and myMiners[address(msg.sender)].field_512 > -1 / sub_195a7339:
                    revert with 0, 17
                if not sub_195a7339:
                    revert with 0, 18
                if sub_195a7339 * myMiners[address(msg.sender)].field_512 / sub_195a7339 != myMiners[address(msg.sender)].field_512:
                    revert with 0, 1
                if myMiners[msg.sender].field_768 > !(sub_195a7339 * myMiners[address(msg.sender)].field_512):
                    revert with 0, 17
                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1:
                            revert with 0, 17
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                                if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) and 0 > -1 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if 0 / PERCENTS_DIVIDER < 0:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if 0 / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895
        else:
            if not block.timestamp - myMiners[address(msg.sender)].field_1024:
                if myMiners[msg.sender].field_768 > -1:
                    revert with 0, 17
                if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 > -1:
                            revert with 0, 17
                        if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                            revert with 0, 1
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                            else:
                                if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 * myMiners[msg.sender].field_768 < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 * myMiners[msg.sender].field_768 < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if stor21 * marketEggs > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768:
                                if myMiners[msg.sender].field_768 and 0 > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768:
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768:
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[msg.sender].field_768 != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 / sub_59eec895
            else:
                if block.timestamp - myMiners[address(msg.sender)].field_1024 and myMiners[address(msg.sender)].field_512 > -1 / block.timestamp - myMiners[address(msg.sender)].field_1024:
                    revert with 0, 17
                if not block.timestamp - myMiners[address(msg.sender)].field_1024:
                    revert with 0, 18
                if (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / block.timestamp - myMiners[address(msg.sender)].field_1024 != myMiners[address(msg.sender)].field_512:
                    revert with 0, 1
                if myMiners[msg.sender].field_768 > !((block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                    revert with 0, 17
                if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > -1:
                            revert with 0, 17
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                                if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22)):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512))
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) and 0 > -1 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if 0 / PERCENTS_DIVIDER < 0:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if 0 / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) > !((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (block.timestamp * myMiners[address(msg.sender)].field_512 * stor22) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (block.timestamp * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 + (block.timestamp * myMiners[address(msg.sender)].field_512) - (myMiners[address(msg.sender)].field_1024 * myMiners[address(msg.sender)].field_512) / sub_59eec895
    else:
        if sub_195a7339 < CUTOFF_STEP:
            if not sub_195a7339:
                if myMiners[msg.sender].field_768 > -1:
                    revert with 0, 17
                if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 > -1:
                            revert with 0, 17
                        if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                            revert with 0, 1
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                            else:
                                if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 * myMiners[msg.sender].field_768 < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 * myMiners[msg.sender].field_768 < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if stor21 * marketEggs > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768:
                                if myMiners[msg.sender].field_768 and 0 > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768:
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768:
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[msg.sender].field_768 != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 / sub_59eec895
            else:
                if sub_195a7339 and myMiners[address(msg.sender)].field_512 > -1 / sub_195a7339:
                    revert with 0, 17
                if not sub_195a7339:
                    revert with 0, 18
                if sub_195a7339 * myMiners[address(msg.sender)].field_512 / sub_195a7339 != myMiners[address(msg.sender)].field_512:
                    revert with 0, 1
                if myMiners[msg.sender].field_768 > !(sub_195a7339 * myMiners[address(msg.sender)].field_512):
                    revert with 0, 17
                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1:
                            revert with 0, 17
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                                if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512))
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) and 0 > -1 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if 0 / PERCENTS_DIVIDER < 0:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if 0 / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) > !((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (sub_195a7339 * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 + (sub_195a7339 * myMiners[address(msg.sender)].field_512) / sub_59eec895
        else:
            if not CUTOFF_STEP:
                if myMiners[msg.sender].field_768 > -1:
                    revert with 0, 17
                if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 > -1:
                            revert with 0, 17
                        if myMiners[msg.sender].field_768 < myMiners[msg.sender].field_768:
                            revert with 0, 1
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768)
                            else:
                                if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 * myMiners[msg.sender].field_768 < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 17
                                if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                    revert with 0, 1
                                if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                if sub_7db07c9d > !(0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if 0 > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 * myMiners[msg.sender].field_768 < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor22 * myMiners[msg.sender].field_768 / myMiners[msg.sender].field_768)
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768)
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if stor22 * myMiners[msg.sender].field_768 / stor22 != myMiners[msg.sender].field_768:
                                        revert with 0, 1
                                    if stor21 * marketEggs > !(stor22 * myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768:
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (stor22 * myMiners[msg.sender].field_768) / myMiners[msg.sender].field_768)
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768:
                                if myMiners[msg.sender].field_768 and 0 > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768:
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768:
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768:
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[msg.sender].field_768 != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 > !(myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) < myMiners[msg.sender].field_768:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 / sub_59eec895
            else:
                if CUTOFF_STEP and myMiners[address(msg.sender)].field_512 > -1 / CUTOFF_STEP:
                    revert with 0, 17
                if not CUTOFF_STEP:
                    revert with 0, 18
                if CUTOFF_STEP * myMiners[address(msg.sender)].field_512 / CUTOFF_STEP != myMiners[address(msg.sender)].field_512:
                    revert with 0, 1
                if myMiners[msg.sender].field_768 > !(CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                    revert with 0, 17
                if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) < myMiners[msg.sender].field_768:
                    revert with 0, 1
                if not arg1:
                    if myMiners[msg.sender].field_1024 > block.timestamp:
                        revert with 0, 1
                    if block.timestamp < myMiners[msg.sender].field_1024:
                        revert with 0, 17
                    if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                        if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                            if myMiners[msg.sender].field_2304 > -2:
                                revert with 0, 17
                            if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                revert with 0, 1
                            myMiners[msg.sender].field_2304++
                    if not sub_195a7339:
                        revert with 0, 18
                    if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                        revert with 0, 17
                    if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                        revert with 0, 1
                    myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339
                else:
                    if not myMiners[address(msg.sender)].field_2304:
                        if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > -1:
                            revert with 0, 17
                        require ext_code.size(sub_93e5a3a2Address)
                        staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not stor21:
                            if not stor22:
                                if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                    revert with 0, 17
                                if not stor22:
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                                if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22)):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                    revert with 0, 1
                                if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 17
                                if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                    revert with 0, 1
                                if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                    revert with 0, 18
                                if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                    revert with 0, 1
                                myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                    revert with 0, 17
                                if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                    revert with 0, 1
                                sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                        else:
                            if stor21 and ext_call.return_data[0] > -1 / stor21:
                                revert with 0, 17
                            if not stor21:
                                revert with 0, 18
                            if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                revert with 0, 1
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                            else:
                                if stor21 and marketEggs > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * marketEggs / stor21 != marketEggs:
                                    revert with 0, 1
                                if not stor22:
                                    if stor21 * marketEggs > -1:
                                        revert with 0, 17
                                    if stor21 * marketEggs < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 1
                                    if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22)):
                                        revert with 0, 17
                                    if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) < stor21 * marketEggs:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                        revert with 0, 18
                                    if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 17
                                    if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                                    if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512))
                        if myMiners[msg.sender].field_1024 > block.timestamp:
                            revert with 0, 1
                        if block.timestamp < myMiners[msg.sender].field_1024:
                            revert with 0, 17
                        if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                            if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                if myMiners[msg.sender].field_2304 > -2:
                                    revert with 0, 17
                                if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                    revert with 0, 1
                                myMiners[msg.sender].field_2304++
                        if not sub_195a7339:
                            revert with 0, 18
                        if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339):
                            revert with 0, 17
                        if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339) < myMiners[msg.sender].field_512:
                            revert with 0, 1
                        myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_195a7339
                    else:
                        if not myMiners[address(msg.sender)].field_2304:
                            if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) and 0 > -1 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if 0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 1
                            if not PERCENTS_DIVIDER:
                                revert with 0, 18
                            if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                revert with 0, 17
                            if 0 / PERCENTS_DIVIDER < 0:
                                revert with 0, 1
                            require ext_code.size(sub_93e5a3a2Address)
                            staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not stor21:
                                if not stor22:
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                        revert with 0, 17
                                    if not stor22:
                                        revert with 0, 18
                                    if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 1
                                    if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                        revert with 0, 17
                                    if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                        revert with 0, 1
                                    if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                        revert with 0, 18
                                    if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 17
                                    if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                        revert with 0, 1
                                    if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                        revert with 0, 18
                                    if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                        revert with 0, 17
                                    if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                        revert with 0, 1
                                    sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            else:
                                if stor21 and ext_call.return_data[0] > -1 / stor21:
                                    revert with 0, 17
                                if not stor21:
                                    revert with 0, 18
                                if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                    revert with 0, 1
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and marketEggs > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * marketEggs / stor21 != marketEggs:
                                        revert with 0, 1
                                    if not stor22:
                                        if stor21 * marketEggs > -1:
                                            revert with 0, 17
                                        if stor21 * marketEggs < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                            if myMiners[msg.sender].field_1024 > block.timestamp:
                                revert with 0, 1
                            if block.timestamp < myMiners[msg.sender].field_1024:
                                revert with 0, 17
                            if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                    if myMiners[msg.sender].field_2304 > -2:
                                        revert with 0, 17
                                    if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                        revert with 0, 1
                                    myMiners[msg.sender].field_2304++
                            if not sub_195a7339:
                                revert with 0, 18
                            if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                revert with 0, 17
                            if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                revert with 0, 1
                            myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                        else:
                            if myMiners[address(msg.sender)].field_2304 and sub_d7206d5d > -1 / myMiners[address(msg.sender)].field_2304:
                                revert with 0, 17
                            if not myMiners[address(msg.sender)].field_2304:
                                revert with 0, 18
                            if myMiners[address(msg.sender)].field_2304 * sub_d7206d5d / myMiners[address(msg.sender)].field_2304 != sub_d7206d5d:
                                revert with 0, 1
                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > !(0 / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if 0 / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + (0 / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + (0 / PERCENTS_DIVIDER) / sub_195a7339
                            else:
                                if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) and myMiners[address(msg.sender)].field_2304 * sub_d7206d5d > -1 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512):
                                    revert with 0, 18
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) != myMiners[address(msg.sender)].field_2304 * sub_d7206d5d:
                                    revert with 0, 1
                                if not PERCENTS_DIVIDER:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) > !((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                    revert with 0, 17
                                if (myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER < 0:
                                    revert with 0, 1
                                require ext_code.size(sub_93e5a3a2Address)
                                staticcall sub_93e5a3a2Address.balanceOf(address arg1) with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not stor21:
                                    if not stor22:
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                            revert with 0, 17
                                        if not stor22:
                                            revert with 0, 18
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 1
                                        if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                            revert with 0, 17
                                        if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                            revert with 0, 1
                                        if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                            revert with 0, 18
                                        if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 17
                                        if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                            revert with 0, 1
                                        if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                            revert with 0, 18
                                        if myMiners[msg.sender].field_256 > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_256 + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_256 += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        if sub_7db07c9d > !(0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                            revert with 0, 17
                                        if sub_7db07c9d + (0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                            revert with 0, 1
                                        sub_7db07c9d += 0 / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                else:
                                    if stor21 and ext_call.return_data[0] > -1 / stor21:
                                        revert with 0, 17
                                    if not stor21:
                                        revert with 0, 18
                                    if stor21 * ext_call.return_data[0] / stor21 != ext_call.return_data[0]:
                                        revert with 0, 1
                                    if not stor21:
                                        if not stor22:
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (0 / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if 0 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < 0:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                    else:
                                        if stor21 and marketEggs > -1 / stor21:
                                            revert with 0, 17
                                        if not stor21:
                                            revert with 0, 18
                                        if stor21 * marketEggs / stor21 != marketEggs:
                                            revert with 0, 1
                                        if not stor22:
                                            if stor21 * marketEggs > -1:
                                                revert with 0, 17
                                            if stor21 * marketEggs < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !(stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + (stor21 * marketEggs / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                        else:
                                            if stor22 and myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) > -1 / stor22:
                                                revert with 0, 17
                                            if not stor22:
                                                revert with 0, 18
                                            if (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / stor22 != myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 1
                                            if stor21 * marketEggs > !((myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22)):
                                                revert with 0, 17
                                            if (stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) < stor21 * marketEggs:
                                                revert with 0, 1
                                            if not myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER):
                                                revert with 0, 18
                                            if stor22 > !((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 17
                                            if stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)) < stor22:
                                                revert with 0, 1
                                            if not stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER)):
                                                revert with 0, 18
                                            if myMiners[msg.sender].field_256 > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if myMiners[msg.sender].field_256 + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < myMiners[msg.sender].field_256:
                                                revert with 0, 1
                                            myMiners[msg.sender].field_256 += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                            if sub_7db07c9d > !(stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))):
                                                revert with 0, 17
                                            if sub_7db07c9d + (stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))) < sub_7db07c9d:
                                                revert with 0, 1
                                            sub_7db07c9d += stor21 * ext_call.return_data[0] / stor22 + ((stor21 * marketEggs) + (myMiners[msg.sender].field_768 * stor22) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * stor22) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER * stor22) / myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER))
                                if myMiners[msg.sender].field_1024 > block.timestamp:
                                    revert with 0, 1
                                if block.timestamp < myMiners[msg.sender].field_1024:
                                    revert with 0, 17
                                if block.timestamp - myMiners[msg.sender].field_1024 >= sub_752a2628:
                                    if myMiners[msg.sender].field_2304 < sub_c688f0fb:
                                        if myMiners[msg.sender].field_2304 > -2:
                                            revert with 0, 17
                                        if myMiners[msg.sender].field_2304 + 1 < myMiners[msg.sender].field_2304:
                                            revert with 0, 1
                                        myMiners[msg.sender].field_2304++
                                if not sub_195a7339:
                                    revert with 0, 18
                                if myMiners[msg.sender].field_512 > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339):
                                    revert with 0, 17
                                if myMiners[msg.sender].field_512 + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339) < myMiners[msg.sender].field_512:
                                    revert with 0, 1
                                myMiners[msg.sender].field_512 += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) + ((myMiners[msg.sender].field_768 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512 * myMiners[address(msg.sender)].field_2304 * sub_d7206d5d) / PERCENTS_DIVIDER) / sub_195a7339
                myMiners[msg.sender].field_768 = 0
                myMiners[msg.sender].field_1024 = block.timestamp
                if not sub_59eec895:
                    revert with 0, 18
                if marketEggs > !(myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_59eec895):
                    revert with 0, 17
                if marketEggs + (myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_59eec895) < marketEggs:
                    revert with 0, 1
                marketEggs += myMiners[msg.sender].field_768 + (CUTOFF_STEP * myMiners[address(msg.sender)].field_512) / sub_59eec895
}



}
