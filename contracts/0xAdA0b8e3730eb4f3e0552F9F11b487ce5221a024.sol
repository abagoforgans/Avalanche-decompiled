contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1, uint256 arg2)
#  - depositAll(uint256 arg1)
#
const approvalDelay = 0


address owner;
uint256 stor1;
mapping of struct sub_ad6f0229;
array of uint32 strategies;
array of uint256 sub_6d60c323;
array of uint256 sub_dd69cf6b;
address rewardAddress;
mapping of uint32 sub_bd8221ef;
address stor8;
uint256 stor9;

function reward() payable {
    return rewardAddress
}

function sub_6319a0ab(?) payable {
    require calldata.size - 4 >= 32
    return address(sub_bd8221ef[arg1])
}

function sub_6d60c323(?) payable {
    require calldata.size - 4 >= 32
    return sub_6d60c323[arg1]
}

function owner() payable {
    return owner
}

function sub_ad6f0229(?) payable {
    require calldata.size - 4 >= 64
    return sub_ad6f0229[address(arg2)][arg1].field_256
}

function sub_b56bbfd1(?) payable {
    require calldata.size - 4 >= 64
    return sub_ad6f0229[address(arg2)][arg1].field_0
}

function sub_bd8221ef(?) payable {
    require calldata.size - 4 >= 32
    return address(sub_bd8221ef[arg1])
}

function strategies(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    return address(strategies[arg1])
}

function sub_dd69cf6b(?) payable {
    require calldata.size - 4 >= 64
    require arg2 < sub_dd69cf6b[arg1]
    return sub_dd69cf6b[arg1][arg2]
}

function sub_e8e2220c(?) payable {
    require calldata.size - 4 >= 64
    require arg2 < sub_6d60c323[arg1]
    return sub_6d60c323[arg1][arg2]
}

function _fallback() payable {
    revert
}

function stratCandidate() payable {
    return stor8, stor9
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function addStrategy(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    strategies.length++
    address(strategies[strategies.length]) = arg1
}

function sub_e84776fe(?) payable {
    require ext_code.size(rewardAddress)
    staticcall rewardAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_4db523bb(?) payable {
    require calldata.size - 4 >= 64
    require ext_code.size(address(sub_bd8221ef[arg1]))
    staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function harvest(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if tx.origin != msg.sender:
        revert with 0, '!EOA'
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    call address(strategies[arg1]).0x4641257d with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_4c70be6b(?) payable {
    require calldata.size - 4 >= 64
    require ext_code.size(address(sub_bd8221ef[arg1]))
    staticcall address(sub_bd8221ef[arg1]).rewards(address rg1) with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_1c7dd52a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0x722713f7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_a968179f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0xb6897559 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return bool(ext_call.return_data[0])
}

function sub_1b04bbcc(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[12 len 20]
}

function sub_c5a1f257(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require arg2 < strategies.length
    require ext_code.size(address(strategies[arg2]))
    call address(strategies[arg2]).0xd8b8e99e with:
         gas gas_remaining wei
        args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_78f6babd(?) payable {
    require calldata.size - 4 >= 96
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require arg3 < strategies.length
    require ext_code.size(address(strategies[arg3]))
    call address(strategies[arg3]).0xd8b8e99e with:
         gas gas_remaining wei
        args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    address(sub_bd8221ef[arg3]) = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0xfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function harvestAll() payable {
    if tx.origin != msg.sender:
        revert with 0, '!EOA'
    idx = 0
    while idx < strategies.length:
        if tx.origin != msg.sender:
            revert with 0, '!EOA'
        require idx < strategies.length
        mem[0] = 3
        mem[96] = 0x4641257d00000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(strategies[idx]))
        call address(strategies[idx]).0x4641257d with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
}

function depositRewards(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 < strategies.length
    if address(strategies[arg1]) != msg.sender:
        revert with 0, '!strategy'
    sub_6d60c323[arg1]++
    sub_6d60c323[arg1][sub_6d60c323[arg1]] = arg2
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0x722713f7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    sub_dd69cf6b[arg1]++
    sub_dd69cf6b[arg1][sub_dd69cf6b[arg1]] = ext_call.return_data[0]
}

function available(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function proposeStrat(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0xfbfa77cf with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[12 len 20] != this.address:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x7350726f706f73616c206e6f742076616c696420666f722074686973205661756c,
                    mem[197 len 31]
    stor8 = arg1
    stor9 = block.timestamp
    emit NewStratCandidate(arg1);
}

function sub_415e699b(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0x722713f7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
        revert with 0, 'SafeMath: addition overflow'
    return (2 * ext_call.return_data[0])
}

function sub_0b99a32c(?) payable {
    require calldata.size - 4 >= 32
    idx = 0
    s = 0
    while idx < strategies.length:
        mem[0] = 3
        require ext_code.size(address(strategies[idx]))
        staticcall address(strategies[idx]).0xb6897559 with:
                gas gas_remaining wei
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 7
        mem[100] = arg1
        require ext_code.size(address(sub_bd8221ef[idx]))
        staticcall address(sub_bd8221ef[idx]).rewards(address rg1) with:
                gas gas_remaining wei
               args arg1
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if s + ext_call.return_data[0] < s:
            revert with 0, 'SafeMath: addition overflow'
        idx = idx + 1
        s = s + ext_call.return_data[0]
        continue 
    return 0
}

function inCaseTokensGetStuck(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < strategies.length:
        mem[0] = 3
        require ext_code.size(address(strategies[idx]))
        staticcall address(strategies[idx]).lpToken() with:
                gas gas_remaining wei
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg1 == ext_call.return_data[12 len 20]:
            revert with 0, '!token'
        idx = idx + 1
        continue 
    if arg1 == rewardAddress:
        revert with 0, '!reward'
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_code.size(arg1) <= 0:
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
    call arg1 with:
       funct uint32(msg.sender)
         gas gas_remaining wei
        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function claimable(uint256 arg1, address arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    mem[0] = arg1
    mem[32] = 5
    idx = sub_ad6f0229[address(arg2)][arg1].field_0
    s = 0
    while idx < sub_dd69cf6b[arg1]:
        require idx < sub_6d60c323[arg1]
        mem[32] = 5
        require idx < sub_dd69cf6b[arg1]
        mem[0] = sha3(arg1, 5)
        if not sub_dd69cf6b[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_6d60c323[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_ad6f0229[address(arg2)][arg1].field_256:
            _65 = mem[64]
            mem[64] = mem[64] + 64
            mem[_65] = 26
            mem[_65 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[arg1][idx] > 0:
                require sub_dd69cf6b[arg1][idx]
                if s + (0 / sub_dd69cf6b[arg1][idx]) < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s + (0 / sub_dd69cf6b[arg1][idx])
                continue 
            _67 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            idx = 0
            while idx < 26:
                mem[_67 + idx + 68] = mem[_65 + idx + 32]
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 32
                continue 
            mem[_67 + 68] = mem[_67 + 74 len 26]
            revert with memory
              from mem[64]
               len _67 + -mem[64] + 100
        require sub_ad6f0229[address(arg2)][arg1].field_256
        if sub_ad6f0229[address(arg2)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_ad6f0229[address(arg2)][arg1].field_256 != sub_6d60c323[arg1][idx]:
            revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
        _66 = mem[64]
        mem[64] = mem[64] + 64
        mem[_66] = 26
        mem[_66 + 32] = 'SafeMath: division by zero'
        if sub_dd69cf6b[arg1][idx] > 0:
            require sub_dd69cf6b[arg1][idx]
            if s + (sub_ad6f0229[address(arg2)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx]) < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s + (sub_ad6f0229[address(arg2)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx])
            continue 
        _72 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        mem[mem[64] + 36] = 26
        idx = 0
        while idx < 26:
            mem[_72 + idx + 68] = mem[_66 + idx + 32]
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 32
            continue 
        mem[_72 + 68] = mem[_72 + 74 len 26]
        revert with memory
          from mem[64]
           len _72 + -mem[64] + 100
    require ext_code.size(rewardAddress)
    staticcall rewardAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if s <= ext_call.return_data[0]:
        return s
    require ext_code.size(rewardAddress)
    staticcall rewardAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function getAllClaimable(address arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    idx = 0
    s = 0
    while idx < strategies.length:
        mem[0] = idx
        mem[32] = 5
        t = sub_ad6f0229[address(arg1)][idx].field_0
        u = 0
        while t < sub_dd69cf6b[idx]:
            require t < sub_6d60c323[idx]
            mem[32] = 5
            require t < sub_dd69cf6b[idx]
            mem[0] = sha3(idx, 5)
            if not sub_dd69cf6b[idx][t]:
                if u < u:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = idx
                mem[32] = 5
                t = t + 1
                u = u
                continue 
            if not sub_6d60c323[idx][t]:
                if u < u:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = idx
                mem[32] = 5
                t = t + 1
                u = u
                continue 
            if not sub_ad6f0229[address(arg1)][idx].field_256:
                _110 = mem[64]
                mem[64] = mem[64] + 64
                mem[_110] = 26
                mem[_110 + 32] = 'SafeMath: division by zero'
                if sub_dd69cf6b[idx][t] > 0:
                    require sub_dd69cf6b[idx][t]
                    if u + (0 / sub_dd69cf6b[idx][t]) < u:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[0] = idx
                    mem[32] = 5
                    t = t + 1
                    u = u + (0 / sub_dd69cf6b[idx][t])
                    continue 
                _112 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                mem[mem[64] + 36] = 26
                s = 0
                while s < 26:
                    mem[_112 + s + 68] = mem[_110 + s + 32]
                    mem[0] = s + 32
                    mem[32] = 5
                    s = s + 32
                    continue 
                mem[_112 + 68] = mem[_112 + 74 len 26]
                revert with memory
                  from mem[64]
                   len _112 + -mem[64] + 100
            require sub_ad6f0229[address(arg1)][idx].field_256
            if sub_ad6f0229[address(arg1)][idx].field_256 * sub_6d60c323[idx][t] / sub_ad6f0229[address(arg1)][idx].field_256 != sub_6d60c323[idx][t]:
                revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _111 = mem[64]
            mem[64] = mem[64] + 64
            mem[_111] = 26
            mem[_111 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[idx][t] > 0:
                require sub_dd69cf6b[idx][t]
                if u + (sub_ad6f0229[address(arg1)][idx].field_256 * sub_6d60c323[idx][t] / sub_dd69cf6b[idx][t]) < u:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = idx
                mem[32] = 5
                t = t + 1
                u = u + (sub_ad6f0229[address(arg1)][idx].field_256 * sub_6d60c323[idx][t] / sub_dd69cf6b[idx][t])
                continue 
            _115 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            s = 0
            while s < 26:
                mem[_115 + s + 68] = mem[_111 + s + 32]
                mem[0] = idx
                mem[32] = 5
                s = s + 32
                continue 
            mem[_115 + 68] = mem[_115 + 74 len 26]
            revert with memory
              from mem[64]
               len _115 + -mem[64] + 100
        mem[mem[64] + 4] = this.address
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if u <= ext_call.return_data[0]:
            if s + u < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = s + u
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if s + ext_call.return_data[0] < s:
            revert with 0, 'SafeMath: addition overflow'
        idx = idx + 1
        s = s + ext_call.return_data[0]
        continue 
    return 0
}

function earn(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0xb6897559 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_code.size(address(ext_call.return_data[0])) <= 0:
        revert with 0, 'Address: call to non-contract'
    if ext_call.return_data[0]:
        mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
        mem[324 len 0] = 0
        call address(ext_call.return_data[0]) with:
           funct uint32(sub_bd8221ef[arg1])
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0]
            if not unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]):
                revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
        require ext_code.size(address(sub_bd8221ef[arg1]))
        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
             gas gas_remaining wei
            args ext_call.return_data[0], msg.sender
    else:
        mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
        mem[324 len 0] = 0
        call address(ext_call.return_data[0]) with:
           funct uint32(strategies[arg1])
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0]
            if not unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]):
                revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
        require arg1 < strategies.length
        require ext_code.size(address(strategies[arg1]))
        call address(strategies[arg1]).0xd0e30db0 with:
             gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function emergencyWithdraw(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if sub_ad6f0229[address(msg.sender)][arg1].field_256 < arg2:
        revert with 0, 'Not enough deposited'
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0xb6897559 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require arg1 < strategies.length
        require ext_code.size(address(strategies[arg1]))
        call address(strategies[arg1]).0x2e1a7d4d with:
             gas gas_remaining wei
            args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require arg1 < strategies.length
        require ext_code.size(address(strategies[arg1]))
        staticcall address(strategies[arg1]).lpToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_code.size(address(ext_call.return_data[0])) <= 0:
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, arg2) >> 32
        mem[324 len 0] = 0
    else:
        require ext_code.size(address(sub_bd8221ef[arg1]))
        staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] <= 0:
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            call address(strategies[arg1]).0x2e1a7d4d with:
                 gas gas_remaining wei
                args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).lpToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, arg2) >> 32
        else:
            require ext_code.size(address(sub_bd8221ef[arg1]))
            call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                 gas gas_remaining wei
                args arg2, msg.sender
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).lpToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, arg2) >> 32
            mem[324 len 0] = 0
    call address(ext_call.return_data[0]) with:
       funct uint32(msg.sender)
         gas gas_remaining wei
        args Mask(224, 32, arg2) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), msg.sender, arg2
        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size > 0:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
    if arg2 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
        revert with 0, 'Can't withdraw from vault'
    sub_ad6f0229[address(msg.sender)][arg1].field_256 -= arg2
    emit Withdraw(msg.sender, arg2);
}

function sub_60f03973(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not stor8:
        revert with 0, 'There is no candidate'
    if stor9 < stor9:
        revert with 0, 'SafeMath: addition overflow'
    if stor9 >= block.timestamp:
        revert with 0, 'Delay has not passed'
    emit UpgradeStrat(stor8);
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    call address(strategies[arg1]).0xfb617787 with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require arg1 < strategies.length
    address(strategies[arg1]) = stor8
    stor8 = 0
    stor9 = 5 * 10^9
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0xb6897559 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).lpToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_code.size(address(ext_call.return_data[0])) <= 0:
        revert with 0, 'Address: call to non-contract'
    if ext_call.return_data[0]:
        mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
        mem[324 len 0] = 0
        call address(ext_call.return_data[0]) with:
           funct uint32(sub_bd8221ef[arg1])
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0]
            if not unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]):
                revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
        require ext_code.size(address(sub_bd8221ef[arg1]))
        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
             gas gas_remaining wei
            args ext_call.return_data[0], msg.sender
    else:
        mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
        mem[324 len 0] = 0
        call address(ext_call.return_data[0]) with:
           funct uint32(strategies[arg1])
             gas gas_remaining wei
            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0]
            if not unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]):
                revert with 0, 32, 42, 0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
        else:
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
        require arg1 < strategies.length
        require ext_code.size(address(strategies[arg1]))
        call address(strategies[arg1]).0xd0e30db0 with:
             gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function claim(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    mem[0] = arg1
    mem[32] = 5
    idx = sub_ad6f0229[address(msg.sender)][arg1].field_0
    s = 0
    while idx < sub_dd69cf6b[arg1]:
        require idx < sub_6d60c323[arg1]
        mem[32] = 5
        require idx < sub_dd69cf6b[arg1]
        mem[0] = sha3(arg1, 5)
        if not sub_dd69cf6b[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_6d60c323[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_ad6f0229[address(msg.sender)][arg1].field_256:
            _233 = mem[64]
            mem[64] = mem[64] + 64
            mem[_233] = 26
            mem[_233 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[arg1][idx] > 0:
                require sub_dd69cf6b[arg1][idx]
                if s + (0 / sub_dd69cf6b[arg1][idx]) < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s + (0 / sub_dd69cf6b[arg1][idx])
                continue 
            _235 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            idx = 0
            while idx < 26:
                mem[_235 + idx + 68] = mem[_233 + idx + 32]
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 32
                continue 
            mem[_235 + 68] = mem[_235 + 74 len 26]
            revert with memory
              from mem[64]
               len _235 + -mem[64] + 100
        require sub_ad6f0229[address(msg.sender)][arg1].field_256
        if sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_ad6f0229[address(msg.sender)][arg1].field_256 != sub_6d60c323[arg1][idx]:
            revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
        _234 = mem[64]
        mem[64] = mem[64] + 64
        mem[_234] = 26
        mem[_234 + 32] = 'SafeMath: division by zero'
        if sub_dd69cf6b[arg1][idx] > 0:
            require sub_dd69cf6b[arg1][idx]
            if s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx]) < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx])
            continue 
        _245 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        mem[mem[64] + 36] = 26
        idx = 0
        while idx < 26:
            mem[_245 + idx + 68] = mem[_234 + idx + 32]
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 32
            continue 
        mem[_245 + 68] = mem[_245 + 74 len 26]
        revert with memory
          from mem[64]
           len _245 + -mem[64] + 100
    require ext_code.size(rewardAddress)
    staticcall rewardAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if s <= ext_call.return_data[0]:
        _225 = mem[64]
        mem[mem[64] + 36] = msg.sender
        mem[mem[64] + 68] = s
        _226 = mem[64]
        mem[mem[64]] = 68
        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
        mem[64] = mem[64] + 164
        mem[_225 + 100] = 32
        mem[_225 + 132] = 'SafeERC20: low-level call failed'
        if ext_code.size(rewardAddress) <= 0:
            revert with 0, 'Address: call to non-contract'
        _239 = mem[_226]
        mem[_225 + 164 len floor32(mem[_226])] = mem[_226 + 32 len floor32(mem[_226])]
        mem[_225 + floor32(mem[_226]) + -(mem[_226] % 32) + 196 len mem[_226] % 32] = mem[_226 + floor32(mem[_226]) + -(mem[_226] % 32) + 64 len mem[_226] % 32]
        call rewardAddress with:
             gas gas_remaining wei
            args mem[_225 + 168 len _239 - 4]
        if not return_data.size:
            if not ext_call.success:
                if mem[96] > 0:
                    revert with memory
                      from 128
                       len mem[96]
                revert with 0, 'SafeERC20: low-level call failed'
            if mem[96] > 0:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_225 + 274 len 22]
        else:
            mem[_225 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[_225 + 196]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_225 + ceil32(return_data.size) + 275 len 22]
    else:
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        _242 = mem[64]
        mem[mem[64] + 36] = msg.sender
        mem[mem[64] + 68] = ext_call.return_data[0]
        _243 = mem[64]
        mem[mem[64]] = 68
        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
        mem[64] = mem[64] + 164
        mem[_242 + 100] = 32
        mem[_242 + 132] = 'SafeERC20: low-level call failed'
        if ext_code.size(rewardAddress) <= 0:
            revert with 0, 'Address: call to non-contract'
        _275 = mem[_243]
        mem[_242 + 164 len floor32(mem[_243])] = mem[_243 + 32 len floor32(mem[_243])]
        mem[_242 + floor32(mem[_243]) + -(mem[_243] % 32) + 196 len mem[_243] % 32] = mem[_243 + floor32(mem[_243]) + -(mem[_243] % 32) + 64 len mem[_243] % 32]
        call rewardAddress with:
             gas gas_remaining wei
            args mem[_242 + 168 len _275 - 4]
        if not return_data.size:
            if not ext_call.success:
                if mem[96] > 0:
                    revert with memory
                      from 128
                       len mem[96]
                revert with 0, 'SafeERC20: low-level call failed'
            if mem[96] > 0:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_242 + 274 len 22]
        else:
            mem[_242 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                if not mem[_242 + 196]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_242 + ceil32(return_data.size) + 275 len 22]
    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0xb6897559 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(address(sub_bd8221ef[arg1]))
        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
             gas gas_remaining wei
            args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
}

function withdrawAll(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if sub_ad6f0229[address(msg.sender)][arg1].field_256 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
        revert with 0, 'Not enough deposited'
    if tx.origin != msg.sender:
        revert with 0, '!EOA'
    require arg1 < strategies.length
    mem[96] = 0x4641257d00000000000000000000000000000000000000000000000000000000
    require ext_code.size(address(strategies[arg1]))
    call address(strategies[arg1]).0x4641257d with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[0] = arg1
    mem[32] = 5
    idx = sub_ad6f0229[address(msg.sender)][arg1].field_0
    s = 0
    while idx < sub_dd69cf6b[arg1]:
        require idx < sub_6d60c323[arg1]
        mem[32] = 5
        require idx < sub_dd69cf6b[arg1]
        mem[0] = sha3(arg1, 5)
        if not sub_dd69cf6b[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_6d60c323[arg1][idx]:
            if s < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s
            continue 
        if not sub_ad6f0229[address(msg.sender)][arg1].field_256:
            _4868 = mem[64]
            mem[64] = mem[64] + 64
            mem[_4868] = 26
            mem[_4868 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[arg1][idx] > 0:
                require sub_dd69cf6b[arg1][idx]
                if s + (0 / sub_dd69cf6b[arg1][idx]) < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s + (0 / sub_dd69cf6b[arg1][idx])
                continue 
            _4870 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            idx = 0
            while idx < 26:
                mem[_4870 + idx + 68] = mem[_4868 + idx + 32]
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 32
                continue 
            mem[_4870 + 68] = mem[_4870 + 74 len 26]
            revert with memory
              from mem[64]
               len _4870 + -mem[64] + 100
        require sub_ad6f0229[address(msg.sender)][arg1].field_256
        if sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_ad6f0229[address(msg.sender)][arg1].field_256 != sub_6d60c323[arg1][idx]:
            revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
        _4869 = mem[64]
        mem[64] = mem[64] + 64
        mem[_4869] = 26
        mem[_4869 + 32] = 'SafeMath: division by zero'
        if sub_dd69cf6b[arg1][idx] > 0:
            require sub_dd69cf6b[arg1][idx]
            if s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx]) < s:
                revert with 0, 'SafeMath: addition overflow'
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 1
            s = s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx])
            continue 
        _4880 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        mem[mem[64] + 36] = 26
        idx = 0
        while idx < 26:
            mem[_4880 + idx + 68] = mem[_4869 + idx + 32]
            mem[0] = arg1
            mem[32] = 5
            idx = idx + 32
            continue 
        mem[_4880 + 68] = mem[_4880 + 74 len 26]
        revert with memory
          from mem[64]
           len _4880 + -mem[64] + 100
    require ext_code.size(rewardAddress)
    staticcall rewardAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if s <= ext_call.return_data[0]:
        _4860 = mem[64]
        mem[mem[64] + 36] = msg.sender
        mem[mem[64] + 68] = s
        _4861 = mem[64]
        mem[mem[64]] = 68
        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
        mem[64] = mem[64] + 164
        mem[_4860 + 100] = 32
        mem[_4860 + 132] = 'SafeERC20: low-level call failed'
        if ext_code.size(rewardAddress) <= 0:
            revert with 0, 'Address: call to non-contract'
        _4874 = mem[_4861]
        mem[_4860 + 164 len floor32(mem[_4861])] = mem[_4861 + 32 len floor32(mem[_4861])]
        mem[_4860 + floor32(mem[_4861]) + -(mem[_4861] % 32) + 196 len mem[_4861] % 32] = mem[_4861 + floor32(mem[_4861]) + -(mem[_4861] % 32) + 64 len mem[_4861] % 32]
        call rewardAddress with:
             gas gas_remaining wei
            args mem[_4860 + 168 len _4874 - 4]
        if not return_data.size:
            if not ext_call.success:
                if mem[96] > 0:
                    revert with memory
                      from 128
                       len mem[96]
                revert with 0, 'SafeERC20: low-level call failed'
            if mem[96] > 0:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_4860 + 274 len 22]
            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).0xb6897559 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                require ext_code.size(address(sub_bd8221ef[arg1]))
                call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                     gas gas_remaining wei
                    args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).0xb6897559 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                call address(strategies[arg1]).0x2e1a7d4d with:
                     gas gas_remaining wei
                    args sub_ad6f0229[address(msg.sender)][arg1].field_256
            else:
                require ext_code.size(address(sub_bd8221ef[arg1]))
                staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                        gas gas_remaining wei
                       args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                else:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    call address(strategies[arg1]).0x2e1a7d4d with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).lpToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            mem[_4860 + 200] = msg.sender
            mem[_4860 + 232] = sub_ad6f0229[address(msg.sender)][arg1].field_256
            mem[_4860 + 164] = 68
            mem[_4860 + 196 len 4] = unknown_0xa9059cbb(?????)
            mem[_4860 + 264] = 32
            mem[_4860 + 296] = 'SafeERC20: low-level call failed'
            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                revert with 0, 'Address: call to non-contract'
            mem[_4860 + 328 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
            mem[_4860 + 420 len 4] = 0
            call address(ext_call.return_data[0]) with:
               funct uint32(msg.sender)
                 gas gas_remaining wei
                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + 392 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] > 0:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_4860 + 438 len 22]
            else:
                mem[_4860 + 360 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    if not mem[_4860 + 360]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_4860 + ceil32(return_data.size) + 439 len 22]
            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                revert with 0, 'Can't withdraw from vault'
        else:
            mem[_4860 + 164] = return_data.size
            mem[_4860 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size <= 0:
                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    call address(strategies[arg1]).0x2e1a7d4d with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256
                else:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                    else:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).lpToken() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                mem[_4860 + ceil32(return_data.size) + 165] = 68
                mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                mem[_4860 + ceil32(return_data.size) + 265] = 32
                mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                    revert with 0, 'Address: call to non-contract'
                mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                call address(ext_call.return_data[0]) with:
                   funct uint32(msg.sender)
                     gas gas_remaining wei
                    args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96] > 0:
                            revert with memory
                              from 128
                               len mem[96]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if mem[96] > 0:
                        require mem[96] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[_4860 + ceil32(return_data.size) + 439 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'Can't withdraw from vault'
                else:
                    mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 
                                    'SafeERC20: low-level call failed',
                                    mem[_4860 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if return_data.size > 0:
                        require return_data.size >= 32
                        if not mem[_4860 + ceil32(return_data.size) + 361]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[_4860 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 
                                    'Can't withdraw from vault',
                                    mem[_4860 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                require return_data.size >= 32
                if not mem[_4860 + 196]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_4860 + ceil32(return_data.size) + 275 len 22]
                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                        mem[_4860 + ceil32(return_data.size) + 165] = 68
                        mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                        mem[_4860 + ceil32(return_data.size) + 265] = 32
                        mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                        mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4860 + ceil32(return_data.size) + 439 len 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 'Can't withdraw from vault'
                        else:
                            mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_4860 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_4860 + ceil32(return_data.size) + 361]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 
                                            'Can't withdraw from vault',
                                            mem[_4860 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0:
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4860 + ceil32(return_data.size) + 165] = 68
                            mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4860 + ceil32(return_data.size) + 265] = 32
                            mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + ceil32(return_data.size) + 439 len 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 'Can't withdraw from vault'
                            else:
                                mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4860 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 
                                                'Can't withdraw from vault',
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        else:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4860 + ceil32(return_data.size) + 165] = 68
                            mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4860 + ceil32(return_data.size) + 265] = 32
                            mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + ceil32(return_data.size) + 439 len 22]
                            else:
                                mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4860 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + (2 * ceil32(return_data.size)) + 440 len 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 'Can't withdraw from vault'
                else:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                        mem[_4860 + ceil32(return_data.size) + 165] = 68
                        mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                        mem[_4860 + ceil32(return_data.size) + 265] = 32
                        mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                        mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4860 + ceil32(return_data.size) + 439 len 22]
                        else:
                            mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_4860 + ceil32(return_data.size) + 361]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 440 len 22]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'Can't withdraw from vault'
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0:
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4860 + ceil32(return_data.size) + 165] = 68
                            mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4860 + ceil32(return_data.size) + 265] = 32
                            mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + ceil32(return_data.size) + 439 len 22]
                            else:
                                mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4860 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + (2 * ceil32(return_data.size)) + 440 len 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 'Can't withdraw from vault'
                        else:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4860 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4860 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4860 + ceil32(return_data.size) + 165] = 68
                            mem[_4860 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4860 + ceil32(return_data.size) + 265] = 32
                            mem[_4860 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4860 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4860 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4860 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + ceil32(return_data.size) + 439 len 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 'Can't withdraw from vault'
                            else:
                                mem[_4860 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4860 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4860 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 
                                                'Can't withdraw from vault',
                                                mem[_4860 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
    else:
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        _4877 = mem[64]
        mem[mem[64] + 36] = msg.sender
        mem[mem[64] + 68] = ext_call.return_data[0]
        _4878 = mem[64]
        mem[mem[64]] = 68
        mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
        mem[64] = mem[64] + 164
        mem[_4877 + 100] = 32
        mem[_4877 + 132] = 'SafeERC20: low-level call failed'
        if ext_code.size(rewardAddress) <= 0:
            revert with 0, 'Address: call to non-contract'
        _4910 = mem[_4878]
        mem[_4877 + 164 len floor32(mem[_4878])] = mem[_4878 + 32 len floor32(mem[_4878])]
        mem[_4877 + floor32(mem[_4878]) + -(mem[_4878] % 32) + 196 len mem[_4878] % 32] = mem[_4878 + floor32(mem[_4878]) + -(mem[_4878] % 32) + 64 len mem[_4878] % 32]
        call rewardAddress with:
             gas gas_remaining wei
            args mem[_4877 + 168 len _4910 - 4]
        if not return_data.size:
            if not ext_call.success:
                if mem[96] > 0:
                    revert with memory
                      from 128
                       len mem[96]
                revert with 0, 'SafeERC20: low-level call failed'
            if mem[96] > 0:
                require mem[96] >= 32
                if not mem[128]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_4877 + 274 len 22]
            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).0xb6897559 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                require ext_code.size(address(sub_bd8221ef[arg1]))
                call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                     gas gas_remaining wei
                    args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).0xb6897559 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                call address(strategies[arg1]).0x2e1a7d4d with:
                     gas gas_remaining wei
                    args sub_ad6f0229[address(msg.sender)][arg1].field_256
            else:
                require ext_code.size(address(sub_bd8221ef[arg1]))
                staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                        gas gas_remaining wei
                       args msg.sender
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > 0:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                else:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    call address(strategies[arg1]).0x2e1a7d4d with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require arg1 < strategies.length
            require ext_code.size(address(strategies[arg1]))
            staticcall address(strategies[arg1]).lpToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            mem[_4877 + 200] = msg.sender
            mem[_4877 + 232] = sub_ad6f0229[address(msg.sender)][arg1].field_256
            mem[_4877 + 164] = 68
            mem[_4877 + 196 len 4] = unknown_0xa9059cbb(?????)
            mem[_4877 + 264] = 32
            mem[_4877 + 296] = 'SafeERC20: low-level call failed'
            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                revert with 0, 'Address: call to non-contract'
            mem[_4877 + 328 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
            mem[_4877 + 420 len 4] = 0
            call address(ext_call.return_data[0]) with:
               funct uint32(msg.sender)
                 gas gas_remaining wei
                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + 392 len 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] > 0:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_4877 + 438 len 22]
            else:
                mem[_4877 + 360 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size > 0:
                    require return_data.size >= 32
                    if not mem[_4877 + 360]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_4877 + ceil32(return_data.size) + 439 len 22]
            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                revert with 0, 'Can't withdraw from vault'
        else:
            mem[_4877 + 164] = return_data.size
            mem[_4877 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size > 0:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size <= 0:
                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    call address(strategies[arg1]).0x2e1a7d4d with:
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256
                else:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                            gas gas_remaining wei
                           args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                    else:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).lpToken() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_4877 + ceil32(return_data.size) + 201] = msg.sender
                mem[_4877 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                mem[_4877 + ceil32(return_data.size) + 165] = 68
                mem[_4877 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                mem[_4877 + ceil32(return_data.size) + 265] = 32
                mem[_4877 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                    revert with 0, 'Address: call to non-contract'
                mem[_4877 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                mem[_4877 + ceil32(return_data.size) + 421 len 4] = 0
                call address(ext_call.return_data[0]) with:
                   funct uint32(msg.sender)
                     gas gas_remaining wei
                    args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + ceil32(return_data.size) + 393 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        if mem[96] > 0:
                            revert with memory
                              from 128
                               len mem[96]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if mem[96] > 0:
                        require mem[96] >= 32
                        if not mem[128]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[_4877 + ceil32(return_data.size) + 439 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'Can't withdraw from vault'
                else:
                    mem[_4877 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size > 0:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 
                                    'SafeERC20: low-level call failed',
                                    mem[_4877 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    if return_data.size > 0:
                        require return_data.size >= 32
                        if not mem[_4877 + ceil32(return_data.size) + 361]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[_4877 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 
                                    'Can't withdraw from vault',
                                    mem[_4877 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                require return_data.size >= 32
                if not mem[_4877 + 196]:
                    revert with 0, 
                                32,
                                42,
                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[_4877 + ceil32(return_data.size) + 275 len 22]
                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_4877 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_4877 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                        mem[_4877 + ceil32(return_data.size) + 165] = 68
                        mem[_4877 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                        mem[_4877 + ceil32(return_data.size) + 265] = 32
                        mem[_4877 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_4877 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                        mem[_4877 + ceil32(return_data.size) + 421 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + ceil32(return_data.size) + 393 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4877 + ceil32(return_data.size) + 439 len 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 'Can't withdraw from vault'
                        else:
                            mem[_4877 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_4877 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_4877 + ceil32(return_data.size) + 361]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_4877 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 
                                            'Can't withdraw from vault',
                                            mem[_4877 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0:
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4877 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4877 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4877 + ceil32(return_data.size) + 165] = 68
                            mem[_4877 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4877 + ceil32(return_data.size) + 265] = 32
                            mem[_4877 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4877 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4877 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4877 + ceil32(return_data.size) + 439 len 22]
                            else:
                                mem[_4877 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4877 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4877 + (2 * ceil32(return_data.size)) + 440 len 22]
                            sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                            if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                revert with 0, 'Can't withdraw from vault'
                        else:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_4877 + ceil32(return_data.size) + 201] = msg.sender
                            mem[_4877 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                            mem[_4877 + ceil32(return_data.size) + 165] = 68
                            mem[_4877 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                            mem[_4877 + ceil32(return_data.size) + 265] = 32
                            mem[_4877 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_4877 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                            mem[_4877 + ceil32(return_data.size) + 421 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + ceil32(return_data.size) + 393 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4877 + ceil32(return_data.size) + 439 len 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 'Can't withdraw from vault'
                            else:
                                mem[_4877 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_4877 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_4877 + ceil32(return_data.size) + 361]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_4877 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                                if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                                    revert with 0, 
                                                'Can't withdraw from vault',
                                                mem[_4877 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                else:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        call address(strategies[arg1]).0x2e1a7d4d with:
                             gas gas_remaining wei
                            args sub_ad6f0229[address(msg.sender)][arg1].field_256
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        staticcall address(sub_bd8221ef[arg1]).0x70a08231 with:
                                gas gas_remaining wei
                               args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0:
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).withdraw(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256, msg.sender
                        else:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0x2e1a7d4d with:
                                 gas gas_remaining wei
                                args sub_ad6f0229[address(msg.sender)][arg1].field_256
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).lpToken() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_4877 + ceil32(return_data.size) + 201] = msg.sender
                    mem[_4877 + ceil32(return_data.size) + 233] = sub_ad6f0229[address(msg.sender)][arg1].field_256
                    mem[_4877 + ceil32(return_data.size) + 165] = 68
                    mem[_4877 + ceil32(return_data.size) + 197 len 4] = unknown_0xa9059cbb(?????)
                    mem[_4877 + ceil32(return_data.size) + 265] = 32
                    mem[_4877 + ceil32(return_data.size) + 297] = 'SafeERC20: low-level call failed'
                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[_4877 + ceil32(return_data.size) + 329 len 64] = 0, msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_288
                    mem[_4877 + ceil32(return_data.size) + 421 len 4] = 0
                    call address(ext_call.return_data[0]) with:
                       funct uint32(msg.sender)
                         gas gas_remaining wei
                        args sub_ad6f0229[address(msg.sender)][arg1].field_256, 0, mem[_4877 + ceil32(return_data.size) + 393 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] > 0:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_4877 + ceil32(return_data.size) + 439 len 22]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'Can't withdraw from vault'
                    else:
                        mem[_4877 + ceil32(return_data.size) + 361 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 
                                        'SafeERC20: low-level call failed',
                                        mem[_4877 + (2 * ceil32(return_data.size)) + 430 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        if return_data.size > 0:
                            require return_data.size >= 32
                            if not mem[_4877 + ceil32(return_data.size) + 361]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_4877 + (2 * ceil32(return_data.size)) + 440 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 > sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 
                                        'Can't withdraw from vault',
                                        mem[_4877 + (2 * ceil32(return_data.size)) + 494 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
    ('le', ('field', 256, ('stor', ('map', ('param', 'arg1'), ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'sub_ad6f0229', 2))))), ('field', 256, ('stor', ('map', ('param', 'arg1'), ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'sub_ad6f0229', 2))))))
    sub_ad6f0229[address(msg.sender)][arg1].field_256 = 0
    emit Withdraw(msg.sender, sub_ad6f0229[address(msg.sender)][arg1].field_256);
}

function deposit(uint256 arg1, uint256 arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    stor1++
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    call address(strategies[arg1]).0x573fef0a with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require arg1 < strategies.length
    require ext_code.size(address(strategies[arg1]))
    staticcall address(strategies[arg1]).0x722713f7 with:
            gas gas_remaining wei
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        if tx.origin != msg.sender:
            revert with 0, '!EOA'
        require arg1 < strategies.length
        mem[96] = 0x4641257d00000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(strategies[arg1]))
        call address(strategies[arg1]).0x4641257d with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[0] = arg1
        mem[32] = 5
        idx = sub_ad6f0229[address(msg.sender)][arg1].field_0
        s = 0
        while idx < sub_dd69cf6b[arg1]:
            require idx < sub_6d60c323[arg1]
            mem[32] = 5
            require idx < sub_dd69cf6b[arg1]
            mem[0] = sha3(arg1, 5)
            if not sub_dd69cf6b[arg1][idx]:
                if s < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s
                continue 
            if not sub_6d60c323[arg1][idx]:
                if s < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s
                continue 
            if not sub_ad6f0229[address(msg.sender)][arg1].field_256:
                _20995 = mem[64]
                mem[64] = mem[64] + 64
                mem[_20995] = 26
                mem[_20995 + 32] = 'SafeMath: division by zero'
                if sub_dd69cf6b[arg1][idx] > 0:
                    require sub_dd69cf6b[arg1][idx]
                    if s + (0 / sub_dd69cf6b[arg1][idx]) < s:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 1
                    s = s + (0 / sub_dd69cf6b[arg1][idx])
                    continue 
                _20999 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                mem[mem[64] + 36] = 26
                idx = 0
                while idx < 26:
                    mem[_20999 + idx + 68] = mem[_20995 + idx + 32]
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 32
                    continue 
                mem[_20999 + 68] = mem[_20999 + 74 len 26]
                revert with memory
                  from mem[64]
                   len _20999 + -mem[64] + 100
            require sub_ad6f0229[address(msg.sender)][arg1].field_256
            if sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_ad6f0229[address(msg.sender)][arg1].field_256 != sub_6d60c323[arg1][idx]:
                revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _20998 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20998] = 26
            mem[_20998 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[arg1][idx] > 0:
                require sub_dd69cf6b[arg1][idx]
                if s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx]) < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx])
                continue 
            _21013 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            idx = 0
            while idx < 26:
                mem[_21013 + idx + 68] = mem[_20998 + idx + 32]
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 32
                continue 
            mem[_21013 + 68] = mem[_21013 + 74 len 26]
            revert with memory
              from mem[64]
               len _21013 + -mem[64] + 100
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if s <= ext_call.return_data[0]:
            _20980 = mem[64]
            mem[mem[64] + 36] = msg.sender
            mem[mem[64] + 68] = s
            _20981 = mem[64]
            mem[mem[64]] = 68
            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = mem[64] + 164
            mem[_20980 + 100] = 32
            mem[_20980 + 132] = 'SafeERC20: low-level call failed'
            if ext_code.size(rewardAddress) <= 0:
                revert with 0, 'Address: call to non-contract'
            _21007 = mem[_20981]
            mem[_20980 + 164 len floor32(mem[_20981])] = mem[_20981 + 32 len floor32(mem[_20981])]
            mem[_20980 + floor32(mem[_20981]) + -(mem[_20981] % 32) + 196 len mem[_20981] % 32] = mem[_20981 + floor32(mem[_20981]) + -(mem[_20981] % 32) + 64 len mem[_20981] % 32]
            call rewardAddress with:
                 gas gas_remaining wei
                args mem[_20980 + 168 len _21007 - 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + 200] = msg.sender
                        mem[_20980 + 232] = this.address
                        mem[_20980 + 264] = arg2
                        mem[_20980 + 164] = 100
                        mem[_20980 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + 296] = 32
                        mem[_20980 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + 470 len 14],
                                                0,
                                                mem[_20980 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + 396] = address(strategies[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20980 + 360] = return_data.size
                            mem[_20980 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + 200] = msg.sender
                        mem[_20980 + 232] = this.address
                        mem[_20980 + 264] = arg2
                        mem[_20980 + 164] = 100
                        mem[_20980 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + 296] = 32
                        mem[_20980 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + 470 len 14],
                                                0,
                                                mem[_20980 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + 396] = address(strategies[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20980 + 360] = return_data.size
                            mem[_20980 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require return_data.size >= 32
                                if not mem[_20980 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                else:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_20980 + 274 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + 200] = msg.sender
                        mem[_20980 + 232] = this.address
                        mem[_20980 + 264] = arg2
                        mem[_20980 + 164] = 100
                        mem[_20980 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + 296] = 32
                        mem[_20980 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + 470 len 14],
                                                0,
                                                mem[_20980 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + 396] = address(strategies[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20980 + 360] = return_data.size
                            mem[_20980 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require return_data.size >= 32
                                if not mem[_20980 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + 200] = msg.sender
                        mem[_20980 + 232] = this.address
                        mem[_20980 + 264] = arg2
                        mem[_20980 + 164] = 100
                        mem[_20980 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + 296] = 32
                        mem[_20980 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + 470 len 14],
                                                0,
                                                mem[_20980 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + 396] = address(strategies[arg1])
                                mem[_20980 + 428] = ext_call.return_data[0]
                                mem[_20980 + 360] = 68
                                mem[_20980 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + 460] = 32
                                mem[_20980 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + 634 len 22]
                                else:
                                    mem[_20980 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20980 + 360] = return_data.size
                            mem[_20980 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
            else:
                mem[_20980 + 164] = return_data.size
                mem[_20980 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20980 + ceil32(return_data.size) + 233] = this.address
                        mem[_20980 + ceil32(return_data.size) + 265] = arg2
                        mem[_20980 + ceil32(return_data.size) + 165] = 100
                        mem[_20980 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + ceil32(return_data.size) + 297] = 32
                        mem[_20980 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20980 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_20980 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20980 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_20980 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20980 + ceil32(return_data.size) + 233] = this.address
                        mem[_20980 + ceil32(return_data.size) + 265] = arg2
                        mem[_20980 + ceil32(return_data.size) + 165] = 100
                        mem[_20980 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + ceil32(return_data.size) + 297] = 32
                        mem[_20980 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20980 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_20980 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20980 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_20980 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                else:
                    require return_data.size >= 32
                    if not mem[_20980 + 196]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_20980 + ceil32(return_data.size) + 275 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20980 + ceil32(return_data.size) + 233] = this.address
                        mem[_20980 + ceil32(return_data.size) + 265] = arg2
                        mem[_20980 + ceil32(return_data.size) + 165] = 100
                        mem[_20980 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + ceil32(return_data.size) + 297] = 32
                        mem[_20980 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20980 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20980 + ceil32(return_data.size) + 361] = 68
                                    mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20980 + ceil32(return_data.size) + 461] = 32
                                    mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20980 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_20980 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20980 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_20980 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20980 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20980 + ceil32(return_data.size) + 233] = this.address
                        mem[_20980 + ceil32(return_data.size) + 265] = arg2
                        mem[_20980 + ceil32(return_data.size) + 165] = 100
                        mem[_20980 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20980 + ceil32(return_data.size) + 297] = 32
                        mem[_20980 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20980 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20980 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20980 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20980 + ceil32(return_data.size) + 489 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20980 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_20980 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20980 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20980 + ceil32(return_data.size) + 361] = 68
                                mem[_20980 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + ceil32(return_data.size) + 461] = 32
                                mem[_20980 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20980 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20980 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20980 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20980 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_20980 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20980 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20980 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20980 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20980 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20980 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20980 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20980 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20980 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20980 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20980 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_20980 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20980 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20980 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
        else:
            require ext_code.size(rewardAddress)
            staticcall rewardAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            _21010 = mem[64]
            mem[mem[64] + 36] = msg.sender
            mem[mem[64] + 68] = ext_call.return_data[0]
            _21011 = mem[64]
            mem[mem[64]] = 68
            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = mem[64] + 164
            mem[_21010 + 100] = 32
            mem[_21010 + 132] = 'SafeERC20: low-level call failed'
            if ext_code.size(rewardAddress) <= 0:
                revert with 0, 'Address: call to non-contract'
            _21071 = mem[_21011]
            mem[_21010 + 164 len floor32(mem[_21011])] = mem[_21011 + 32 len floor32(mem[_21011])]
            mem[_21010 + floor32(mem[_21011]) + -(mem[_21011] % 32) + 196 len mem[_21011] % 32] = mem[_21011 + floor32(mem[_21011]) + -(mem[_21011] % 32) + 64 len mem[_21011] % 32]
            call rewardAddress with:
                 gas gas_remaining wei
                args mem[_21010 + 168 len _21071 - 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + 200] = msg.sender
                        mem[_21010 + 232] = this.address
                        mem[_21010 + 264] = arg2
                        mem[_21010 + 164] = 100
                        mem[_21010 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + 296] = 32
                        mem[_21010 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + 470 len 14],
                                                0,
                                                mem[_21010 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + 396] = address(sub_bd8221ef[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 396 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + 396] = address(strategies[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 396 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                mem[_21010 + 588 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21010 + 360] = return_data.size
                            mem[_21010 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21010 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21010 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + 200] = msg.sender
                        mem[_21010 + 232] = this.address
                        mem[_21010 + 264] = arg2
                        mem[_21010 + 164] = 100
                        mem[_21010 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + 296] = 32
                        mem[_21010 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + 470 len 14],
                                                0,
                                                mem[_21010 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + 396] = address(sub_bd8221ef[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + 396] = address(strategies[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21010 + 360] = return_data.size
                            mem[_21010 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                else:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_21010 + 274 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + 200] = msg.sender
                        mem[_21010 + 232] = this.address
                        mem[_21010 + 264] = arg2
                        mem[_21010 + 164] = 100
                        mem[_21010 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + 296] = 32
                        mem[_21010 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + 470 len 14],
                                                0,
                                                mem[_21010 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + 396] = address(sub_bd8221ef[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + 396] = address(strategies[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21010 + 360] = return_data.size
                            mem[_21010 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require return_data.size >= 32
                                if not mem[_21010 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + 200] = msg.sender
                        mem[_21010 + 232] = this.address
                        mem[_21010 + 264] = arg2
                        mem[_21010 + 164] = 100
                        mem[_21010 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + 296] = 32
                        mem[_21010 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + 470 len 14],
                                                0,
                                                mem[_21010 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + 396] = address(sub_bd8221ef[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 396 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                mem[_21010 + 588 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + 396] = address(strategies[arg1])
                                mem[_21010 + 428] = ext_call.return_data[0]
                                mem[_21010 + 360] = 68
                                mem[_21010 + 396 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21010 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + 460] = 32
                                mem[_21010 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + 524 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + 616 len 4] = 0
                                mem[_21010 + 588 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + 634 len 22]
                                else:
                                    mem[_21010 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21010 + 360] = return_data.size
                            mem[_21010 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21010 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21010 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
            else:
                mem[_21010 + 164] = return_data.size
                mem[_21010 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21010 + ceil32(return_data.size) + 233] = this.address
                        mem[_21010 + ceil32(return_data.size) + 265] = arg2
                        mem[_21010 + ceil32(return_data.size) + 165] = 100
                        mem[_21010 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + ceil32(return_data.size) + 297] = 32
                        mem[_21010 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21010 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_21010 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21010 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21010 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21010 + ceil32(return_data.size) + 233] = this.address
                        mem[_21010 + ceil32(return_data.size) + 265] = arg2
                        mem[_21010 + ceil32(return_data.size) + 165] = 100
                        mem[_21010 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + ceil32(return_data.size) + 297] = 32
                        mem[_21010 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21010 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_21010 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21010 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21010 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                else:
                    require return_data.size >= 32
                    if not mem[_21010 + 196]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_21010 + ceil32(return_data.size) + 275 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21010 + ceil32(return_data.size) + 233] = this.address
                        mem[_21010 + ceil32(return_data.size) + 265] = arg2
                        mem[_21010 + ceil32(return_data.size) + 165] = 100
                        mem[_21010 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + ceil32(return_data.size) + 297] = 32
                        mem[_21010 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21010 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21010 + ceil32(return_data.size) + 361] = 68
                                    mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21010 + ceil32(return_data.size) + 461] = 32
                                    mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21010 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_21010 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21010 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21010 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21010 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21010 + ceil32(return_data.size) + 233] = this.address
                        mem[_21010 + ceil32(return_data.size) + 265] = arg2
                        mem[_21010 + ceil32(return_data.size) + 165] = 100
                        mem[_21010 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21010 + ceil32(return_data.size) + 297] = 32
                        mem[_21010 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21010 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21010 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21010 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21010 + ceil32(return_data.size) + 489 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21010 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_21010 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21010 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21010 + ceil32(return_data.size) + 361] = 68
                                mem[_21010 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + ceil32(return_data.size) + 461] = 32
                                mem[_21010 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21010 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21010 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21010 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21010 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21010 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21010 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21010 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21010 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21010 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21010 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21010 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21010 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21010 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21010 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21010 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21010 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21010 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21010 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        emit Deposit(msg.sender, arg2);
    else:
        sub_6d60c323[arg1]++
        sub_6d60c323[arg1][sub_6d60c323[arg1]] = 0
        sub_dd69cf6b[arg1]++
        sub_dd69cf6b[arg1][sub_dd69cf6b[arg1]] = 0
        mem[0] = arg1
        mem[32] = 5
        idx = sub_ad6f0229[address(msg.sender)][arg1].field_0
        s = 0
        while idx < sub_dd69cf6b[arg1]:
            require idx < sub_6d60c323[arg1]
            mem[32] = 5
            require idx < sub_dd69cf6b[arg1]
            mem[0] = sha3(arg1, 5)
            if not sub_dd69cf6b[arg1][idx]:
                if s < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s
                continue 
            if not sub_6d60c323[arg1][idx]:
                if s < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s
                continue 
            if not sub_ad6f0229[address(msg.sender)][arg1].field_256:
                _20997 = mem[64]
                mem[64] = mem[64] + 64
                mem[_20997] = 26
                mem[_20997 + 32] = 'SafeMath: division by zero'
                if sub_dd69cf6b[arg1][idx] > 0:
                    require sub_dd69cf6b[arg1][idx]
                    if s + (0 / sub_dd69cf6b[arg1][idx]) < s:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 1
                    s = s + (0 / sub_dd69cf6b[arg1][idx])
                    continue 
                _21003 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                mem[mem[64] + 36] = 26
                idx = 0
                while idx < 26:
                    mem[_21003 + idx + 68] = mem[_20997 + idx + 32]
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 32
                    continue 
                mem[_21003 + 68] = mem[_21003 + 74 len 26]
                revert with memory
                  from mem[64]
                   len _21003 + -mem[64] + 100
            require sub_ad6f0229[address(msg.sender)][arg1].field_256
            if sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_ad6f0229[address(msg.sender)][arg1].field_256 != sub_6d60c323[arg1][idx]:
                revert with 0, 32, 33, 0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
            _21002 = mem[64]
            mem[64] = mem[64] + 64
            mem[_21002] = 26
            mem[_21002 + 32] = 'SafeMath: division by zero'
            if sub_dd69cf6b[arg1][idx] > 0:
                require sub_dd69cf6b[arg1][idx]
                if s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx]) < s:
                    revert with 0, 'SafeMath: addition overflow'
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                s = s + (sub_ad6f0229[address(msg.sender)][arg1].field_256 * sub_6d60c323[arg1][idx] / sub_dd69cf6b[arg1][idx])
                continue 
            _21024 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 26
            idx = 0
            while idx < 26:
                mem[_21024 + idx + 68] = mem[_21002 + idx + 32]
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 32
                continue 
            mem[_21024 + 68] = mem[_21024 + 74 len 26]
            revert with memory
              from mem[64]
               len _21024 + -mem[64] + 100
        require ext_code.size(rewardAddress)
        staticcall rewardAddress.0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if s <= ext_call.return_data[0]:
            _20983 = mem[64]
            mem[mem[64] + 36] = msg.sender
            mem[mem[64] + 68] = s
            _20984 = mem[64]
            mem[mem[64]] = 68
            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = mem[64] + 164
            mem[_20983 + 100] = 32
            mem[_20983 + 132] = 'SafeERC20: low-level call failed'
            if ext_code.size(rewardAddress) <= 0:
                revert with 0, 'Address: call to non-contract'
            _21018 = mem[_20984]
            mem[_20983 + 164 len floor32(mem[_20984])] = mem[_20984 + 32 len floor32(mem[_20984])]
            mem[_20983 + floor32(mem[_20984]) + -(mem[_20984] % 32) + 196 len mem[_20984] % 32] = mem[_20984 + floor32(mem[_20984]) + -(mem[_20984] % 32) + 64 len mem[_20984] % 32]
            call rewardAddress with:
                 gas gas_remaining wei
                args mem[_20983 + 168 len _21018 - 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20983 + 200] = msg.sender
                        mem[_20983 + 232] = this.address
                        mem[_20983 + 264] = arg2
                        mem[_20983 + 164] = 100
                        mem[_20983 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20983 + 296] = 32
                        mem[_20983 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20983 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20983 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + 470 len 14],
                                                0,
                                                mem[_20983 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20983 + 428] = ext_call.return_data[0]
                                mem[_20983 + 360] = 68
                                mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + 460] = 32
                                mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + 634 len 22]
                                else:
                                    mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + 396] = address(strategies[arg1])
                                mem[_20983 + 428] = ext_call.return_data[0]
                                mem[_20983 + 360] = 68
                                mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + 460] = 32
                                mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + 634 len 22]
                                else:
                                    mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20983 + 360] = return_data.size
                            mem[_20983 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require return_data.size >= 32
                                if not mem[_20983 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + ceil32(return_data.size) + 471 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20983 + 200] = msg.sender
                        mem[_20983 + 232] = this.address
                        mem[_20983 + 264] = arg2
                        mem[_20983 + 164] = 100
                        mem[_20983 + 196 len 4] = unknown_0x23b872dd(?????)
                        mem[_20983 + 296] = 32
                        mem[_20983 + 328] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20983 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20983 + 484 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + 456 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + 470 len 14],
                                                0,
                                                mem[_20983 + 488 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + 396] = address(sub_bd8221ef[arg1])
                                mem[_20983 + 428] = ext_call.return_data[0]
                                mem[_20983 + 360] = 68
                                mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + 460] = 32
                                mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + 634 len 22]
                                else:
                                    mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + 396] = address(strategies[arg1])
                                mem[_20983 + 428] = ext_call.return_data[0]
                                mem[_20983 + 360] = 68
                                mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + 460] = 32
                                mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + 616 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + 634 len 22]
                                else:
                                    mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + 556]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_20983 + 360] = return_data.size
                            mem[_20983 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20983 + 392]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                else:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_20983 + 274 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'SafeMath: addition overflow'
                    sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).lpToken() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_20983 + 200] = msg.sender
                    mem[_20983 + 232] = this.address
                    mem[_20983 + 264] = arg2
                    mem[_20983 + 164] = 100
                    mem[_20983 + 196 len 4] = unknown_0x23b872dd(?????)
                    mem[_20983 + 296] = 32
                    mem[_20983 + 328] = 'SafeERC20: low-level call failed'
                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[_20983 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                    mem[_20983 + 484 len 4] = 0
                    call address(ext_call.return_data[0]) with:
                         gas gas_remaining wei
                        args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + 456 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] > 0:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_20983 + 470 len 14],
                                            0,
                                            mem[_20983 + 488 len 4]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_20983 + 396] = address(sub_bd8221ef[arg1])
                            mem[_20983 + 428] = ext_call.return_data[0]
                            mem[_20983 + 360] = 68
                            mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + 460] = 32
                            mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + 634 len 22]
                            else:
                                mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + ceil32(return_data.size) + 635 len 22]
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], msg.sender
                        else:
                            mem[_20983 + 396] = address(strategies[arg1])
                            mem[_20983 + 428] = ext_call.return_data[0]
                            mem[_20983 + 360] = 68
                            mem[_20983 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + 460] = 32
                            mem[_20983 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + 634 len 22]
                            else:
                                mem[_20983 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + ceil32(return_data.size) + 635 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                    else:
                        mem[_20983 + 360] = return_data.size
                        mem[_20983 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            require return_data.size >= 32
                            if not mem[_20983 + 392]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_20983 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                emit Deposit(msg.sender, arg2);
            else:
                mem[_20983 + 164] = return_data.size
                mem[_20983 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'SafeMath: addition overflow'
                    sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).lpToken() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_20983 + ceil32(return_data.size) + 201] = msg.sender
                    mem[_20983 + ceil32(return_data.size) + 233] = this.address
                    mem[_20983 + ceil32(return_data.size) + 265] = arg2
                    mem[_20983 + ceil32(return_data.size) + 165] = 100
                    mem[_20983 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                    mem[_20983 + ceil32(return_data.size) + 297] = 32
                    mem[_20983 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[_20983 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                    mem[_20983 + ceil32(return_data.size) + 485 len 4] = 0
                    call address(ext_call.return_data[0]) with:
                         gas gas_remaining wei
                        args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + ceil32(return_data.size) + 457 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] > 0:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_20983 + ceil32(return_data.size) + 471 len 14],
                                            0,
                                            mem[_20983 + ceil32(return_data.size) + 489 len 4]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                            mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                            mem[_20983 + ceil32(return_data.size) + 361] = 68
                            mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + ceil32(return_data.size) + 461] = 32
                            mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + ceil32(return_data.size) + 557]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        else:
                            mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                            mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                            mem[_20983 + ceil32(return_data.size) + 361] = 68
                            mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + ceil32(return_data.size) + 461] = 32
                            mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + ceil32(return_data.size) + 635 len 22]
                            else:
                                mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + ceil32(return_data.size) + 557]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                    else:
                        mem[_20983 + ceil32(return_data.size) + 361] = return_data.size
                        mem[_20983 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 
                                        'SafeERC20: low-level call failed',
                                        mem[_20983 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        if return_data.size > 0:
                            require return_data.size >= 32
                            if not mem[_20983 + ceil32(return_data.size) + 393]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_20983 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                            mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                            mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                            mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                            mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                            else:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], msg.sender
                        else:
                            mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                            mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                            mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                            mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                            mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                            mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                            else:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    emit Deposit(msg.sender, arg2);
                else:
                    require return_data.size >= 32
                    if not mem[_20983 + 196]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_20983 + ceil32(return_data.size) + 275 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20983 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20983 + ceil32(return_data.size) + 233] = this.address
                        mem[_20983 + ceil32(return_data.size) + 265] = arg2
                        mem[_20983 + ceil32(return_data.size) + 165] = 100
                        mem[_20983 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20983 + ceil32(return_data.size) + 297] = 32
                        mem[_20983 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20983 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20983 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20983 + ceil32(return_data.size) + 489 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_20983 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_20983 + ceil32(return_data.size) + 361] = 68
                                mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + ceil32(return_data.size) + 461] = 32
                                mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_20983 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            emit Deposit(msg.sender, arg2);
                        else:
                            mem[_20983 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20983 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20983 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + (2 * ceil32(return_data.size)) + 472 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    emit Deposit(msg.sender, arg2);
                                else:
                                    mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 595 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    emit Deposit(address rg1, uint256 rg2):
                                                 msg.sender,
                                                 arg2,
                                                 mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 591 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                            else:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                emit Deposit(msg.sender, arg2);
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_20983 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_20983 + ceil32(return_data.size) + 233] = this.address
                        mem[_20983 + ceil32(return_data.size) + 265] = arg2
                        mem[_20983 + ceil32(return_data.size) + 165] = 100
                        mem[_20983 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_20983 + ceil32(return_data.size) + 297] = 32
                        mem[_20983 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_20983 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_20983 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_20983 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    mem[_20983 + ceil32(return_data.size) + 589 len 0] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    mem[_20983 + ceil32(return_data.size) + 589 len 0] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_20983 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if not ext_call.return_data[0]:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                                else:
                                    mem[_20983 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_20983 + ceil32(return_data.size) + 361] = 68
                                    mem[_20983 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                    mem[_20983 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_20983 + ceil32(return_data.size) + 461] = 32
                                    mem[_20983 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_20983 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_20983 + ceil32(return_data.size) + 617 len 4] = 0
                                    mem[_20983 + ceil32(return_data.size) + 589 len 0] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_20983 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_20983 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        else:
                            mem[_20983 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_20983 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_20983 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_20983 + (2 * ceil32(return_data.size)) + 472 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_20983 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                            else:
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_20983 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_20983 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_20983 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_20983 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_20983 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_20983 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_20983 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_20983 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    mem[_20983 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_20983 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_20983 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        emit Deposit(msg.sender, arg2);
        else:
            require ext_code.size(rewardAddress)
            staticcall rewardAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            _21021 = mem[64]
            mem[mem[64] + 36] = msg.sender
            mem[mem[64] + 68] = ext_call.return_data[0]
            _21022 = mem[64]
            mem[mem[64]] = 68
            mem[mem[64] + 32 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = mem[64] + 164
            mem[_21021 + 100] = 32
            mem[_21021 + 132] = 'SafeERC20: low-level call failed'
            if ext_code.size(rewardAddress) <= 0:
                revert with 0, 'Address: call to non-contract'
            _21085 = mem[_21022]
            mem[_21021 + 164 len floor32(mem[_21022])] = mem[_21022 + 32 len floor32(mem[_21022])]
            mem[_21021 + floor32(mem[_21022]) + -(mem[_21022] % 32) + 196 len mem[_21022] % 32] = mem[_21022 + floor32(mem[_21022]) + -(mem[_21022] % 32) + 64 len mem[_21022] % 32]
            call rewardAddress with:
                 gas gas_remaining wei
                args mem[_21021 + 168 len _21085 - 4]
            if not return_data.size:
                if not ext_call.success:
                    if mem[96] > 0:
                        revert with memory
                          from 128
                           len mem[96]
                    revert with 0, 'SafeERC20: low-level call failed'
                if mem[96] > 0:
                    require mem[96] >= 32
                    if not mem[128]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_21021 + 274 len 22]
                sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                require arg1 < strategies.length
                require ext_code.size(address(strategies[arg1]))
                staticcall address(strategies[arg1]).0xb6897559 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'SafeMath: addition overflow'
                    sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).lpToken() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_21021 + 200] = msg.sender
                    mem[_21021 + 232] = this.address
                    mem[_21021 + 264] = arg2
                    mem[_21021 + 164] = 100
                    mem[_21021 + 196 len 4] = unknown_0x23b872dd(?????)
                    mem[_21021 + 296] = 32
                    mem[_21021 + 328] = 'SafeERC20: low-level call failed'
                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[_21021 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                    mem[_21021 + 484 len 4] = 0
                    call address(ext_call.return_data[0]) with:
                         gas gas_remaining wei
                        args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + 456 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] > 0:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_21021 + 470 len 14],
                                            0,
                                            mem[_21021 + 488 len 4]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_21021 + 396] = address(sub_bd8221ef[arg1])
                            mem[_21021 + 428] = ext_call.return_data[0]
                            mem[_21021 + 360] = 68
                            mem[_21021 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + 460] = 32
                            mem[_21021 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + 634 len 22]
                            else:
                                mem[_21021 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], msg.sender
                        else:
                            mem[_21021 + 396] = address(strategies[arg1])
                            mem[_21021 + 428] = ext_call.return_data[0]
                            mem[_21021 + 360] = 68
                            mem[_21021 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + 460] = 32
                            mem[_21021 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + 634 len 22]
                            else:
                                mem[_21021 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                    else:
                        mem[_21021 + 360] = return_data.size
                        mem[_21021 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size > 0:
                            require return_data.size >= 32
                            if not mem[_21021 + 392]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_21021 + ceil32(return_data.size) + 471 len 22]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                            mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                            mem[_21021 + ceil32(return_data.size) + 361] = 68
                            mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + ceil32(return_data.size) + 461] = 32
                            mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + ceil32(return_data.size) + 557]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                        else:
                            mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                            mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                            mem[_21021 + ceil32(return_data.size) + 361] = 68
                            mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + ceil32(return_data.size) + 461] = 32
                            mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                            else:
                                mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 
                                                'SafeERC20: low-level call failed',
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + ceil32(return_data.size) + 557]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                else:
                    require ext_code.size(address(sub_bd8221ef[arg1]))
                    call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                        revert with 0, 'SafeMath: addition overflow'
                    sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).lpToken() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_21021 + 200] = msg.sender
                    mem[_21021 + 232] = this.address
                    mem[_21021 + 264] = arg2
                    mem[_21021 + 164] = 100
                    mem[_21021 + 196 len 4] = unknown_0x23b872dd(?????)
                    mem[_21021 + 296] = 32
                    mem[_21021 + 328] = 'SafeERC20: low-level call failed'
                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                        revert with 0, 'Address: call to non-contract'
                    mem[_21021 + 360 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                    mem[_21021 + 484 len 4] = 0
                    call address(ext_call.return_data[0]) with:
                         gas gas_remaining wei
                        args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + 456 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            if mem[96] > 0:
                                revert with memory
                                  from 128
                                   len mem[96]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if mem[96] > 0:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_21021 + 470 len 14],
                                            0,
                                            mem[_21021 + 488 len 4]
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).0xb6897559 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            mem[_21021 + 396] = address(sub_bd8221ef[arg1])
                            mem[_21021 + 428] = ext_call.return_data[0]
                            mem[_21021 + 360] = 68
                            mem[_21021 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + 460] = 32
                            mem[_21021 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + 524 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(sub_bd8221ef[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + 634 len 22]
                            else:
                                mem[_21021 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                            require ext_code.size(address(sub_bd8221ef[arg1]))
                            call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0], msg.sender
                        else:
                            mem[_21021 + 396] = address(strategies[arg1])
                            mem[_21021 + 428] = ext_call.return_data[0]
                            mem[_21021 + 360] = 68
                            mem[_21021 + 392 len 4] = unknown_0xa9059cbb(?????)
                            mem[_21021 + 460] = 32
                            mem[_21021 + 492] = 'SafeERC20: low-level call failed'
                            if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                revert with 0, 'Address: call to non-contract'
                            mem[_21021 + 524 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                            mem[_21021 + 616 len 4] = 0
                            call address(ext_call.return_data[0]) with:
                               funct uint32(strategies[arg1])
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 0, mem[_21021 + 588 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    if mem[96] > 0:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] > 0:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + 634 len 22]
                            else:
                                mem[_21021 + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size > 0:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size > 0:
                                    require return_data.size >= 32
                                    if not mem[_21021 + 556]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_21021 + ceil32(return_data.size) + 635 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            call address(strategies[arg1]).0xd0e30db0 with:
                                 gas gas_remaining wei
                    else:
                        mem[_21021 + 360] = return_data.size
                        mem[_21021 + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size > 0:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size <= 0:
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            require return_data.size >= 32
                            if not mem[_21021 + 392]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_21021 + ceil32(return_data.size) + 471 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
            else:
                mem[_21021 + 164] = return_data.size
                mem[_21021 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size > 0:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size <= 0:
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21021 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21021 + ceil32(return_data.size) + 233] = this.address
                        mem[_21021 + ceil32(return_data.size) + 265] = arg2
                        mem[_21021 + ceil32(return_data.size) + 165] = 100
                        mem[_21021 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21021 + ceil32(return_data.size) + 297] = 32
                        mem[_21021 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21021 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21021 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21021 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_21021 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21021 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21021 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21021 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21021 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21021 + ceil32(return_data.size) + 233] = this.address
                        mem[_21021 + ceil32(return_data.size) + 265] = arg2
                        mem[_21021 + ceil32(return_data.size) + 165] = 100
                        mem[_21021 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21021 + ceil32(return_data.size) + 297] = 32
                        mem[_21021 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21021 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21021 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21021 + ceil32(return_data.size) + 489 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21021 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21021 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21021 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21021 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                else:
                    require return_data.size >= 32
                    if not mem[_21021 + 196]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[_21021 + ceil32(return_data.size) + 275 len 22]
                    sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                    require arg1 < strategies.length
                    require ext_code.size(address(strategies[arg1]))
                    staticcall address(strategies[arg1]).0xb6897559 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21021 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21021 + ceil32(return_data.size) + 233] = this.address
                        mem[_21021 + ceil32(return_data.size) + 265] = arg2
                        mem[_21021 + ceil32(return_data.size) + 165] = 100
                        mem[_21021 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21021 + ceil32(return_data.size) + 297] = 32
                        mem[_21021 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21021 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21021 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] <= 0:
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                            else:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21021 + ceil32(return_data.size) + 489 len 4]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_code.size(address(ext_call.return_data[0]))
                                staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).0xb6897559 with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                staticcall address(strategies[arg1]).lpToken() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if ext_call.return_data[0]:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(sub_bd8221ef[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        require ext_code.size(address(sub_bd8221ef[arg1]))
                                        call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                    mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                    mem[_21021 + ceil32(return_data.size) + 361] = 68
                                    mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                    mem[_21021 + ceil32(return_data.size) + 461] = 32
                                    mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                    if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                        revert with 0, 'Address: call to non-contract'
                                    mem[_21021 + ceil32(return_data.size) + 525 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                    mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                    call address(ext_call.return_data[0]) with:
                                       funct uint32(strategies[arg1])
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], 0, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            if mem[96] > 0:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if mem[96] > 0:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    else:
                                        mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size > 0:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 
                                                        'SafeERC20: low-level call failed',
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if return_data.size > 0:
                                            require return_data.size >= 32
                                            if not mem[_21021 + ceil32(return_data.size) + 557]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require arg1 < strategies.length
                                    require ext_code.size(address(strategies[arg1]))
                                    call address(strategies[arg1]).0xd0e30db0 with:
                                         gas gas_remaining wei
                        else:
                            mem[_21021 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21021 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[_21021 + (2 * ceil32(return_data.size)) + 462 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21021 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 472 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require ext_code.size(address(sub_bd8221ef[arg1]))
                                call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = 0, address(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 0, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                    else:
                        require ext_code.size(address(sub_bd8221ef[arg1]))
                        call address(sub_bd8221ef[arg1]).getReward(address rg1) with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        sub_ad6f0229[address(msg.sender)][arg1].field_0 = sub_6d60c323[arg1]
                        if sub_ad6f0229[address(msg.sender)][arg1].field_256 + arg2 < sub_ad6f0229[address(msg.sender)][arg1].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        sub_ad6f0229[address(msg.sender)][arg1].field_256 += arg2
                        require arg1 < strategies.length
                        require ext_code.size(address(strategies[arg1]))
                        staticcall address(strategies[arg1]).lpToken() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_21021 + ceil32(return_data.size) + 201] = msg.sender
                        mem[_21021 + ceil32(return_data.size) + 233] = this.address
                        mem[_21021 + ceil32(return_data.size) + 265] = arg2
                        mem[_21021 + ceil32(return_data.size) + 165] = 100
                        mem[_21021 + ceil32(return_data.size) + 197 len 4] = unknown_0x23b872dd(?????)
                        mem[_21021 + ceil32(return_data.size) + 297] = 32
                        mem[_21021 + ceil32(return_data.size) + 329] = 'SafeERC20: low-level call failed'
                        if ext_code.size(address(ext_call.return_data[0])) <= 0:
                            revert with 0, 'Address: call to non-contract'
                        mem[_21021 + ceil32(return_data.size) + 361 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[_21021 + ceil32(return_data.size) + 485 len 4] = 0
                        call address(ext_call.return_data[0]) with:
                             gas gas_remaining wei
                            args arg2, 32, Mask(224, 32, 'SafeERC20: low-level call failed') >> 32, mem[_21021 + ceil32(return_data.size) + 457 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                if mem[96] > 0:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if mem[96] > 0:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + ceil32(return_data.size) + 471 len 14],
                                                0,
                                                mem[_21021 + ceil32(return_data.size) + 489 len 4]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(sub_bd8221ef[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21021 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            else:
                                mem[_21021 + ceil32(return_data.size) + 397] = address(strategies[arg1])
                                mem[_21021 + ceil32(return_data.size) + 429] = ext_call.return_data[0]
                                mem[_21021 + ceil32(return_data.size) + 361] = 68
                                mem[_21021 + ceil32(return_data.size) + 397 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21021 + ceil32(return_data.size) + 393 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + ceil32(return_data.size) + 461] = 32
                                mem[_21021 + ceil32(return_data.size) + 493] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + ceil32(return_data.size) + 525 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + ceil32(return_data.size) + 617 len 4] = 0
                                mem[_21021 + ceil32(return_data.size) + 589 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21021 + ceil32(return_data.size) + 589 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + 635 len 22]
                                else:
                                    mem[_21021 + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + ceil32(return_data.size) + 557]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
                        else:
                            mem[_21021 + ceil32(return_data.size) + 361] = return_data.size
                            mem[_21021 + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size > 0:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size > 0:
                                require return_data.size >= 32
                                if not mem[_21021 + ceil32(return_data.size) + 393]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_21021 + (2 * ceil32(return_data.size)) + 472 len 22]
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_code.size(address(ext_call.return_data[0]))
                            staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).0xb6897559 with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require arg1 < strategies.length
                            require ext_code.size(address(strategies[arg1]))
                            staticcall address(strategies[arg1]).lpToken() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(sub_bd8221ef[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, sub_bd8221ef[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, sub_bd8221ef[arg1]), uint32(sub_bd8221ef[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(sub_bd8221ef[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender, mem[_21021 + (2 * ceil32(return_data.size)) + 594 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len 22]
                                    require ext_code.size(address(sub_bd8221ef[arg1]))
                                    call address(sub_bd8221ef[arg1]).stake(uint256 rg1, address rg2) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0], msg.sender
                            else:
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398] = address(strategies[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 430] = ext_call.return_data[0]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 362] = 68
                                mem[_21021 + (2 * ceil32(return_data.size)) + 398 len 28] = Mask(224, 0, strategies[arg1])
                                mem[_21021 + (2 * ceil32(return_data.size)) + 394 len 4] = unknown_0xa9059cbb(?????)
                                mem[_21021 + (2 * ceil32(return_data.size)) + 462] = 32
                                mem[_21021 + (2 * ceil32(return_data.size)) + 494] = 'SafeERC20: low-level call failed'
                                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                                    revert with 0, 'Address: call to non-contract'
                                mem[_21021 + (2 * ceil32(return_data.size)) + 526 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, strategies[arg1]), uint32(strategies[arg1]), ext_call.return_data[0 len 28]
                                mem[_21021 + (2 * ceil32(return_data.size)) + 618 len 4] = 0
                                mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 0] = 0
                                call address(ext_call.return_data[0]) with:
                                   funct uint32(strategies[arg1])
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[_21021 + (2 * ceil32(return_data.size)) + 590 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if mem[96] > 0:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        revert with 0, 
                                                    'SafeERC20: low-level call failed',
                                                    mem[_21021 + (2 * ceil32(return_data.size)) + 626 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if mem[96] > 0:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + (2 * ceil32(return_data.size)) + 636 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                else:
                                    mem[_21021 + (2 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size > 0:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size > 0:
                                        require return_data.size >= 32
                                        if not mem[_21021 + (2 * ceil32(return_data.size)) + 558]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x775361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_21021 + ceil32(return_data.size) + (2 * ceil32(return_data.size)) + 637 len 22]
                                require arg1 < strategies.length
                                require ext_code.size(address(strategies[arg1]))
                                call address(strategies[arg1]).0xd0e30db0 with:
                                     gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            emit Deposit(msg.sender, arg2);
    require stor1 == stor1
}



}
