contract main {




// =====================  Runtime code  =====================


#
#  - sub_01b1689b(?)
#  - sub_0aeb730d(?)
#  - impermaxRedeem(address arg1, uint256 arg2, bytes arg3)
#  - _fallback()
#
function impermaxBorrow(address arg1, address arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require arg4 + arg4.length + 36 <= calldata.size
}

function withdraw(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.balanceOf(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    call arg1.transfer(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args 0xf8f181d466d44974257f9ccf0ce8398b7e059054, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_8378ab5a(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require ext_code.size(address(arg2))
    call address(arg2).exchangeRate() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg2))
    staticcall address(arg2).balanceOf(address arg1) with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
        revert with 'NH{q', 17
    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 < arg3:
        revert with 0, 'noliq'
    require ext_code.size(address(arg2))
    staticcall address(arg2).borrowable0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).borrowable1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).accrueInterest() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).accrueInterest() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(arg2))
    call address(arg2).accountLiquidity(address arg1) with:
         gas gas_remaining wei
        args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if ext_call.return_data[32] <= 0:
        revert with 0, 'has liquidity'
    require ext_code.size(address(arg2))
    staticcall address(arg2).underlying() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).underlying() with:
            gas gas_remaining wei
    if not ext_call.success:
        require ext_code.size(address(arg2))
        call address(arg2).exchangeRate() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        staticcall address(arg2).liquidationIncentive() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        call address(arg2).getPrices() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).borrowBalance(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).borrowBalance(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        staticcall address(arg2).safetyMarginSqrt() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        if ext_call.return_data[0] and ext_call.return_data[32] > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18:
            if ext_call.return_data[0] * ext_call.return_data[32] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[32] / 10^18:
                revert with 'NH{q', 17
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18):
                revert with 'NH{q', 17
            if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18):
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            require ext_code.size(address(arg2))
            staticcall address(arg2).balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] >= ext_call.return_data[0]:
                if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                revert with 'NH{q', 17
            if ext_call.return_data[0] * ext_call.return_data[32] / 10^18 > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 > !(10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            require ext_code.size(address(arg2))
            staticcall address(arg2).balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] >= ext_call.return_data[0]:
                if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 <= 10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 <= 10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[0]) > !(3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and Mask(112, 0, ext_call.return_data[0]) > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if Mask(112, 0, ext_call.return_data[32]) > !(3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and Mask(112, 0, ext_call.return_data[32]) > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
    else:
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(arg2))
        call address(arg2).exchangeRate() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        staticcall address(arg2).liquidationIncentive() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        call address(arg2).getPrices() with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).borrowBalance(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).borrowBalance(address arg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg2))
        staticcall address(arg2).safetyMarginSqrt() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        if ext_call.return_data[0] and ext_call.return_data[32] > -1 / ext_call.return_data[0]:
            revert with 'NH{q', 17
        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18:
            if ext_call.return_data[0] * ext_call.return_data[32] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[32] / 10^18:
                revert with 'NH{q', 17
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18):
                revert with 'NH{q', 17
            if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18):
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            require ext_code.size(address(arg2))
            staticcall address(arg2).balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] >= ext_call.return_data[0]:
                if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14] > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[50 len 14] > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] <= ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14] > !(3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[50 len 14] > !(3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ((10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[32] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                revert with 'NH{q', 17
            if ext_call.return_data[0] * ext_call.return_data[32] / 10^18 > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 > !(10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]):
                revert with 'NH{q', 17
            if not ext_call.return_data[0]:
                revert with 'NH{q', 18
            require ext_code.size(address(arg2))
            staticcall address(arg2).balanceOf(address arg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).getReserves() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            require ext_call.return_data[0] == ext_call.return_data[18 len 14]
            require ext_call.return_data[32] == ext_call.return_data[50 len 14]
            require ext_call.return_data[64] == ext_call.return_data[92 len 4]
            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                revert with 'NH{q', 17
            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] >= ext_call.return_data[0]:
                if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 <= 10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14] > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= ext_call.return_data[0]:
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[50 len 14] > !(3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 <= 10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0]:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] / ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 0, 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[18 len 14] > !(3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                        revert with 'NH{q', 17
                    if not ext_call.return_data[0]:
                        revert with 'NH{q', 18
                    if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg2))
                        call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                             gas gas_remaining wei
                            args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 96, 224, address(arg1), address(arg2), 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * 10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / 1000), 0, address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                    else:
                        if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 'NH{q', 17
                        if ext_call.return_data[18 len 14] > !(3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] and ext_call.return_data[18 len 14] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000):
                            revert with 'NH{q', 18
                        if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0] < ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[0]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                            revert with 'NH{q', 17
                        if not ext_call.return_data[32]:
                            revert with 'NH{q', 18
                        if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] > ext_call.return_data[0]:
                            if ext_call.return_data[0] > 0x5555555555555555555555555555555555555555555555555555555555555555:
                                revert with 'NH{q', 17
                            if ext_call.return_data[50 len 14] > !(3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !(ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
                        else:
                            if ext_call.return_data[50 len 14] > !(3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if ext_call.return_data[32] and ext_call.return_data[50 len 14] > -1 / ext_call.return_data[32]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) > 0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] and ext_call.return_data[0] > -1 / ext_call.return_data[0]:
                                revert with 'NH{q', 17
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 and ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) > -1 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) and ext_call.return_data[0] > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000):
                                revert with 'NH{q', 17
                            if (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 and ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) > -1 / (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18:
                                revert with 'NH{q', 17
                            if not ext_call.return_data[0]:
                                revert with 'NH{q', 18
                            if ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] > !((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]) and ext_call.return_data[0] > -1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            require ext_code.size(address(arg2))
                            call address(arg2).flashRedeem(address arg1, uint256 arg2, bytes arg3) with:
                                 gas gas_remaining wei
                                args address(this.address), (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) + ((10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) * ext_call.return_data[0] / 10^18 * ext_call.return_data[32] * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000) / ext_call.return_data[0] * ext_call.return_data[0]) / 10^18, 96, 224, address(arg1), address(arg2), ext_call.return_data[0], (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) + (3 * (10^18 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] / 10^18 * ext_call.return_data[0]) + (10^18 * ext_call.return_data[0] * ext_call.return_data[32] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0]) / ext_call.return_data[0]) - (10^18 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * ext_call.return_data[0] * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] + (3 * ext_call.return_data[0] / 1000) / ext_call.return_data[0]) / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[32] / 1000), address(ext_call.return_data[0]), address(ext_call.return_data[0]), address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}



}
